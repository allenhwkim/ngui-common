var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/DynamicComponentService.html",[0,1.784,1,1.122]],["body/injectables/DynamicComponentService.html",[0,2.196,1,1.915,2,2.542,3,0.375,4,0.375,5,0.322,6,0.535,7,0.535,8,3.491,9,2.08,10,1.217,11,3.668,12,1.383,13,3.604,14,2.949,15,3.604,16,1.542,17,0.817,18,0.044,19,3.604,20,3.604,21,3.604,22,1.939,23,0.531,24,0.258,25,3.604,26,3.604,27,3.604,28,3.604,29,3.199,30,2.949,31,3.604,32,3.604,33,3.604,34,3.604,35,3.604,36,3.604,37,3.604,38,3.604,39,4.555,40,1.542,41,3.604,42,1.725,43,0.557,44,0.995,45,4.995,46,4.187,47,1.239,48,3.604,49,4.555,50,1.088,51,2.542,52,1.185,53,3.604,54,1.156,55,1.156,56,1.156,57,3.604,58,2.542,59,1.405,60,2.949,61,3.604,62,3.604,63,3.604,64,2.196,65,3.604,66,2.949,67,3.604,68,2.949,69,3.604,70,3.604,71,3.604,72,3.604,73,0.882,74,2.542,75,3.59,76,3.604,77,2.542,78,4.187,79,2.542,80,2.518,81,3.604,82,4.187,83,3.604,84,2.949,85,1.542,86,1.776,87,0.492,88,2.542,89,2.542,90,2.542,91,3.604,92,1.725,93,2.542,94,1.939,95,2.542,96,4.187,97,0.702,98,2.542,99,2.542,100,2.949,101,1.549,102,1.776,103,2.542,104,2.542,105,2.542,106,2.542,107,0.026,108,0.026]],["title/components/NguiAutocompleteComponent.html",[12,0.721,109,1.006]],["body/components/NguiAutocompleteComponent.html",[1,0.966,3,0.17,4,0.17,5,0.146,6,0.564,7,0.564,11,0.806,12,0.621,16,0.493,17,0.609,18,0.044,22,2.318,23,0.146,24,0.062,29,1.185,40,2.107,42,0.552,43,0.252,44,0.536,47,0.668,52,1.375,54,0.912,55,1.105,56,0.912,59,1.518,64,1.185,73,1.026,75,0.806,85,0.832,87,0.223,92,1.917,94,0.62,97,1.279,107,0.014,108,0.014,109,1.017,110,1.536,111,0.703,112,0.703,113,2.523,114,0.943,115,1.944,116,1.747,117,0.832,118,1.356,119,0.442,120,1.783,121,3.096,122,1.356,123,2.52,124,2.52,125,2.52,126,2.52,127,2.52,128,2.52,129,2.062,130,2.52,131,2.52,132,2.52,133,2.52,134,2.52,135,2.52,136,2.52,137,2.52,138,2.52,139,2.52,140,2.52,141,2.062,142,2.52,143,2.52,144,2.52,145,2.52,146,2.52,147,2.52,148,2.44,149,1.591,150,1.713,151,1.591,152,1.591,153,1.591,154,1.591,155,1.185,156,2.958,157,1.591,158,2.958,159,2.958,160,1.592,161,2.958,162,2.958,163,1.944,164,1.944,165,1.944,166,2.958,167,1.944,168,2.062,169,2.062,170,1.046,171,2.52,172,2.52,173,3.303,174,1.046,175,2.062,176,2.067,177,2.308,178,1.944,179,2.52,180,1.917,181,1.018,182,1.433,183,1.761,184,1.591,185,1.153,186,1.153,187,1.358,188,1.206,189,1.153,190,1.778,191,2.067,192,1.153,193,1.356,194,4.862,195,1.153,196,1.373,197,1.536,198,2.421,199,0.867,200,1.234,201,0.806,202,0.806,203,0.806,204,0.943,205,1.778,206,1.591,207,0.806,208,2.308,209,2.154,210,1.358,211,0.943,212,0.943,213,0.806,214,0.806,215,0.806,216,1.591,217,1.153,218,0.703,219,1.185,220,0.806,221,1.153,222,0.806,223,1.153,224,2.958,225,2.268,226,1.591,227,1.153,228,1.803,229,1.153,230,1.591,231,1.153,232,1.153,233,1.153,234,1.153,235,1.944,236,1.153,237,1.944,238,2.52,239,1.153,240,1.944,241,1.153,242,1.153,243,1.944,244,3.581,245,2.958,246,2.062,247,1.153,248,1.153,249,1.153,250,0.745,251,0.943,252,0.703,253,0.943,254,0.943,255,0.943,256,1.134,257,0.806,258,0.703,259,1.761,260,0.806,261,1.153,262,0.943,263,0.943,264,0.806,265,1.153,266,1.153,267,2.58,268,1.153,269,1.153,270,1.153,271,1.153,272,1.153,273,1.153,274,1.944,275,1.153,276,1.536,277,1.046,278,1.185,279,1.153,280,2.062,281,1.358,282,1.591,283,0.806,284,1.153,285,1.153,286,0.493,287,1.153,288,1.153,289,0.943,290,0.943,291,1.591,292,1.153,293,1.153,294,0.703,295,0.943,296,0.943,297,0.943,298,1.153,299,0.943,300,0.703,301,1.153,302,1.153,303,1.153,304,1.185,305,1.944,306,1.944,307,1.591,308,2.931,309,1.944,310,1.944,311,0.703,312,0.62,313,0.806,314,0.806,315,1.046,316,1.046,317,0.806,318,1.153,319,0.943,320,1.153,321,1.153,322,1.944,323,2.958,324,2.958,325,1.153,326,1.153,327,1.944,328,1.944,329,1.944,330,1.153,331,1.153,332,1.153,333,0.62,334,0.62,335,0.62,336,1.153,337,1.153,338,1.153,339,1.153,340,1.153,341,1.153,342,1.153,343,1.153,344,1.153,345,1.592,346,1.944,347,1.944,348,2.958,349,2.52,350,2.958,351,2.52,352,2.062,353,1.153,354,0.943,355,1.944,356,1.944,357,1.153,358,1.153,359,1.153,360,2.52,361,1.153,362,1.356,363,3.119,364,0.806,365,0.943,366,1.153,367,0.943,368,1.153,369,1.153,370,1.153,371,1.153,372,1.153,373,1.153,374,1.153,375,1.153,376,1.153,377,1.153,378,1.944,379,1.153,380,1.944,381,1.153,382,1.944,383,1.153,384,1.153,385,1.944,386,1.153,387,0.943,388,1.153,389,1.153,390,1.153,391,1.153,392,1.944,393,1.153,394,1.153,395,1.153,396,2.52,397,0.943,398,1.153,399,1.153,400,1.153,401,1.153,402,0.703,403,1.153,404,1.153,405,1.153,406,1.153,407,0.943,408,2.52,409,1.944,410,1.153,411,0.703,412,0.806,413,0.745,414,1.944,415,1.944,416,1.153,417,1.153,418,1.153,419,1.153,420,1.153,421,0.703,422,0.931,423,0.284,424,1.803,425,0.703,426,0.703,427,0.442,428,0.703,429,0.703,430,0.396,431,0.396,432,0.62,433,0.703,434,0.355,435,0.703,436,0.396,437,0.703]],["title/modules/NguiCommonModule.html",[438,1.575,439,1.575]],["body/modules/NguiCommonModule.html",[3,0.555,4,0.555,5,0.477,6,0.402,7,0.402,17,0.905,18,0.043,23,0.477,24,0.201,87,0.728,97,1.405,107,0.034,108,0.034,439,3.173,440,1.441,441,2.002,442,3.076,443,3.076,444,3.076,445,2.513,446,2.812,447,2.812,448,2.517,449,2.023,450,1.293,451,3.759,452,2.517,453,2.851,454,2.517,455,2.627,456,3.076,457,3.076,458,3.759,459,3.076,460,3.759]],["title/pipes/NguiHighlightPipe.html",[461,1.575,462,1.575]],["body/pipes/NguiHighlightPipe.html",[3,0.579,4,0.579,5,0.497,6,0.514,7,0.514,17,0.666,18,0.043,23,0.497,24,0.21,47,1.349,52,0.966,54,1.083,55,1.432,56,1.083,59,1.209,73,0.759,87,0.759,92,1.878,94,2.111,107,0.034,108,0.034,117,1.678,119,1.504,180,2.764,190,2.584,413,1.504,461,2.584,462,2.584,463,3.922,464,3.93,465,3.21,466,4.802,467,3.922,468,4.802,469,5.408,470,3.922,471,4.802,472,4.802,473,5.19,474,3.922,475,3.922,476,3.922,477,3.922]],["title/components/NguiInviewComponent.html",[12,0.721,427,1.122]],["body/components/NguiInviewComponent.html",[3,0.281,4,0.281,5,0.241,6,0.576,7,0.576,10,0.912,12,1.154,16,1.247,17,0.495,18,0.043,22,2.297,23,0.241,24,0.102,40,1.695,42,1.694,43,0.417,44,0.804,47,1.002,50,1.247,52,1.337,54,0.976,55,1.242,56,0.976,59,1.222,60,2.384,68,2.384,73,0.935,80,2.036,85,1.247,86,1.331,87,0.369,94,1.025,97,1.333,101,1.775,102,2.036,107,0.021,108,0.021,109,0.655,110,2.156,111,1.161,112,1.161,116,0.655,117,1.247,118,1.904,119,0.73,120,2.119,122,1.904,150,2.162,160,2.132,170,1.568,174,1.568,181,1.49,182,1.362,188,1.395,193,2.521,196,1.519,199,0.655,200,0.898,202,2.036,213,2.036,225,1.926,246,0.912,250,2.045,256,0.73,258,2.415,259,2.036,267,2.132,276,2.156,277,1.025,278,1.775,286,1.695,294,2.415,304,2.156,307,3.242,311,1.161,345,2.297,362,1.025,413,1.356,421,1.161,422,1.694,423,0.469,424,2.415,425,1.161,426,1.161,427,1.519,428,1.161,429,1.161,430,0.655,431,0.655,432,1.025,433,1.161,434,0.587,435,1.161,436,0.655,437,1.161,478,3.761,479,1.559,480,2.036,481,2.744,482,2.913,483,4.684,484,2.415,485,2.472,486,2.472,487,3.537,488,2.895,489,3.537,490,2.913,491,2.384,492,2.768,493,2.895,494,2.744,495,2.297,496,1.161,497,2.895,498,2.913,499,1.905,500,2.913,501,2.384,502,3.242,503,2.913,504,2.913,505,2.913,506,3.961,507,4.502,508,3.961,509,2.913,510,2.913,511,2.036,512,2.036,513,2.036,514,2.036,515,2.036,516,2.384,517,2.384,518,1.905,519,2.945,520,1.905,521,2.895,522,2.036,523,2.156,524,2.895,525,1.905,526,1.905,527,2.913,528,1.905,529,2.384,530,2.913,531,2.913,532,2.913,533,2.913,534,1.905,535,2.384,536,1.905,537,1.559,538,1.905,539,2.913,540,1.905,541,2.384,542,1.905,543,1.905,544,2.913,545,2.036,546,1.905,547,1.559,548,1.559,549,0.912,550,1.775,551,1.559,552,2.384,553,2.384,554,1.559,555,1.559,556,1.559,557,1.559,558,1.559,559,1.559,560,1.559,561,1.559,562,1.905,563,1.905,564,1.905,565,1.905,566,1.905,567,1.905,568,1.905,569,1.905]],["title/directives/NguiInviewDirective.html",[423,0.721,431,1.006]],["body/directives/NguiInviewDirective.html",[3,0.364,4,0.364,5,0.313,6,0.582,7,0.582,10,1.181,17,0.599,18,0.043,23,0.313,24,0.132,40,1.762,42,1.971,43,0.54,44,0.973,47,1.213,50,1.509,52,1.325,54,0.973,55,0.973,56,0.973,59,1.269,73,0.986,86,1.723,87,0.477,101,2.149,102,2.464,107,0.025,108,0.025,117,1.509,118,2.216,119,0.945,120,1.509,148,2.509,150,2.301,160,2.418,170,1.898,174,1.898,181,0.76,182,0.848,188,1.688,193,2.74,196,1.996,197,2.739,225,2.116,258,3.014,286,2.034,333,1.327,334,1.327,335,1.327,413,1.579,423,0.869,430,0.848,431,1.213,432,2.852,450,1.213,478,3.803,481,3.278,484,2.149,485,2.877,488,3.369,491,2.886,492,3.14,494,3.014,495,2.558,496,1.503,497,3.369,511,2.464,512,2.464,513,2.464,514,2.464,515,2.464,516,2.886,517,2.886,519,3.173,521,3.369,522,2.464,523,2.509,524,3.369,535,2.886,537,2.018,541,2.886,547,2.018,548,2.018,549,1.181,550,1.503,551,2.018,552,2.886,553,2.886,554,2.886,555,2.886,556,2.018,557,2.018,558,2.018,559,2.018,560,2.018,561,2.018,570,2.018,571,4.338,572,3.526,573,3.526,574,2.466,575,2.466,576,2.466,577,2.466,578,2.466,579,3.526,580,2.466,581,2.466,582,2.466,583,2.466,584,2.466]],["title/modules/NguiInviewModule.html",[438,1.575,445,1.252]],["body/modules/NguiInviewModule.html",[3,0.569,4,0.569,5,0.488,6,0.412,7,0.412,17,0.913,18,0.043,23,0.602,24,0.206,87,0.746,107,0.034,108,0.034,427,2.267,431,2.034,440,1.476,441,2.032,445,2.497,448,2.555,449,2.072,450,1.324,452,2.072,453,2.894,454,2.555,455,2.691,549,1.844,585,3.151,586,3.151,587,3.151,588,3.85,589,2.894,590,3.318,591,3.318,592,3.85,593,3.85]],["title/components/NguiInviewPageComponent.html",[12,0.721,256,1.122]],["body/components/NguiInviewPageComponent.html",[3,0.274,4,0.274,5,0.235,6,0.568,7,0.568,10,0.889,12,1.144,16,1.222,17,0.315,18,0.044,22,2.579,23,0.235,24,0.1,40,1.49,43,0.407,44,0.788,47,0.982,50,1.222,52,1.293,54,0.788,55,1.165,56,0.788,59,1.301,64,1.741,66,1.519,73,0.928,80,1.996,85,1.222,87,0.359,92,0.889,97,1.322,107,0.021,108,0.021,109,0.638,110,2.122,111,1.131,112,1.131,113,2.54,116,0.638,117,1.222,118,1.873,119,0.712,120,2.103,122,1.873,129,3.647,150,2.147,155,2.122,160,2.103,170,1.537,181,1.073,182,1.197,187,1.996,199,0.638,200,1.205,201,2.731,205,2.498,207,3.244,208,1.996,209,2.103,214,1.996,215,1.996,225,2.147,228,3.339,246,1.367,250,2.114,256,1.499,267,1.873,276,2.382,277,0.999,278,1.741,281,1.996,283,2.731,286,1.673,294,1.741,300,2.382,304,2.122,311,1.131,345,2.103,354,2.849,362,0.999,402,2.122,411,1.741,421,1.131,422,1.667,423,0.457,424,2.382,425,1.131,426,1.131,427,0.712,428,1.131,429,1.131,430,0.638,431,0.638,432,0.999,433,1.131,434,0.572,435,1.131,436,0.638,437,1.131,450,1.648,480,1.996,481,2.92,484,1.741,485,2.432,486,2.949,492,2.731,494,2.122,495,1.537,496,1.131,511,1.996,512,1.996,519,1.741,545,1.996,550,2.122,594,1.519,595,4.219,596,2.337,597,2.856,598,2.337,599,3.647,600,3.114,601,2.856,602,3.481,603,3.481,604,3.481,605,3.908,606,3.908,607,2.856,608,3.481,609,2.856,610,1.856,611,3.647,612,2.856,613,2.856,614,1.856,615,1.856,616,3.908,617,3.908,618,1.856,619,1.856,620,1.856,621,2.856,622,2.856,623,1.856,624,1.996,625,1.856,626,2.856,627,2.337,628,2.856,629,1.856,630,2.337,631,1.856,632,1.856,633,2.856,634,1.856,635,3.908,636,3.908,637,1.856,638,2.856,639,2.856,640,3.481,641,2.856,642,1.856,643,1.856,644,3.481,645,1.856,646,1.856,647,1.856,648,1.856]],["title/directives/NguiListDirective.html",[423,0.721,434,0.902]],["body/directives/NguiListDirective.html",[3,0.53,4,0.53,5,0.455,6,0.579,7,0.579,17,0.61,18,0.043,23,0.455,24,0.192,30,2.936,42,2.387,43,0.786,44,1.254,50,1.535,52,1.291,54,0.99,55,0.99,56,0.99,73,1.014,87,0.695,97,1.254,107,0.033,108,0.033,113,2.588,119,1.376,120,1.944,148,2.769,150,2.242,174,2.445,176,3.483,177,3.778,193,3.018,197,3.194,200,1.401,218,2.769,219,2.769,220,3.174,222,3.174,286,2.313,333,1.931,334,1.931,335,1.931,413,1.742,423,1.119,430,1.234,434,1.401,496,2.187,649,2.936,650,4.542,651,3.588,652,3.588]],["title/directives/NguiListItemDirective.html",[423,0.721,436,1.006]],["body/directives/NguiListItemDirective.html",[3,0.291,4,0.291,5,0.25,6,0.588,7,0.588,17,0.775,18,0.043,23,0.25,24,0.106,29,2.458,40,0.844,43,0.432,44,0.826,47,1.029,50,1.28,52,1.345,54,0.997,55,0.997,56,1.309,59,1.407,73,0.839,87,0.382,92,2.27,97,1.348,107,0.021,108,0.021,109,1.569,113,2.632,116,1.569,117,1.28,118,1.945,119,0.756,120,1.28,121,1.378,122,2.171,155,2.203,160,2.171,170,1.61,181,0.922,183,1.378,188,1.73,190,1.061,191,1.378,196,2.108,199,1.029,200,1.746,205,1.061,218,1.202,225,2.248,260,2.09,267,1.061,277,2.333,286,1.726,300,2.458,308,3.301,314,1.378,315,1.61,316,1.61,317,1.378,333,1.61,334,1.61,335,1.61,345,1.061,362,2.456,363,1.614,364,1.378,365,1.614,367,3.301,397,2.448,411,1.202,423,0.737,430,0.678,434,1.407,436,1.029,502,2.448,550,2.781,600,1.378,624,2.819,653,1.614,654,3.614,655,3.614,656,3.614,657,4.033,658,4.335,659,4.033,660,2.991,661,2.958,662,2.991,663,1.972,664,3.614,665,3.614,666,3.614,667,3.614,668,2.991,669,2.448,670,1.972,671,3.548,672,2.991,673,2.991,674,2.991,675,2.991,676,2.991,677,2.991,678,2.991,679,2.991,680,2.991,681,2.991,682,2.991,683,2.991,684,1.972,685,1.972,686,1.972,687,1.972,688,1.614,689,1.614,690,2.991,691,1.972,692,1.972,693,1.614,694,1.972,695,2.991,696,1.972,697,1.972,698,1.972,699,1.972,700,1.972,701,1.972,702,2.991,703,2.991,704,1.972,705,1.972,706,1.972,707,2.448,708,2.991,709,2.448,710,2.991,711,1.972,712,1.972,713,2.991,714,1.972,715,1.972,716,1.972,717,1.972,718,1.972,719,1.972,720,1.972,721,1.972,722,1.972,723,2.991,724,1.972,725,1.972,726,1.972,727,2.991,728,4.563,729,1.972,730,1.972,731,4.033,732,1.972,733,4.563,734,1.972,735,1.614,736,1.972,737,1.972,738,1.972,739,2.991,740,1.972,741,2.991,742,2.991]],["title/modules/NguiListModule.html",[438,1.575,446,1.401]],["body/modules/NguiListModule.html",[3,0.488,4,0.488,5,0.419,6,0.354,7,0.354,17,0.948,18,0.043,23,0.546,24,0.177,87,0.64,97,0.912,107,0.031,108,0.031,109,1.995,116,1.995,199,1.137,200,1.019,250,1.268,256,2.224,314,2.31,434,1.788,436,1.995,440,1.268,441,1.844,445,2.312,446,2.845,448,2.319,449,1.779,450,1.137,452,2.319,453,2.627,454,2.319,455,2.31,456,2.705,457,2.705,549,1.583,589,2.627,590,3.012,591,3.683,688,2.705,689,2.705,743,2.705,744,3.306,745,2.705,746,2.705,747,3.306,748,3.306,749,2.705]],["title/modules/NguiUtilsModule.html",[438,1.575,447,1.401]],["body/modules/NguiUtilsModule.html",[1,2.176,3,0.56,4,0.56,5,0.48,6,0.405,7,0.405,17,0.951,18,0.043,23,0.596,24,0.203,87,0.734,107,0.034,108,0.034,196,1.453,312,2.53,440,1.453,441,2.011,447,2.769,448,2.53,449,2.039,450,1.303,452,2.039,453,2.865,454,2.53,459,3.101,462,3.176,549,1.814,589,2.865,590,3.285,591,2.648,750,3.101,751,3.101,752,3.101,753,3.101,754,3.789,755,3.847,756,3.789,757,3.789,758,3.101,759,2.865,760,3.789,761,3.789]],["title/components/NguiVirtualListComponent.html",[12,0.721,116,1.006]],["body/components/NguiVirtualListComponent.html",[1,1.846,3,0.237,4,0.237,5,0.203,6,0.572,7,0.572,8,1.121,10,0.768,11,2.523,12,0.781,16,1.545,17,0.539,18,0.043,22,2.69,23,0.203,24,0.086,29,2.4,40,1.09,42,2.007,43,0.351,44,0.703,47,0.876,50,1.09,52,1.305,54,0.703,55,1.087,56,0.703,59,0.977,64,1.553,73,0.995,75,2.215,85,1.09,87,0.311,97,1.329,107,0.018,108,0.018,109,0.552,110,1.932,111,0.978,112,0.978,113,2.557,116,1.242,117,1.09,119,0.615,120,2.01,122,1.706,141,2.594,148,3.047,149,3.223,150,1.881,151,2.594,152,2.594,153,2.594,154,2.594,155,2.2,157,2.085,168,2.955,169,2.955,174,1.371,175,3.431,176,2.215,177,2.752,181,0.786,182,0.876,187,2.523,193,2.591,196,1.685,197,2.555,198,3.431,199,1.91,200,1.484,201,2.523,202,1.781,203,1.781,204,2.085,205,2.365,206,2.955,207,2.93,208,1.781,209,2.256,210,2.523,211,2.085,212,3.223,213,1.781,214,2.523,215,2.523,216,3.431,218,1.553,219,1.553,220,1.781,222,1.781,225,1.794,226,2.085,228,2.4,230,2.085,246,1.22,250,1.384,251,2.955,252,1.553,253,2.085,254,2.085,255,2.085,256,1.685,257,1.781,258,1.553,259,2.752,260,1.781,262,2.085,263,2.085,264,1.781,267,1.706,276,1.932,277,1.371,278,1.553,280,2.955,281,1.781,282,2.085,283,2.752,286,1.685,289,2.085,290,2.085,291,3.431,294,1.553,295,2.085,296,2.085,297,2.085,299,2.085,300,2.4,304,1.932,311,0.978,345,0.863,352,2.594,362,0.863,402,0.978,413,1.215,421,0.978,422,1.729,423,0.395,424,2.2,425,0.978,426,0.978,427,0.615,428,0.978,429,0.978,430,0.552,431,0.552,432,1.706,433,0.978,434,0.495,435,0.978,436,0.552,437,0.978,450,1.442,480,1.781,481,2.555,484,1.553,486,2.215,571,2.085,596,2.085,598,2.085,600,1.121,709,2.955,749,1.313,758,1.313,762,1.313,763,2.085,764,2.548,765,2.548,766,2.548,767,2.548,768,2.548,769,3.61,770,2.548,771,3.17,772,1.604,773,2.548,774,1.604,775,1.604,776,1.604,777,1.604,778,1.604,779,1.604,780,1.604,781,1.604,782,1.604,783,1.604,784,1.604,785,1.604,786,1.604,787,1.604,788,1.604,789,1.604,790,2.548,791,1.604,792,1.313,793,1.604,794,1.604,795,1.604,796,1.604,797,1.604,798,1.604,799,1.604,800,1.313,801,1.604,802,1.604]],["title/classes/NoMatchFound.html",[24,0.157,315,1.575]],["body/classes/NoMatchFound.html",[3,0.633,4,0.633,5,0.543,6,0.542,7,0.542,18,0.042,23,0.543,24,0.23,43,0.939,44,1.398,52,1.056,73,0.83,107,0.036,108,0.036,180,2.052,181,1.322,182,1.474,190,2.998,191,3.54,315,2.726,422,2.582,803,2.613,804,4.146,805,3.508,806,4.287]],["title/classes/NoneSelect.html",[24,0.157,316,1.575]],["body/classes/NoneSelect.html",[3,0.639,4,0.639,5,0.548,6,0.545,7,0.545,18,0.042,23,0.548,24,0.232,43,0.947,44,1.406,52,1.066,73,0.838,107,0.037,108,0.037,180,2.071,181,1.334,182,1.488,183,3.559,316,2.741,422,2.591,803,2.637,807,4.168,808,3.54,809,4.326]],["title/changelog.html",[810,1.715,811,1.715,812,2.454]],["body/changelog.html",[12,0.945,14,3.139,17,0.652,18,0.034,97,1.481,100,3.139,101,2.337,107,0.034,108,0.034,199,1.319,200,1.182,209,2.064,210,2.68,228,2.886,250,1.97,407,3.139,412,3.309,413,1.47,493,3.139,494,2.886,495,2.064,522,2.68,763,3.139,813,3.835,814,3.835,815,5.138,816,3.835,817,4.205,818,4.512,819,3.835,820,3.835,821,3.835,822,3.835,823,3.835,824,3.835,825,3.835,826,3.835,827,3.835,828,3.835,829,3.835,830,3.835,831,3.835,832,4.736,833,3.835,834,3.139,835,3.835,836,3.835,837,3.835,838,3.835,839,3.835,840,3.139,841,3.835,842,3.835,843,3.835,844,3.835,845,4.736,846,3.835,847,3.835,848,3.835,849,4.736,850,3.835,851,3.835,852,3.835,853,3.835,854,3.876,855,3.835,856,3.835,857,3.835,858,3.835,859,3.835,860,3.835,861,3.835,862,3.139]],["title/coverage.html",[863,2.777]],["body/coverage.html",[0,2.166,1,1.363,5,0.451,6,0.627,7,0.627,8,2.484,9,2.909,12,1.286,18,0.042,24,0.266,73,0.688,107,0.032,108,0.032,109,1.222,113,2.581,114,2.909,116,1.222,190,1.913,199,1.222,200,1.096,250,1.363,252,2.166,256,1.363,312,1.913,313,2.484,315,1.913,316,1.913,387,3.695,411,3.183,413,1.363,423,1.223,427,1.363,431,1.222,434,1.096,436,1.222,461,1.913,462,1.913,464,2.909,465,2.909,478,3.155,479,2.909,570,2.909,594,2.909,649,2.909,653,2.909,735,2.909,759,2.166,762,2.909,804,2.909,805,2.909,807,2.909,808,2.909,863,2.484,864,2.909,865,3.554,866,3.554,867,3.554,868,3.554,869,3.554,870,3.554,871,3.554,872,3.554,873,3.554,874,3.554,875,3.554,876,3.554,877,3.554,878,3.554,879,4.515,880,3.554,881,3.554,882,2.909,883,3.554,884,2.909,885,3.554,886,3.554,887,3.554,888,3.554]],["title/dependencies.html",[441,1.504,889,2.454]],["body/dependencies.html",[18,0.043,84,3.516,87,0.832,107,0.036,108,0.036,319,3.516,441,1.839,549,2.057,890,4.296,891,5.866,892,4.296,893,4.296,894,5.072,895,3.544,896,4.296,897,4.296,898,4.296,899,4.296,900,4.296,901,4.296]],["title/miscellaneous/functions.html",[902,2.008,903,2.456]],["body/miscellaneous/functions.html",[6,0.453,7,0.453,16,1.81,18,0.041,43,0.926,54,1.167,55,1.167,56,1.167,59,1.304,73,1.038,107,0.036,108,0.036,150,1.81,180,2.406,181,1.304,182,1.454,196,1.622,219,2.578,246,2.025,257,2.955,312,2.704,313,2.955,364,2.955,495,2.885,624,3.512,661,3.461,669,3.461,800,3.461,882,4.112,902,3.461,903,2.955,904,4.229,905,5.361,906,4.229]],["title/index.html",[43,0.537,810,1.715,811,1.715]],["body/index.html",[1,1.416,12,1.343,17,0.786,18,0.041,23,0.468,24,0.198,85,1.58,97,1.535,107,0.033,108,0.033,121,2.581,199,1.27,200,1.557,209,1.987,250,1.937,252,2.251,312,1.987,412,2.581,423,0.91,430,1.27,438,1.987,439,1.987,440,1.416,445,2.162,446,2.418,447,2.215,452,1.987,454,1.987,461,1.987,519,2.251,523,2.251,589,2.251,611,3.022,707,3.786,755,3.022,818,3.786,863,2.581,903,3.233,907,5.294,908,3.693,909,3.693,910,3.693,911,3.693,912,3.693,913,3.693,914,3.693,915,3.693,916,3.693,917,3.693,918,3.693,919,5.051,920,3.693,921,3.693,922,4.626,923,3.693,924,3.693,925,4.626,926,3.693,927,3.693,928,3.693,929,3.693,930,3.693,931,3.693,932,3.693,933,3.693,934,3.693,935,3.693,936,3.693,937,3.693,938,3.693,939,3.693,940,3.693,941,3.693,942,3.693,943,3.693,944,3.693]],["title/classes/konsole.html",[24,0.157,759,1.784]],["body/classes/konsole.html",[3,0.766,4,0.293,5,0.251,6,0.546,7,0.546,10,0.949,16,0.848,18,0.044,23,0.251,24,0.106,43,0.434,44,0.829,47,1.033,52,1.234,54,1.311,55,1.311,56,1.311,59,1.574,73,0.947,92,1.736,94,1.067,107,0.022,108,0.022,180,1.936,181,1.247,182,1.033,184,1.623,188,0.949,203,2.099,205,2.918,225,2.185,246,1.438,317,2.099,333,1.951,334,1.951,335,1.951,402,1.83,513,3.756,529,2.458,545,4.01,599,3.742,627,4.179,671,3.556,693,1.623,759,1.83,792,2.458,803,1.208,840,2.458,884,1.623,895,1.385,945,1.982,946,1.982,947,3.003,948,1.982,949,3.625,950,4.892,951,4.572,952,5.667,953,4.044,954,3.003,955,4.572,956,3.003,957,3.003,958,3.003,959,3.003,960,3.003,961,3.003,962,3.003,963,1.982,964,3.003,965,1.982,966,5.375,967,5.375,968,3.003,969,1.982,970,3.003,971,5.106,972,4.345,973,3.003,974,1.982,975,3.003,976,1.982,977,3.003,978,3.003,979,1.982,980,3.003,981,1.982,982,3.003,983,1.982,984,3.003,985,1.982,986,3.003,987,1.982,988,3.003,989,1.982,990,3.003,991,1.982,992,3.003,993,1.982,994,1.982,995,3.003,996,1.982,997,1.982,998,1.982,999,1.982,1000,1.982,1001,1.982,1002,1.982,1003,1.982,1004,1.982,1005,1.982,1006,3.003,1007,3.003,1008,1.982,1009,1.982,1010,1.982,1011,1.982,1012,1.982,1013,1.982,1014,1.982,1015,1.982,1016,1.982,1017,1.982,1018,1.982,1019,1.982,1020,3.003,1021,3.625,1022,4.044,1023,1.982,1024,4.044,1025,4.044,1026,3.625,1027,3.003,1028,1.982,1029,1.982,1030,1.982]],["title/license.html",[810,1.715,811,1.715,1031,2.008]],["body/license.html",[18,0.034,107,0.034,108,0.034,196,1.462,264,2.664,450,1.311,501,3.12,523,2.876,630,3.861,834,4.194,854,3.12,862,3.12,864,3.12,1031,3.12,1032,3.812,1033,5.124,1034,3.812,1035,3.812,1036,3.812,1037,4.718,1038,3.812,1039,3.812,1040,3.812,1041,3.812,1042,3.812,1043,3.812,1044,5.788,1045,3.812,1046,3.812,1047,3.812,1048,3.812,1049,4.718,1050,3.812,1051,3.812,1052,3.812,1053,3.812,1054,3.812,1055,3.812,1056,3.812,1057,3.812,1058,3.812,1059,4.718,1060,3.812,1061,3.812,1062,3.812,1063,3.812,1064,3.812,1065,3.812,1066,3.812,1067,4.718,1068,4.718,1069,3.812,1070,3.812,1071,3.812,1072,3.812,1073,3.812,1074,3.812,1075,3.812,1076,3.812,1077,3.812,1078,3.812,1079,3.812,1080,3.812,1081,3.812,1082,3.812,1083,3.812,1084,3.812,1085,3.812,1086,3.812,1087,3.812,1088,3.812,1089,3.812,1090,3.812,1091,3.812,1092,3.812,1093,3.812,1094,3.812]],["title/modules.html",[440,1.524]],["body/modules.html",[18,0.037,107,0.037,108,0.037,439,2.399,440,1.71,445,1.908,446,2.135,447,2.135,817,4.617,895,3.943,1095,5.642,1096,5.642]],["title/overview.html",[1097,3.252]],["body/overview.html",[0,1.99,1,1.828,18,0.043,85,1.397,107,0.031,108,0.031,109,1.887,116,1.887,188,2.047,256,2.104,427,2.104,430,1.123,431,1.887,434,1.692,436,1.887,439,3.08,440,1.252,441,1.83,442,2.673,443,2.673,444,2.673,445,2.49,446,2.857,447,2.758,448,2.301,449,1.757,450,1.123,461,1.757,462,2.953,514,2.988,515,2.988,585,2.673,586,2.673,587,2.673,743,2.673,745,2.673,746,2.673,750,2.673,751,2.673,752,2.673,753,2.673,803,1.99,1097,2.673]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":411,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["0.11.4",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":613,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["02",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":188,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{},"overview.html":{}}}],["1,2,3",{"_index":38,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["1.0.0",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["1.component",{"_index":21,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["1/1",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":100,"title":{},"body":{"injectables/DynamicComponentService.html":{},"changelog.html":{}}}],["10/10",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["10/18",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":387,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"coverage.html":{}}}],["11",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["11/15",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["11/40",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":908,"title":{},"body":{"index.html":{}}}],["13.2.2",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":134,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["1st",{"_index":404,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["2",{"_index":513,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"classes/konsole.html":{}}}],["2.3.1",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":381,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["2018",{"_index":854,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":514,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"overview.html":{}}}],["300px",{"_index":130,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["37",{"_index":729,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["38",{"_index":730,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["39",{"_index":734,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["4",{"_index":515,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"overview.html":{}}}],["40",{"_index":735,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["4px",{"_index":138,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["5",{"_index":516,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["5/6",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":102,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["64",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":101,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"changelog.html":{}}}],["7.5.3",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":517,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["8/11",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":506,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["83",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["9/14",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["_actimer",{"_index":139,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["_escapedfromlist",{"_index":140,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["_focused",{"_index":141,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["_focustimer",{"_index":142,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["_lastselected",{"_index":143,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["_orginputvalue",{"_index":144,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["_previnputvalue",{"_index":145,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["_selectedfromlist",{"_index":146,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["above",{"_index":1066,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":124,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["abstract",{"_index":989,"title":{},"body":{"classes/konsole.html":{}}}],["accessors",{"_index":178,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["action",{"_index":1088,"title":{},"body":{"license.html":{}}}],["actions",{"_index":65,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["actual_component",{"_index":437,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["add",{"_index":412,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"changelog.html":{},"index.html":{}}}],["addaninviewpagetopages",{"_index":168,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["addautocompletelist",{"_index":156,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["addlist",{"_index":157,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["addlist(items",{"_index":226,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["addmorepages",{"_index":158,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["afterviewinit",{"_index":771,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["again",{"_index":769,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["allen",{"_index":1035,"title":{},"body":{"license.html":{}}}],["allitems",{"_index":416,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["allow",{"_index":64,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["alternative",{"_index":946,"title":{},"body":{"classes/konsole.html":{}}}],["and/or",{"_index":1057,"title":{},"body":{"license.html":{}}}],["angular",{"_index":818,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":549,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":87,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":768,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["appcomponent",{"_index":925,"title":{},"body":{"index.html":{}}}],["applied",{"_index":504,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["applies",{"_index":509,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["appmodule",{"_index":922,"title":{},"body":{"index.html":{}}}],["args",{"_index":972,"title":{},"body":{"classes/konsole.html":{}}}],["arguments",{"_index":671,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["arising",{"_index":1092,"title":{},"body":{"license.html":{}}}],["array",{"_index":205,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["array.from(parentlistel.queryselectorall('ngui",{"_index":719,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["array.from(this.items",{"_index":648,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["array.from(this.itemsbackup",{"_index":637,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["arrow",{"_index":731,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["arrowdown",{"_index":369,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["arrowleft",{"_index":373,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["arrowright",{"_index":370,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["arrowup",{"_index":372,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["associated",{"_index":1045,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":71,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["authors",{"_index":1082,"title":{},"body":{"license.html":{}}}],["auto",{"_index":132,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete",{"_index":121,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{},"index.html":{}}}],["autocomplete'},{'name",{"_index":426,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["autocomplete.component",{"_index":689,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["autocomplete.component.ts",{"_index":114,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"coverage.html":{}}}],["autocomplete.component.ts:100",{"_index":234,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:104",{"_index":231,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:111",{"_index":239,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:131",{"_index":223,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:146",{"_index":229,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:152",{"_index":247,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:165",{"_index":242,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:31",{"_index":186,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:32",{"_index":189,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:33",{"_index":185,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:34",{"_index":192,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:39",{"_index":275,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:41",{"_index":269,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:42",{"_index":265,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:43",{"_index":273,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:44",{"_index":266,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:45",{"_index":271,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:46",{"_index":272,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:47",{"_index":270,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:56",{"_index":303,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:64",{"_index":232,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:75",{"_index":241,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:82",{"_index":233,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocomplete.component.ts:91",{"_index":236,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["autocompletecomponent",{"_index":667,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["autocompolete",{"_index":306,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["back",{"_index":770,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["background",{"_index":125,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["backup",{"_index":597,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["basic",{"_index":939,"title":{},"body":{"index.html":{}}}],["before",{"_index":66,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{}}}],["being",{"_index":290,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["below",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["blank",{"_index":406,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["blankitem",{"_index":408,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["blankitem.html",{"_index":414,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["blankoption",{"_index":171,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["block",{"_index":486,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["blur",{"_index":502,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["blurenabled",{"_index":493,"title":{},"body":{"components/NguiInviewComponent.html":{},"changelog.html":{}}}],["blurred",{"_index":657,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["boolean",{"_index":246,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["bootstrap",{"_index":927,"title":{},"body":{"index.html":{}}}],["border",{"_index":133,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["bottom",{"_index":198,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["bottominview",{"_index":175,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["break",{"_index":733,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["browse",{"_index":1096,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":895,"title":{},"body":{"dependencies.html":{},"classes/konsole.html":{},"modules.html":{}}}],["browsermodule",{"_index":923,"title":{},"body":{"index.html":{}}}],["c",{"_index":1034,"title":{},"body":{"license.html":{}}}],["call",{"_index":203,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["callback",{"_index":544,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["called",{"_index":253,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["case",{"_index":728,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["ccc",{"_index":136,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["cdr",{"_index":149,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["cdref",{"_index":608,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["change",{"_index":633,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":349,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["changedetectorref",{"_index":283,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["changelog",{"_index":812,"title":{"changelog.html":{}},"body":{}}],["characters",{"_index":310,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["charge",{"_index":1041,"title":{},"body":{"license.html":{}}}],["check",{"_index":262,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["child",{"_index":222,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["claim",{"_index":1085,"title":{},"body":{"license.html":{}}}],["class",{"_index":24,"title":{"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"index.html":{},"classes/konsole.html":{}}}],["classes",{"_index":803,"title":{},"body":{"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{},"overview.html":{}}}],["clearlist",{"_index":159,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["cleartimeout(this._actimer",{"_index":376,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["cleartimeout(this._focustimer",{"_index":383,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["click",{"_index":661,"title":{},"body":{"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["cluster_nguicommonmodule",{"_index":442,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_exports",{"_index":444,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_imports",{"_index":443,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule",{"_index":585,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_declarations",{"_index":587,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_exports",{"_index":586,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule",{"_index":743,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_declarations",{"_index":746,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_exports",{"_index":745,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_imports",{"_index":744,"title":{},"body":{"modules/NguiListModule.html":{}}}],["cluster_nguiutilsmodule",{"_index":750,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_declarations",{"_index":751,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_exports",{"_index":752,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_providers",{"_index":753,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["code",{"_index":928,"title":{},"body":{"index.html":{}}}],["collection",{"_index":938,"title":{},"body":{"index.html":{}}}],["color",{"_index":126,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["common",{"_index":910,"title":{},"body":{"index.html":{}}}],["common.module.ts",{"_index":451,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["common/src/lib/ngui",{"_index":7,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["commonmodule",{"_index":590,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["compid",{"_index":96,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["compilation",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":224,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["component",{"_index":12,"title":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["component.service",{"_index":758,"title":{},"body":{"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["component.service.ts",{"_index":9,"title":{},"body":{"injectables/DynamicComponentService.html":{},"coverage.html":{}}}],["component.service.ts:39",{"_index":79,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:41",{"_index":53,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:53",{"_index":58,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:63",{"_index":77,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component_template",{"_index":425,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentfactoryresolver",{"_index":78,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref",{"_index":75,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentref.instance",{"_index":106,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.instance.id",{"_index":104,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.location.nativeelement.setattribute('id",{"_index":103,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["components",{"_index":85,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{},"overview.html":{}}}],["compref",{"_index":33,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["compref.destroy",{"_index":358,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["compref.instance.items",{"_index":37,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["compref.instance.output$.subscribe(val",{"_index":41,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["concat(nomatchitem",{"_index":417,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["condition",{"_index":305,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["conditions",{"_index":1065,"title":{},"body":{"license.html":{}}}],["config",{"_index":522,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"changelog.html":{}}}],["configuration",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1093,"title":{},"body":{"license.html":{}}}],["console.debug",{"_index":970,"title":{},"body":{"classes/konsole.html":{}}}],["console.debug.apply(console",{"_index":1008,"title":{},"body":{"classes/konsole.html":{}}}],["console.error",{"_index":792,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["console.error(`error",{"_index":1003,"title":{},"body":{"classes/konsole.html":{}}}],["console.error.apply(console",{"_index":1016,"title":{},"body":{"classes/konsole.html":{}}}],["console.info",{"_index":977,"title":{},"body":{"classes/konsole.html":{}}}],["console.info.apply(console",{"_index":1012,"title":{},"body":{"classes/konsole.html":{}}}],["console.log",{"_index":840,"title":{},"body":{"changelog.html":{},"classes/konsole.html":{}}}],["console.log.apply(console",{"_index":1010,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn",{"_index":988,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn.apply(console",{"_index":1014,"title":{},"body":{"classes/konsole.html":{}}}],["const",{"_index":92,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["constructor",{"_index":50,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["constructor(@inject(componentfactoryresolver",{"_index":89,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(el",{"_index":663,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["constructor(element",{"_index":496,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{}}}],["constructor(factoryresolver",{"_index":51,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(public",{"_index":30,"title":{},"body":{"injectables/DynamicComponentService.html":{},"directives/NguiListDirective.html":{}}}],["constructor(renderer",{"_index":772,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["container",{"_index":299,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild",{"_index":311,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild(templateref",{"_index":278,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contents",{"_index":207,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentsel",{"_index":602,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["contract",{"_index":1089,"title":{},"body":{"license.html":{}}}],["controls",{"_index":500,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["copies",{"_index":1059,"title":{},"body":{"license.html":{}}}],["copy",{"_index":630,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"license.html":{}}}],["copyright",{"_index":1033,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":863,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":81,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcompnent",{"_index":63,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcomponent",{"_index":48,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcomponent(component",{"_index":57,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["created",{"_index":255,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["current",{"_index":966,"title":{},"body":{"classes/konsole.html":{}}}],["customized",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1086,"title":{},"body":{"license.html":{}}}],["dcs",{"_index":31,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["deal",{"_index":1047,"title":{},"body":{"license.html":{}}}],["dealing",{"_index":39,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dealings",{"_index":1094,"title":{},"body":{"license.html":{}}}],["debug",{"_index":951,"title":{},"body":{"classes/konsole.html":{}}}],["debug(...args",{"_index":968,"title":{},"body":{"classes/konsole.html":{}}}],["debugging",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":589,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{}}}],["decorators",{"_index":277,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["deep",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":181,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["defaultinviewhandler",{"_index":490,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["defaultinviewhandler(entry",{"_index":527,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["define",{"_index":282,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["defined",{"_index":52,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["defines",{"_index":83,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["demoobject",{"_index":912,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":441,"title":{"dependencies.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependents",{"_index":572,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["dependes",{"_index":530,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["deprecated",{"_index":521,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["description",{"_index":10,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["destroyed",{"_index":603,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["directive",{"_index":423,"title":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{}},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["directives",{"_index":430,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{},"overview.html":{}}}],["disable",{"_index":334,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["display",{"_index":304,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["distribute",{"_index":1055,"title":{},"body":{"license.html":{}}}],["document.queryselector",{"_index":331,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["documentation",{"_index":864,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentationcode",{"_index":913,"title":{},"body":{"index.html":{}}}],["dom",{"_index":111,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["down",{"_index":709,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["dyn",{"_index":98,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dynamic",{"_index":84,"title":{},"body":{"injectables/DynamicComponentService.html":{},"dependencies.html":{}}}],["dynamic.component.service",{"_index":19,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dynamicall",{"_index":254,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["dynamically",{"_index":13,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dynamiccomponentservice",{"_index":1,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["e.g",{"_index":68,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["effect",{"_index":503,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["el",{"_index":669,"title":{},"body":{"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":150,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":286,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["elements",{"_index":611,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"index.html":{}}}],["eltype",{"_index":248,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["empties",{"_index":596,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["empty",{"_index":616,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["emptying",{"_index":645,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["emptyitems",{"_index":605,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["enought",{"_index":309,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["enter",{"_index":364,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["enter(13",{"_index":737,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["entries",{"_index":537,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entries.foreach((entry",{"_index":559,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entry",{"_index":534,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["entry.intersectionratio",{"_index":569,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["entry['isintersecting",{"_index":561,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["env",{"_index":1000,"title":{},"body":{"classes/konsole.html":{}}}],["error",{"_index":599,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["error('ngui",{"_index":700,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["error(...args",{"_index":973,"title":{},"body":{"classes/konsole.html":{}}}],["esc",{"_index":218,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["esc(27",{"_index":738,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["escape",{"_index":365,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["escaped",{"_index":176,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["eslint",{"_index":333,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["etc",{"_index":72,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["even",{"_index":628,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["event",{"_index":196,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["event.additems(items",{"_index":204,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["event.key",{"_index":363,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["event.keycode",{"_index":715,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.ts",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["event.which",{"_index":714,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["eventemitter",{"_index":193,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["events",{"_index":484,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["example",{"_index":16,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["export",{"_index":23,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"index.html":{},"classes/konsole.html":{}}}],["exports",{"_index":453,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["express",{"_index":1074,"title":{},"body":{"license.html":{}}}],["extends",{"_index":115,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["factory",{"_index":82,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factory.create(this.rootviewcontainer.parentinjector",{"_index":95,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factoryresolver",{"_index":45,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["false",{"_index":267,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["fff",{"_index":127,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"classes/konsole.html":{}}}],["files",{"_index":1046,"title":{},"body":{"license.html":{}}}],["fill",{"_index":206,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["fire",{"_index":800,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["fired",{"_index":197,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["fireevent",{"_index":312,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"modules/NguiUtilsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fireevent(el",{"_index":905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fireevent(firstlist",{"_index":366,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["fires",{"_index":258,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["first",{"_index":208,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["firstlist",{"_index":360,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["firstlist.focus",{"_index":371,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["fitness",{"_index":1079,"title":{},"body":{"license.html":{}}}],["fix",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":662,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["focused",{"_index":308,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["following",{"_index":1064,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":924,"title":{},"body":{"index.html":{}}}],["found",{"_index":191,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{}}}],["found.ts",{"_index":805,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["found.ts:2",{"_index":806,"title":{},"body":{"classes/NoMatchFound.html":{}}}],["free",{"_index":1040,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":318,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["fromevent(this.inputel",{"_index":337,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["function",{"_index":252,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["functions",{"_index":903,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["furnished",{"_index":1062,"title":{},"body":{"license.html":{}}}],["getisready",{"_index":302,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["getting",{"_index":810,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":257,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["granted",{"_index":1039,"title":{},"body":{"license.html":{}}}],["greater",{"_index":971,"title":{},"body":{"classes/konsole.html":{}}}],["handleintersect",{"_index":491,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handleintersect(entries",{"_index":535,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handler",{"_index":202,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["handlers",{"_index":510,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["handles",{"_index":707,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["height",{"_index":129,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{}}}],["height}px",{"_index":647,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["hereby",{"_index":1038,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":942,"title":{},"body":{"index.html":{}}}],["highlight.pipe",{"_index":756,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["highlight.pipe.ts",{"_index":465,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["highlight.pipe.ts:5",{"_index":470,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["holders",{"_index":1083,"title":{},"body":{"license.html":{}}}],["host",{"_index":122,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["hostlistener",{"_index":687,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('blur",{"_index":677,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('click",{"_index":683,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('focus",{"_index":678,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keydown",{"_index":680,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keyup",{"_index":682,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlisteners",{"_index":660,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostview",{"_index":67,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["html",{"_index":422,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{}}}],["html5",{"_index":932,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":624,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["htmlinputelement",{"_index":274,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["http_providers",{"_index":926,"title":{},"body":{"index.html":{}}}],["id",{"_index":321,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["identifier",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["ie11",{"_index":933,"title":{},"body":{"index.html":{}}}],["ig",{"_index":476,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["implements",{"_index":117,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["implied",{"_index":1075,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"index.html":{}}}],["imports",{"_index":452,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{}}}],["included",{"_index":1069,"title":{},"body":{"license.html":{}}}],["including",{"_index":1049,"title":{},"body":{"license.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["indicates",{"_index":294,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["info(...args",{"_index":975,"title":{},"body":{"classes/konsole.html":{}}}],["inherited",{"_index":194,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["inject",{"_index":86,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["inject(platform_id",{"_index":551,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["injectable",{"_index":0,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["input",{"_index":40,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["input('item",{"_index":692,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["input('template",{"_index":634,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["inputel",{"_index":147,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["inputs",{"_index":170,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["insert",{"_index":11,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["insertcomp",{"_index":32,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["insertcomponent",{"_index":49,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["insertcomponent(componentref",{"_index":76,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["inserted",{"_index":291,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["inserts",{"_index":763,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"changelog.html":{}}}],["install",{"_index":919,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":703,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["instead",{"_index":524,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["interaction",{"_index":944,"title":{},"body":{"index.html":{}}}],["intersection",{"_index":507,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["intersectionobserver",{"_index":519,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"index.html":{}}}],["intersectionobserver(this.handleintersect.bind(this",{"_index":556,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverentry",{"_index":560,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverinit",{"_index":511,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["invalid",{"_index":1004,"title":{},"body":{"classes/konsole.html":{}}}],["inview",{"_index":250,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["inview'},{'name",{"_index":428,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["inview)=\"something",{"_index":533,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component",{"_index":592,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.component.ts",{"_index":479,"title":{},"body":{"components/NguiInviewComponent.html":{},"coverage.html":{}}}],["inview.component.ts:36",{"_index":546,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:39",{"_index":518,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:42",{"_index":520,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:46",{"_index":499,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:48",{"_index":525,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:49",{"_index":526,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:51",{"_index":543,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:53",{"_index":542,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:55",{"_index":498,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:63",{"_index":540,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:75",{"_index":538,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:80",{"_index":536,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:96",{"_index":528,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.directive",{"_index":593,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.directive.ts",{"_index":570,"title":{},"body":{"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inview.directive.ts:21",{"_index":582,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:24",{"_index":574,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:27",{"_index":575,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:30",{"_index":576,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:32",{"_index":573,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:35",{"_index":581,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:40",{"_index":580,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:52",{"_index":578,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:62",{"_index":577,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.module",{"_index":456,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["inview.module.ts",{"_index":588,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview/ngui",{"_index":455,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{}}}],["inview/src/ngui",{"_index":478,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inviewpage",{"_index":151,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["inviewpages",{"_index":152,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["invoked",{"_index":531,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["isinview",{"_index":487,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["islistloading",{"_index":153,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["isplatformbrowser",{"_index":548,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":554,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["isready",{"_index":179,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["issue",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":764,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["item",{"_index":362,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["item.directive",{"_index":748,"title":{},"body":{"modules/NguiListModule.html":{}}}],["item.directive.ts",{"_index":653,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["item.directive.ts:24",{"_index":670,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:26",{"_index":685,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:27",{"_index":686,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:28",{"_index":668,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:39",{"_index":684,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:52",{"_index":675,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:75",{"_index":676,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:88",{"_index":673,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:92",{"_index":674,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:98",{"_index":672,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["items",{"_index":228,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{}}}],["items).filter(x",{"_index":418,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["items.length",{"_index":410,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["itemsbackup",{"_index":604,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["ivy",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":219,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["keyboard",{"_index":708,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyboard/mouse",{"_index":943,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":238,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["keycode",{"_index":713,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown",{"_index":658,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown(event",{"_index":679,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keypress",{"_index":906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyup",{"_index":367,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["keyup').subscribe(this.oninputelkeyup.bind(this",{"_index":338,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["keyup(enter",{"_index":691,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(event",{"_index":681,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["kim",{"_index":1036,"title":{},"body":{"license.html":{}}}],["kind",{"_index":1073,"title":{},"body":{"license.html":{}}}],["konsole",{"_index":759,"title":{"classes/konsole.html":{}},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"classes/konsole.html":{}}}],["konsole.debug('no",{"_index":1024,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.debug('yes",{"_index":1018,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('no",{"_index":1028,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('yes",{"_index":1022,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('no",{"_index":1026,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('yes",{"_index":1020,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('no",{"_index":1025,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('yes",{"_index":1019,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log(1,2,3,4,5",{"_index":948,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('all",{"_index":1017,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('error",{"_index":947,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('info",{"_index":1029,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('none",{"_index":1023,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('warn",{"_index":1030,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('no",{"_index":1027,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('yes",{"_index":1021,"title":{},"body":{"classes/konsole.html":{}}}],["last",{"_index":289,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["lazy",{"_index":929,"title":{},"body":{"index.html":{}}}],["left",{"_index":397,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["legend",{"_index":421,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["less",{"_index":505,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["level",{"_index":967,"title":{},"body":{"classes/konsole.html":{}}}],["levels",{"_index":964,"title":{},"body":{"classes/konsole.html":{}}}],["liability",{"_index":1087,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1084,"title":{},"body":{"license.html":{}}}],["license",{"_index":1031,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1050,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1076,"title":{},"body":{"license.html":{}}}],["line",{"_index":335,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["list",{"_index":200,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["list'},{'name",{"_index":435,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["list.component",{"_index":314,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.component.ts",{"_index":762,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":779,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:114",{"_index":777,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:130",{"_index":778,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:61",{"_index":786,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:63",{"_index":788,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:65",{"_index":776,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:67",{"_index":775,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:86",{"_index":774,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:89",{"_index":784,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:90",{"_index":780,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:92",{"_index":785,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:93",{"_index":773,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:96",{"_index":787,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:97",{"_index":783,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:98",{"_index":782,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:99",{"_index":781,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.directive",{"_index":688,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.directive.ts",{"_index":649,"title":{},"body":{"directives/NguiListDirective.html":{},"coverage.html":{}}}],["list.directive.ts:13",{"_index":651,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:15",{"_index":650,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:17",{"_index":652,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.module",{"_index":458,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["list.module.ts",{"_index":747,"title":{},"body":{"modules/NguiListModule.html":{}}}],["list/ngui",{"_index":457,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["list/src/ngui",{"_index":113,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list/src/no",{"_index":804,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["list/src/none",{"_index":807,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["listdirective",{"_index":665,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listens",{"_index":480,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["listitem",{"_index":244,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["listitemndx",{"_index":720,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems",{"_index":718,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems.indexof(thislistitem",{"_index":721,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[0",{"_index":724,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitemndx",{"_index":723,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitems.length",{"_index":726,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["load",{"_index":801,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["loaded",{"_index":210,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{}}}],["loading",{"_index":216,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["log",{"_index":952,"title":{},"body":{"classes/konsole.html":{}}}],["log(...args",{"_index":978,"title":{},"body":{"classes/konsole.html":{}}}],["log_levels",{"_index":949,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel",{"_index":950,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel.touppercase",{"_index":994,"title":{},"body":{"classes/konsole.html":{}}}],["loglevels",{"_index":995,"title":{},"body":{"classes/konsole.html":{}}}],["loglevels.indexof(loglevel",{"_index":997,"title":{},"body":{"classes/konsole.html":{}}}],["longer",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["lt;ng",{"_index":601,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["makes",{"_index":766,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["match",{"_index":190,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{},"coverage.html":{}}}],["matching",{"_index":108,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["math.floor(math.random",{"_index":99,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["max",{"_index":128,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["medium",{"_index":918,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1078,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1053,"title":{},"body":{"license.html":{}}}],["message",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["messages",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":119,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["methods",{"_index":47,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["minchars",{"_index":327,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["mininputchars",{"_index":172,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["minwidth",{"_index":400,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["miscellaneous",{"_index":902,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":1032,"title":{},"body":{"license.html":{}}}],["mode",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":1052,"title":{},"body":{"license.html":{}}}],["module",{"_index":438,"title":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":440,"title":{"modules.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mousedown",{"_index":659,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["mycomponent",{"_index":25,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["mydynamiccomponent",{"_index":20,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["name",{"_index":55,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["necessary",{"_index":263,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["new",{"_index":413,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["newly",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["nextlistitem",{"_index":722,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextlistitem.focus",{"_index":736,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextsibling",{"_index":654,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["ngafterviewinit",{"_index":169,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["ngmodule",{"_index":454,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":492,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["ngoninit",{"_index":160,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["ngui",{"_index":97,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"index.html":{}}}],["ngui/common",{"_index":907,"title":{},"body":{"index.html":{}}}],["nguiautocompletecomponent",{"_index":109,"title":{"components/NguiAutocompleteComponent.html":{}},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguicommonmodule",{"_index":439,"title":{"modules/NguiCommonModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguihighlight",{"_index":466,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["nguihighlightpipe",{"_index":462,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"modules/NguiUtilsModule.html":{},"coverage.html":{},"overview.html":{}}}],["nguihilight",{"_index":941,"title":{},"body":{"index.html":{}}}],["nguiinview",{"_index":432,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiinviewcomponent",{"_index":427,"title":{"components/NguiInviewComponent.html":{}},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewdirective",{"_index":431,"title":{"directives/NguiInviewDirective.html":{}},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewmodule",{"_index":445,"title":{"modules/NguiInviewModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguiinviewpage",{"_index":280,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiinviewpagecomponent",{"_index":256,"title":{"components/NguiInviewPageComponent.html":{}},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistdirective",{"_index":434,"title":{"directives/NguiListDirective.html":{}},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistitemdirective",{"_index":436,"title":{"directives/NguiListItemDirective.html":{}},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistmodule",{"_index":446,"title":{"modules/NguiListModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguioutview",{"_index":571,"title":{},"body":{"directives/NguiInviewDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguioutview]'},{'name",{"_index":433,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiutilsmodule",{"_index":447,"title":{"modules/NguiUtilsModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguiutilsmodules",{"_index":937,"title":{},"body":{"index.html":{}}}],["nguivirtuallistcomponent",{"_index":116,"title":{"components/NguiVirtualListComponent.html":{}},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguivirtuallistcomponent:103",{"_index":261,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:114",{"_index":249,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:176",{"_index":227,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:37",{"_index":279,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:40",{"_index":268,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:61",{"_index":298,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:65",{"_index":221,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:67",{"_index":217,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:86",{"_index":195,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:89",{"_index":288,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:92",{"_index":293,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:93",{"_index":292,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:96",{"_index":301,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:97",{"_index":287,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:98",{"_index":285,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["nguivirtuallistcomponent:99",{"_index":284,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["noinspection",{"_index":1006,"title":{},"body":{"classes/konsole.html":{}}}],["nomatchfound",{"_index":315,"title":{"classes/NoMatchFound.html":{}},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{},"coverage.html":{}}}],["nomatchitem",{"_index":173,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["none",{"_index":317,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["noneselect",{"_index":316,"title":{"classes/NoneSelect.html":{}},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/NoneSelect.html":{},"coverage.html":{}}}],["noninfringement",{"_index":1081,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1067,"title":{},"body":{"license.html":{}}}],["notinview",{"_index":483,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["now",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":920,"title":{},"body":{"index.html":{}}}],["num",{"_index":215,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["number",{"_index":187,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["object",{"_index":693,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["object.keys(this.log_levels",{"_index":996,"title":{},"body":{"classes/konsole.html":{}}}],["observer",{"_index":488,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["observeroptions",{"_index":494,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"changelog.html":{}}}],["obtaining",{"_index":1043,"title":{},"body":{"license.html":{}}}],["once80pctvisible",{"_index":489,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["ondestroy",{"_index":485,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["one",{"_index":184,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"classes/konsole.html":{}}}],["onescaped",{"_index":161,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["oninit",{"_index":118,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["oninputelblurred",{"_index":162,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["oninputelfocused",{"_index":163,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["oninputelfocused(event",{"_index":235,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["oninputelkeyup",{"_index":164,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["oninputelkeyup(event",{"_index":237,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["onselected",{"_index":165,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["onselected(value",{"_index":240,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["option",{"_index":407,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"changelog.html":{}}}],["optional",{"_index":56,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["options",{"_index":495,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1091,"title":{},"body":{"license.html":{}}}],["out",{"_index":450,"title":{},"body":{"modules/NguiCommonModule.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":42,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["outputs",{"_index":174,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["outview",{"_index":595,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["overflow",{"_index":131,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["overview",{"_index":1097,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":889,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":137,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["page",{"_index":209,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"index.html":{}}}],["page'},{'name",{"_index":429,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.component",{"_index":749,"title":{},"body":{"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.component.ts",{"_index":594,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:106",{"_index":615,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:121",{"_index":623,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:56",{"_index":632,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:60",{"_index":610,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:63",{"_index":614,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:65",{"_index":631,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:67",{"_index":629,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:72",{"_index":625,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:73",{"_index":609,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:84",{"_index":620,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:94",{"_index":619,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:99",{"_index":618,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.contents",{"_index":643,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["pages",{"_index":212,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["pagesref",{"_index":154,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["param",{"_index":985,"title":{},"body":{"classes/konsole.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["parent",{"_index":701,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistcomp",{"_index":655,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistel",{"_index":716,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parseint('00000",{"_index":956,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00001",{"_index":957,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00010",{"_index":958,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00100",{"_index":959,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('01000",{"_index":960,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('10000",{"_index":961,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('11111",{"_index":962,"title":{},"body":{"classes/konsole.html":{}}}],["partial",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1080,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1037,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1060,"title":{},"body":{"license.html":{}}}],["person",{"_index":1042,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1061,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":461,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["pipes",{"_index":463,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["pipetransform",{"_index":472,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["platform_id",{"_index":547,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["platformid",{"_index":497,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["please",{"_index":935,"title":{},"body":{"index.html":{}}}],["polyfill",{"_index":936,"title":{},"body":{"index.html":{}}}],["port",{"_index":251,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["portions",{"_index":1071,"title":{},"body":{"license.html":{}}}],["position",{"_index":123,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["positioning",{"_index":482,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["positionthisunderinputel",{"_index":166,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["pressed",{"_index":220,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["prevlistitem",{"_index":725,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevlistitem.focus",{"_index":732,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevsibling",{"_index":656,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["private",{"_index":550,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["projects/.../fire",{"_index":904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngui",{"_index":6,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["properties",{"_index":44,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["provided",{"_index":264,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{},"license.html":{}}}],["providers",{"_index":755,"title":{},"body":{"modules/NguiUtilsModule.html":{},"index.html":{}}}],["provides",{"_index":532,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["public",{"_index":148,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["publish",{"_index":1054,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":862,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pushed",{"_index":765,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ratio",{"_index":508,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["re",{"_index":474,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["read",{"_index":297,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["read:viewcontainerref",{"_index":27,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["reason",{"_index":61,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["reference",{"_index":60,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["regexp(search",{"_index":475,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["remains",{"_index":626,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["removed",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":612,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["rendered",{"_index":617,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["renderer",{"_index":155,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["renderer2",{"_index":300,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["rendering",{"_index":930,"title":{},"body":{"index.html":{}}}],["reportacceptance",{"_index":916,"title":{},"body":{"index.html":{}}}],["reportarticle",{"_index":917,"title":{},"body":{"index.html":{}}}],["reportunit",{"_index":914,"title":{},"body":{"index.html":{}}}],["represent",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["requirednum",{"_index":992,"title":{},"body":{"classes/konsole.html":{}}}],["requires",{"_index":600,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["reset",{"_index":449,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["rest",{"_index":211,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["restore",{"_index":621,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["restoreitems",{"_index":606,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["restores",{"_index":598,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["restriction",{"_index":1048,"title":{},"body":{"license.html":{}}}],["restrictionnum",{"_index":990,"title":{},"body":{"classes/konsole.html":{}}}],["results",{"_index":107,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":473,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["return",{"_index":94,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"classes/konsole.html":{}}}],["returns",{"_index":59,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["right",{"_index":710,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["rights",{"_index":1051,"title":{},"body":{"license.html":{}}}],["rootviewcontainer",{"_index":46,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["row",{"_index":214,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["rxjs",{"_index":319,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"dependencies.html":{}}}],["safari",{"_index":934,"title":{},"body":{"index.html":{}}}],["same",{"_index":627,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["save",{"_index":921,"title":{},"body":{"index.html":{}}}],["scrolls",{"_index":230,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["search",{"_index":469,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["see",{"_index":767,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["select",{"_index":183,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/NoneSelect.html":{}}}],["select.ts",{"_index":808,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["select.ts:2",{"_index":809,"title":{},"body":{"classes/NoneSelect.html":{}}}],["selected",{"_index":177,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["selectedorescaped",{"_index":322,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["selector",{"_index":120,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["sell",{"_index":1058,"title":{},"body":{"license.html":{}}}],["seperate",{"_index":62,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["service",{"_index":15,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["services",{"_index":911,"title":{},"body":{"index.html":{}}}],["set",{"_index":402,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["setfocused",{"_index":167,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["setfocused(eltype",{"_index":243,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["setitems",{"_index":607,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setitems(items",{"_index":622,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setloglevel",{"_index":953,"title":{},"body":{"classes/konsole.html":{}}}],["setloglevel(loglevel",{"_index":980,"title":{},"body":{"classes/konsole.html":{}}}],["sets",{"_index":529,"title":{},"body":{"components/NguiInviewComponent.html":{},"classes/konsole.html":{}}}],["settimeout",{"_index":378,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["setting",{"_index":70,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["shall",{"_index":1068,"title":{},"body":{"license.html":{}}}],["show",{"_index":405,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["showing",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1044,"title":{},"body":{"license.html":{}}}],["solid",{"_index":135,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["src/dynamic",{"_index":757,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/fire",{"_index":761,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/konsole",{"_index":760,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/ngui",{"_index":591,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["started",{"_index":811,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":541,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["statements",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":545,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["still",{"_index":295,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["stop",{"_index":539,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["stops",{"_index":579,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["string",{"_index":180,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["styles",{"_index":110,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["styling",{"_index":69,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["subject",{"_index":1063,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1056,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1070,"title":{},"body":{"license.html":{}}}],["support",{"_index":817,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["supported",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["svg",{"_index":1095,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":727,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tabindex",{"_index":690,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["table",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":320,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["template",{"_index":22,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["templateref",{"_index":276,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["test",{"_index":915,"title":{},"body":{"index.html":{}}}],["text",{"_index":471,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["text.replace(re",{"_index":477,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["this._actimer",{"_index":377,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this._escapedfromlist",{"_index":324,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this._focused",{"_index":384,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this._focused.input",{"_index":325,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this._focused.listitem",{"_index":326,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this._focused[eltype",{"_index":385,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this._focustimer",{"_index":386,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this._lastselected",{"_index":347,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this._orginputvalue",{"_index":351,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this._previnputvalue",{"_index":355,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this._selectedfromlist",{"_index":323,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.addaninviewpagetopages",{"_index":380,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.addautocompletelist",{"_index":374,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.autocompletecomponent",{"_index":698,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.blankoption",{"_index":415,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.blurenabled",{"_index":566,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.bottominview.emit(this",{"_index":799,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.bottominview.observers.length",{"_index":791,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.cdr.detectchanges",{"_index":348,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.cdref.detectchanges",{"_index":640,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.clearlist",{"_index":379,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.contentsel",{"_index":641,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.dcs.createcomponent(mydynamiccomponent",{"_index":34,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.defaultinviewhandler(entry",{"_index":563,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.destroyed",{"_index":644,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.dynamiccomponentservice.createcomponent(nguiinviewpagecomponent",{"_index":794,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.dynamiccomponentservice.insertcomponent(this.inviewpage",{"_index":796,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.el.nativeelement",{"_index":712,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.el.nativeelement.innerhtml",{"_index":705,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.element.nativeelement",{"_index":389,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.element.nativeelement.getboundingclientrect().height",{"_index":646,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.element.nativeelement.queryselector('.inview",{"_index":642,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.element.nativeelement.queryselector('ngui",{"_index":361,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.escaped.subscribe(this.onescaped.bind(this",{"_index":344,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.factoryresolver",{"_index":90,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.factoryresolver.resolvecomponentfactory(component",{"_index":93,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.for",{"_index":332,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inputel",{"_index":330,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inputel.addeventlistener('blur",{"_index":341,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inputel.addeventlistener('focus",{"_index":339,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inputel.focus",{"_index":346,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inputel.getboundingclientrect",{"_index":391,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inputel.value",{"_index":350,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inputel.value.length",{"_index":328,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inview.emit(entry",{"_index":564,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inview.observers.length",{"_index":568,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inviewpage",{"_index":793,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.setitems(allitems",{"_index":420,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inviewpage.instance.setitems(items",{"_index":802,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.template",{"_index":797,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpages",{"_index":359,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inviewpages.foreach(compref",{"_index":357,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inviewpages.length",{"_index":382,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.inviewpages.push(this.inviewpage",{"_index":798,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.isinview",{"_index":562,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.islistloading",{"_index":352,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["this.isready",{"_index":375,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.items",{"_index":636,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.itemsbackup",{"_index":638,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.listdirective",{"_index":696,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.log_levels[param",{"_index":993,"title":{},"body":{"classes/konsole.html":{}}}],["this.log_levels[this.loglevel",{"_index":991,"title":{},"body":{"classes/konsole.html":{}}}],["this.loglevel",{"_index":1002,"title":{},"body":{"classes/konsole.html":{}}}],["this.mininputchars",{"_index":329,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.nguiinview.emit(entry",{"_index":583,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.nguioutview.emit(entry",{"_index":584,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.nomatchitem",{"_index":409,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.notinview.emit(entry",{"_index":565,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.object",{"_index":702,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.object.html",{"_index":706,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.observer",{"_index":555,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.disconnect",{"_index":558,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.observe(this.element.nativeelement",{"_index":557,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observeroptions",{"_index":553,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.once80pctvisible",{"_index":567,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.onescaped",{"_index":368,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.oninputelblurred.bind(this",{"_index":342,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.oninputelfocused.bind(this",{"_index":340,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.options",{"_index":552,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.outview",{"_index":635,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.pagesref",{"_index":795,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.parentlistcomp",{"_index":695,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.element.nativeelement",{"_index":717,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.escaped.emit",{"_index":740,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.selected.emit(this.object",{"_index":739,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocused",{"_index":741,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocused']('listitem",{"_index":742,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.positionthisunderinputel",{"_index":336,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.renderer.setattribute(this.el.nativeelement",{"_index":694,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setstyle(this.contentsel",{"_index":639,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.renderer.setstyle(thisel",{"_index":396,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.rootviewcontainer",{"_index":91,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.rootviewcontainer.insert(componentref.hostview",{"_index":105,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.selected.subscribe(this.onselected.bind(this",{"_index":343,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.setfocused('input",{"_index":356,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["this.template",{"_index":790,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.tolog('debug",{"_index":1005,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('error",{"_index":1015,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('info",{"_index":1011,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('log",{"_index":1009,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('warn",{"_index":1013,"title":{},"body":{"classes/konsole.html":{}}}],["this.vcr",{"_index":35,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.viewcontainer.clear",{"_index":704,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.virtuallistcomponent",{"_index":697,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["thisel",{"_index":388,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["thisinputelbcr",{"_index":390,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["thisinputelbcr.height",{"_index":394,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["thisinputelbcr.left}px",{"_index":398,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["thisinputelbcr.top",{"_index":393,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["thisinputelbcr.width}px",{"_index":401,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["thislistitem",{"_index":711,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["threshold",{"_index":512,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["throw",{"_index":699,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["ths.dcs.insertcomonent(cmpref",{"_index":36,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["todo",{"_index":403,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["tolog",{"_index":954,"title":{},"body":{"classes/konsole.html":{}}}],["tolog(param",{"_index":982,"title":{},"body":{"classes/konsole.html":{}}}],["top",{"_index":392,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["top}px",{"_index":399,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["tort",{"_index":1090,"title":{},"body":{"license.html":{}}}],["transform",{"_index":467,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["transform(text",{"_index":468,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["tree",{"_index":112,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["true",{"_index":345,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["ts",{"_index":88,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["tslib",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":1007,"title":{},"body":{"classes/konsole.html":{}}}],["type",{"_index":73,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["typeof",{"_index":353,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["ui",{"_index":909,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":354,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{}}}],["up",{"_index":260,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["use",{"_index":523,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":80,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{}}}],["user",{"_index":259,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["users",{"_index":281,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["using",{"_index":14,"title":{},"body":{"injectables/DynamicComponentService.html":{},"changelog.html":{}}}],["utility",{"_index":940,"title":{},"body":{"index.html":{}}}],["utilizes",{"_index":931,"title":{},"body":{"index.html":{}}}],["utils.module",{"_index":460,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["utils.module.ts",{"_index":754,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["utils/ngui",{"_index":459,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{}}}],["utils/src/dynamic",{"_index":8,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["utils/src/fire",{"_index":313,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils/src/konsole.ts",{"_index":884,"title":{},"body":{"coverage.html":{},"classes/konsole.html":{}}}],["utils/src/konsole.ts:11",{"_index":963,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:22",{"_index":965,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:25",{"_index":983,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:33",{"_index":981,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:47",{"_index":969,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:55",{"_index":979,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:62",{"_index":976,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:70",{"_index":987,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:77",{"_index":974,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/ngui",{"_index":464,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["v11",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["v12",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["v13",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":245,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["value",{"_index":182,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["var",{"_index":424,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["vcr",{"_index":28,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["view",{"_index":201,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewchild",{"_index":789,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewchild('dynamic",{"_index":26,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["viewchild('pages",{"_index":296,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewcontainer",{"_index":664,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["viewcontainerref",{"_index":29,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiAutocompleteComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewport",{"_index":481,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["virtual",{"_index":199,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["virtuallistcomponent",{"_index":666,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["visible",{"_index":307,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{}}}],["void",{"_index":225,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["warn",{"_index":955,"title":{},"body":{"classes/konsole.html":{}}}],["warn(...args",{"_index":986,"title":{},"body":{"classes/konsole.html":{}}}],["warning",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1077,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1072,"title":{},"body":{"license.html":{}}}],["whether",{"_index":501,"title":{},"body":{"components/NguiInviewComponent.html":{},"license.html":{}}}],["window",{"_index":998,"title":{},"body":{"classes/konsole.html":{}}}],["window.console",{"_index":984,"title":{},"body":{"classes/konsole.html":{}}}],["window.konsole",{"_index":945,"title":{},"body":{"classes/konsole.html":{}}}],["window.scrolly",{"_index":395,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["window.sessionstorage",{"_index":999,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorage.setitem('konsole.log_level",{"_index":1001,"title":{},"body":{"classes/konsole.html":{}}}],["without",{"_index":834,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["won't",{"_index":213,"title":{},"body":{"components/NguiAutocompleteComponent.html":{},"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["x",{"_index":419,"title":{},"body":{"components/NguiAutocompleteComponent.html":{}}}],["yes",{"_index":74,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["zone.js",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":448,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/DynamicComponentService.html":{"url":"injectables/DynamicComponentService.html","title":"injectable - DynamicComponentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Insert a component dynamically using a service\nExample\nimport { DynamicComponentService } from './dynamic.component.service';\nimport { MyDynamicComponent } from './my-1.component';\n\n@Component({\ntemplate: ` ... `\n})\nexport class MyComponent {\n@ViewChild('dynamic', {read:ViewContainerRef}) vcr: ViewContainerRef;\n\nconstructor(public dcs: DynamicComponentService) {}\n\ninsertComp() {\nlet compRef = this.dcs.createComponent(MyDynamicComponent, this.vcr);\nths.dcs.insertComonent(cmpRef);\ncompRef.instance.items = [1,2,3];              // dealing with @input\ncompRef.instance.output$.subscribe(val => {}); // dealing with @output\n}\n}\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                factoryResolver\n                            \n                            \n                                rootViewContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                insertComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryResolver\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createComponent\n                        \n                    \n                \n            \n            \n                \ncreateComponent(component: any, into?: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:53\n                \n            \n\n\n            \n                \n                    returns component reference\nThe reason to seperate createCompnent and insertComponent is\nto allow some actions before we insert into a hostView.\ne.g styling, setting attributes, etc\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    into\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ComponentRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertComponent\n                        \n                    \n                \n            \n            \n                \ninsertComponent(componentRef: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:63\n                \n            \n\n\n            \n                \n                    insert component\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentRef\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Component\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        factoryResolver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:39\n                        \n                    \n\n            \n                \n                    used to create a factory from a component class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rootViewContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:41\n                        \n                    \n\n            \n                \n                    defines where a dynamic components insert into\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  ViewContainerRef\n} from '@angular/core';\n\n/**\n * Insert a component dynamically using a service\n *\n\n ### Example\n ```ts\n import { DynamicComponentService } from './dynamic.component.service';\n import { MyDynamicComponent } from './my-1.component';\n\n @Component({\n   template: ` ... `\n })\n export class MyComponent {\n   @ViewChild('dynamic', {read:ViewContainerRef}) vcr: ViewContainerRef;\n\n   constructor(public dcs: DynamicComponentService) {}\n\n   insertComp() {\n     let compRef = this.dcs.createComponent(MyDynamicComponent, this.vcr);\n     ths.dcs.insertComonent(cmpRef);\n     compRef.instance.items = [1,2,3];              // dealing with @input\n     compRef.instance.output$.subscribe(val => {}); // dealing with @output\n   }\n }\n ```\n */\n@Injectable()\nexport class DynamicComponentService {\n  /** used to create a factory from a component class */\n  factoryResolver: ComponentFactoryResolver;\n  /** defines where a dynamic components insert into */\n  rootViewContainer: ViewContainerRef;\n\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\n    this.factoryResolver = factoryResolver;\n  }\n\n  /**\n   * returns component reference\n   * The reason to seperate `createCompnent` and `insertComponent` is\n   * to allow some actions before we insert into a hostView.\n   * e.g styling, setting attributes, etc\n   */\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef {\n    this.rootViewContainer = into || this.rootViewContainer;\n    const factory = this.factoryResolver.resolveComponentFactory(component);\n\n    return factory.create(this.rootViewContainer.parentInjector);\n  }\n\n  /**\n   * insert component\n   */\n  insertComponent(componentRef: ComponentRef): Component {\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\n    componentRef.location.nativeElement.setAttribute('id', compId);\n    componentRef.instance.id = compId;\n\n    this.rootViewContainer.insert(componentRef.hostView);\n\n    return componentRef.instance;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiAutocompleteComponent.html":{"url":"components/NguiAutocompleteComponent.html","title":"component - NguiAutocompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NguiAutocompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                NguiVirtualListComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-autocomplete\n            \n\n\n            \n                styles\n                \n    :host {position: absolute; background-color: #fff; max-height: 300px; overflow: auto}\n    .ngui-autocomplete { border: 1px solid #ccc; padding: 4px }\n  \n            \n\n            \n                template\n                \n  \n    \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _acTimer\n                            \n                            \n                                _escapedFromList\n                            \n                            \n                                _focused\n                            \n                            \n                                _focusTimer\n                            \n                            \n                                _lastSelected\n                            \n                            \n                                _orgInputValue\n                            \n                            \n                                _prevInputValue\n                            \n                            \n                                _selectedFromList\n                            \n                            \n                                inputEl\n                            \n                            \n                                template\n                            \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                dynamicComponentService\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                inviewPage\n                            \n                            \n                                inviewPages\n                            \n                            \n                                isListLoading\n                            \n                            \n                                pagesRef\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAutocompleteList\n                            \n                            \n                                addList\n                            \n                            \n                                addMorePages\n                            \n                            \n                                clearList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEscaped\n                            \n                            \n                                onInputElBlurred\n                            \n                            \n                                onInputElFocused\n                            \n                            \n                                onInputElKeyup\n                            \n                            \n                                onSelected\n                            \n                            \n                                positionThisUnderInputEl\n                            \n                            \n                                setFocused\n                            \n                            \n                                addAnInviewPageToPages\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blankOption\n                            \n                            \n                                for\n                            \n                            \n                                minInputChars\n                            \n                            \n                                noMatchItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottomInview\n                            \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isReady\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blankOption\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select One'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        for\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minInputChars\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noMatchItem\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No Match Found'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:34\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        bottomInview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NguiVirtualListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NguiVirtualListComponent:86\n\n                            \n                        \n                \n                    \n                        Event fired when bottom of the virtual list is in view\nThe handler of this event must call $event.addItems(items: Array) to fill contents\nIf not, only the first page is loaded, and rest of the pages won't be loaded;\nExample\n\n\n\nrow number: {{ num }}\n\nLoading\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NguiVirtualListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NguiVirtualListComponent:67\n\n                            \n                        \n                \n                    \n                        Fired when ESC key is pressed from \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         NguiVirtualListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         NguiVirtualListComponent:65\n\n                            \n                        \n                \n                    \n                        Fired when child  is selected\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAutocompleteList\n                        \n                    \n                \n            \n            \n                \naddAutocompleteList()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:131\n                \n            \n\n\n            \n                \n                    Complete the first page of autocomplete\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addList\n                        \n                    \n                \n            \n            \n                \naddList(items: Array)\n                \n            \n\n\n            \n                \n                    Inherited from         NguiVirtualListComponent\n\n                \n            \n            \n                \n                        Defined in         NguiVirtualListComponent:176\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMorePages\n                        \n                    \n                \n            \n            \n                \naddMorePages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:146\n                \n            \n\n\n            \n                \n                    Complete after the first page of autocomplete when it scrolls to the bottom\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearList\n                        \n                    \n                \n            \n            \n                \nclearList()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEscaped\n                        \n                    \n                \n            \n            \n                \nonEscaped()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputElBlurred\n                        \n                    \n                \n            \n            \n                \nonInputElBlurred()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputElFocused\n                        \n                    \n                \n            \n            \n                \nonInputElFocused(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputElKeyup\n                        \n                    \n                \n            \n            \n                \nonInputElKeyup(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelected\n                        \n                    \n                \n            \n            \n                \nonSelected(value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        positionThisUnderInputEl\n                        \n                    \n                \n            \n            \n                \npositionThisUnderInputEl()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFocused\n                        \n                    \n                \n            \n            \n                \nsetFocused(elType: \"input\" | \"listItem\", val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elType\n                                    \n                                            \"input\" | \"listItem\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addAnInviewPageToPages\n                        \n                    \n                \n            \n            \n                \naddAnInviewPageToPages()\n                \n            \n\n\n            \n                \n                    Inherited from         NguiVirtualListComponent\n\n                \n            \n            \n                \n                        Defined in         NguiVirtualListComponent:114\n\n                \n            \n\n\n            \n                \n                    When the bottom is inview port, this function is called\nIt will insert a dynamicall created NguiInviewPageComponent with the given template.\nIt will also fires (bottomInview) event, so that user can fill up items for the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         NguiVirtualListComponent\n\n                \n            \n            \n                \n                        Defined in         NguiVirtualListComponent:103\n\n                \n            \n\n\n            \n                \n                    Check if necessary input and output is provided\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _acTimer\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _escapedFromList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _focused\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {input: false, listItem: false}\n                    \n                \n                        \n                            \n                                Inherited from         NguiVirtualListComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         NguiVirtualListComponent:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _focusTimer\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _lastSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _orgInputValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _prevInputValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _selectedFromList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputEl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLInputElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TemplateRef)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         NguiVirtualListComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         NguiVirtualListComponent:37\n\n                        \n                    \n\n            \n                \n                    Template of NguiInviewPage. Allow users to define their own template\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeDetectorRef\n\n                    \n                \n                        \n                            \n                                Inherited from         NguiVirtualListComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         NguiVirtualListComponent:99\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dynamicComponentService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DynamicComponentService\n\n                    \n                \n                        \n                            \n                                Inherited from         NguiVirtualListComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         NguiVirtualListComponent:98\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                        \n                            \n                                Inherited from         NguiVirtualListComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         NguiVirtualListComponent:97\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviewPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentRef\n\n                    \n                \n                        \n                            \n                                Inherited from         NguiVirtualListComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         NguiVirtualListComponent:89\n\n                        \n                    \n\n            \n                \n                    The last NguiInviewPageComponent being inserted\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviewPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         NguiVirtualListComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         NguiVirtualListComponent:93\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isListLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         NguiVirtualListComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         NguiVirtualListComponent:92\n\n                        \n                    \n\n            \n                \n                    Indicates if a page is still loading\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagesRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('pages', {read: ViewContainerRef})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         NguiVirtualListComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         NguiVirtualListComponent:61\n\n                        \n                    \n\n            \n                \n                    the container NguiInviewPage will be inserted\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Renderer2\n\n                    \n                \n                        \n                            \n                                Inherited from         NguiVirtualListComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         NguiVirtualListComponent:96\n\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n\n                \n                    \n                        getisReady()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts:56\n                                \n                            \n                    \n                        \n                                returns autocomplete display condition\nautocompolete list is only visible\n\nwhen input element is focused or list element is focused\nwhen input value has enought characters\nand user just did not selected or escaped\n\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  ContentChild,\n  Input,\n  OnInit,\n  TemplateRef\n} from '@angular/core';\n\nimport { fireEvent } from '../../ngui-utils/src/fire-event';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NoMatchFound } from './no-match-found';\nimport { NoneSelect } from './none-select';\nimport {fromEvent} from 'rxjs';\n\n@Component({\n  selector: 'ngui-autocomplete',\n  template: `\n    \n      \n        \n      \n      \n    \n  `,\n  styles: [`\n    :host {position: absolute; background-color: #fff; max-height: 300px; overflow: auto}\n    .ngui-autocomplete { border: 1px solid #ccc; padding: 4px }\n  `]\n})\nexport class NguiAutocompleteComponent extends NguiVirtualListComponent implements OnInit {\n  @Input() for: string; // input tag id\n  @Input() minInputChars = 1;\n  @Input() blankOption = 'Select One';\n  @Input() noMatchItem = 'No Match Found';\n\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef;\n\n  inputEl: HTMLInputElement;\n  _focused: any = {input: false, listItem: false};\n  _focusTimer;\n  _acTimer;\n  _selectedFromList: boolean;\n  _escapedFromList: boolean;\n  _orgInputValue: string;\n  _prevInputValue: string;\n  _lastSelected: any;\n\n  /**\n   * returns autocomplete display condition\n   * autocompolete list is only visible\n   *   - when input element is focused or list element is focused\n   *   - when input value has enought characters\n   *   - and user just did not selected or escaped\n   */\n  get isReady(): boolean {\n    const selectedOrEscaped = this._selectedFromList || this._escapedFromList;\n    const focused = this._focused.input || this._focused.listItem;\n    const minChars = this.inputEl.value.length >= this.minInputChars;\n\n    return (!selectedOrEscaped && focused && minChars);\n  }\n\n  ngOnInit(): void {\n    this.inputEl =  document.querySelector('#' + this.for); // eslint-disable-line\n    this.positionThisUnderInputEl();\n\n    fromEvent(this.inputEl, 'keyup').subscribe(this.onInputElKeyup.bind(this));\n    this.inputEl.addEventListener('focus', this.onInputElFocused.bind(this));\n    this.inputEl.addEventListener('blur', this.onInputElBlurred.bind(this));\n    this.selected.subscribe(this.onSelected.bind(this));\n    this.escaped.subscribe(this.onEscaped.bind(this));\n  }\n\n  onSelected(value): void {\n    this._selectedFromList = true;\n    this.inputEl.focus();\n    this._lastSelected = value;\n    this.cdr.detectChanges();    // for ChangeDetectionStrategy.OnPush\n  }\n\n  onEscaped(): void {\n    this._escapedFromList = true;\n    this.inputEl.focus();\n    if (!this._lastSelected) {\n      this.inputEl.value = this._orgInputValue;\n    }\n    this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\n  }\n\n  onInputElFocused(event): void {\n    this.isListLoading = false;\n    if (typeof this._orgInputValue === 'undefined') {\n      this._orgInputValue = this.inputEl.value;\n    }\n    this._prevInputValue = this.inputEl.value;\n    this.setFocused('input', true);\n  }\n\n  onInputElBlurred(): void {\n    this.setFocused('input', false);\n  }\n\n  clearList(): void {\n    this.inviewPages.forEach(compRef => {\n      compRef.destroy();\n    });\n    this.inviewPages = [];\n  }\n\n  onInputElKeyup(event: KeyboardEvent): void {\n    const firstList = this.element.nativeElement.querySelector('ngui-list-item');\n    if (event.key === 'Enter' || event.key === 'Escape') {\n      if (firstList) {\n        fireEvent(firstList, 'keyup', {key: event.key});\n      } else {\n        this.onEscaped();\n      }\n    } else if ((event.key === 'ArrowDown' || event.key === 'ArrowRight') && firstList) {\n      firstList.focus();\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\n      //\n    } else if (this.inputEl.value.length >= this.minInputChars) {\n      this._selectedFromList = false;\n      this._escapedFromList = false;\n      this.addAutocompleteList();\n    }\n  }\n\n  /** Complete the first page of autocomplete */\n  addAutocompleteList(): void {\n    if (this.isReady) {\n      clearTimeout(this._acTimer);\n      this._acTimer = setTimeout(() => {\n        this.isListLoading = false; // ???????/\n        this._prevInputValue = this.inputEl.value;\n        this._escapedFromList = false;\n        this._selectedFromList = false;\n        this.clearList();\n        this.addAnInviewPageToPages();\n      }, 200);\n    }\n  }\n\n  /** Complete after the first page of autocomplete when it scrolls to the bottom */\n  addMorePages(): void {\n    if (this.inviewPages.length) {\n      this.addAnInviewPageToPages();\n    }\n  }\n\n  setFocused(elType: 'input' | 'listItem', val: boolean): void {\n    if (val) {\n      clearTimeout(this._focusTimer);\n      this._focused = {input: false, listItem: false};\n      this._focused[elType] = true;\n    } else {\n      this._focusTimer = setTimeout(() => {\n        this._focused[elType] = false;\n        this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\n      }, 100);\n    }\n  }\n\n  positionThisUnderInputEl(): void {\n    const thisEl = this.element.nativeElement;\n    const thisInputElBCR = this.inputEl.getBoundingClientRect();\n    const top = thisInputElBCR.top + thisInputElBCR.height + window.scrollY;\n\n    this.renderer.setStyle(thisEl, 'left', `${thisInputElBCR.left}px`);\n    this.renderer.setStyle(thisEl, 'top', `${top}px`);\n    this.renderer.setStyle(thisEl, 'minWidth', `${thisInputElBCR.width}px`);\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array): void {\n    this.isListLoading = false;\n\n    // TODO: ........ for 1st page only, show no match found or blank option\n    let noMatchItem: any;\n    let blankItem: any = {};\n    if (this.inviewPages.length === 1) {\n      if (this.noMatchItem && (!items || items.length === 0)) { // add no match item\n        noMatchItem = new NoMatchFound();\n        blankItem.html = this.noMatchItem;\n      } else if (this.blankOption) {\n        blankItem = new NoneSelect();\n        blankItem.html = this.blankOption;\n      }\n    }\n\n    const allItems = [].concat(noMatchItem, blankItem, items).filter(x => x);\n    this.inviewPage.instance.setItems(allItems);\n    this.cdr.detectChanges();\n  }\n\n}\n\n    \n\n\n    \n            \n    :host {position: absolute; background-color: #fff; max-height: 300px; overflow: auto}\n    .ngui-autocomplete { border: 1px solid #ccc; padding: 4px }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiAutocompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiCommonModule.html":{"url":"modules/NguiCommonModule.html","title":"module - NguiCommonModule","body":"\n                   \n\n\n\n\n    Modules\n    NguiCommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NguiInviewModule\n                        \n                        \n                            NguiListModule\n                        \n                        \n                            NguiUtilsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NguiInviewModule\n                        \n                        \n                            NguiListModule\n                        \n                        \n                            NguiUtilsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\nimport {NguiListModule} from './ngui-list/ngui-list.module';\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\n\n@NgModule({\n  imports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ],\n  exports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ]\n})\nexport class NguiCommonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NguiHighlightPipe.html":{"url":"pipes/NguiHighlightPipe.html","title":"pipe - NguiHighlightPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  NguiHighlightPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        nguiHighlight\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(text: string, search: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'nguiHighlight' })\nexport class NguiHighlightPipe implements PipeTransform {\n  transform(text: string, search: string): string {\n    let ret = text;\n    if (search) {\n      const re  = new RegExp(search, 'ig');\n      ret = text.replace(re, match => `${match}`);\n    }\n\n    return ret;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewComponent.html":{"url":"components/NguiInviewComponent.html","title":"component - NguiInviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NguiInviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n\n\n\n    \n        Description\n    \n    \n        An element that listens to viewport positioning and fires inView and notInview events\nExample\n\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview\n            \n\n\n            \n                styles\n                :host {display: block;}\n            \n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isInview\n                            \n                            \n                                observer\n                            \n                            \n                                once80PctVisible\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultInviewHandler\n                            \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEnabled\n                            \n                            \n                                observerOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                inview\n                            \n                            \n                                notInview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blurEnabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:46\n                            \n                        \n                \n                    \n                        Controls whether blur effect is applied to a component with less than 80% intersection ratio.\nOnly applies when there are no \"inview\" event handlers defined.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                \n                \n                    \n                        Type :     IntersectionObserverInit\n\n                    \n                \n                \n                    \n                        Default value : {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:39\n                            \n                        \n                \n                    \n                        IntersectionObserver options\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:42\n                            \n                        \n                \n                    \n                        Deprecated config. Use observerOptions instead.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        inview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        notInview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultInviewHandler\n                        \n                    \n                \n            \n            \n                \ndefaultInviewHandler(entry)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:96\n                \n            \n\n\n            \n                \n                    default intersection handler, which sets blur dependes on intersection ratio\nthis won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleIntersect\n                        \n                    \n                \n            \n            \n                \nhandleIntersect(entries)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:80\n                \n            \n\n\n            \n                \n                    fires (inview) and (notInview) events when this component is visible or not visible\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entries\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:75\n                \n            \n\n\n            \n                \n                    stop IntersectionObserver\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:63\n                \n            \n\n\n            \n                \n                    Starts IntersectionObserver\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isInview\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:53\n                        \n                    \n\n            \n                \n                    indicates that this element is in viewport\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        observer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IntersectionObserver\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        once80PctVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:55\n                        \n                    \n\n            \n                \n                    indicates that this element is 80% in viewport. Used by the default callback\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TemplateRef, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:36\n                        \n                    \n\n            \n                \n                     reference\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    TemplateRef\n} from '@angular/core';\n\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n An element that listens to viewport positioning and fires inView and notInview events\n ### Example\n ```html\n \n   \n \n ```\n */\n@Component({\n  selector: 'ngui-inview',\n  template: `\n        \n        \n    `,\n  styles: [':host {display: block;}']\n})\nexport class NguiInviewComponent implements OnInit, OnDestroy {\n    /**  reference */\n  @ContentChild(TemplateRef, {static: true}) template: TemplateRef;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n  /** Controls whether blur effect is applied to a component with less than 80% intersection ratio.\n   * Only applies when there are no \"inview\" event handlers defined.\n   **/\n  @Input() blurEnabled = true;\n\n  @Output() inview: EventEmitter = new EventEmitter();\n  @Output() notInview: EventEmitter = new EventEmitter();\n\n  observer: IntersectionObserver;\n    /** indicates that this element is in viewport */\n  isInview = false;\n    /** indicates that this element is 80% in viewport. Used by the default callback */\n  once80PctVisible = false;\n\n  constructor(\n        private element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** stop IntersectionObserver */\n  ngOnDestroy(): void {\n    this.observer.disconnect();\n  }\n\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.isInview = true;\n        this.defaultInviewHandler(entry);\n        this.inview.emit(entry);\n      } else {\n        this.notInview.emit(entry);\n      }\n    });\n  }\n\n    /**\n     * default intersection handler, which sets blur dependes on intersection ratio\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n     */\n  defaultInviewHandler(entry): any {\n    if (!this.blurEnabled || this.once80PctVisible || this.inview.observers.length) {\n      return;\n    }\n\n    if (entry.intersectionRatio \n    \n\n\n    \n            :host {display: block;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiInviewDirective.html":{"url":"directives/NguiInviewDirective.html","title":"directive - NguiInviewDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NguiInviewDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [nguiInview], [nguiOutview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                            \n                                observer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observerOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nguiInview\n                            \n                            \n                                nguiOutview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                \n                \n                    \n                        Type :     IntersectionObserverInit\n\n                    \n                \n                \n                    \n                        Default value : {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:24\n                            \n                        \n                \n                    \n                        IntersectionObserver options\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:27\n                            \n                        \n                \n                    \n                        Deprecated config. Use observerOptions instead.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nguiInview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:30\n                            \n                        \n                \n                    \n                        Event that will be fired when in viewport\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nguiOutview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:32\n                            \n                        \n                \n                    \n                        Event that will be fired when out of  viewport\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleIntersect\n                        \n                    \n                \n            \n            \n                \nhandleIntersect(entries)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:62\n                \n            \n\n\n            \n                \n                    Fires (nguiInview) event when this element is in viewport\n and fires (nguiOutview) event when this element is not in viewport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entries\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:52\n                \n            \n\n\n            \n                \n                    Stops IntersectionObserver\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:40\n                \n            \n\n\n            \n                \n                    Starts IntersectionObserver\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        observer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IntersectionObserver\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n */\n@Directive({\n    selector: '[nguiInview], [nguiOutview]' // eslint-disable-line\n})\nexport class NguiInviewDirective implements OnInit, OnDestroy {\n  observer: IntersectionObserver;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n\n    /** Event that will be fired when in viewport */\n  @Output() nguiInview: EventEmitter = new EventEmitter();\n    /** Event that will be fired when out of  viewport */\n  @Output() nguiOutview: EventEmitter = new EventEmitter();\n\n  constructor(\n        public element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** Stops IntersectionObserver */\n  ngOnDestroy(): void {\n    if (isPlatformBrowser(this.platformId) && this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n    /**\n     * Fires (nguiInview) event when this element is in viewport\n     *  and fires (nguiOutview) event when this element is not in viewport\n     */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.nguiInview.emit(entry);\n      } else {\n        this.nguiOutview.emit(entry);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiInviewModule.html":{"url":"modules/NguiInviewModule.html","title":"module - NguiInviewModule","body":"\n                   \n\n\n\n\n    Modules\n    NguiInviewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/ngui-inview.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NguiInviewComponent\n                        \n                        \n                            NguiInviewDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NguiInviewComponent\n                        \n                        \n                            NguiInviewDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiInviewComponent} from './src/ngui-inview.component';\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\n\nexport {NguiInviewComponent, NguiInviewDirective};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ],\n  exports: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ]\n})\nexport class NguiInviewModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewPageComponent.html":{"url":"components/NguiInviewPageComponent.html","title":"component - NguiInviewPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NguiInviewPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        A block of component that listens to inView and outView events,\nso that it empties contents when out of view after backup items\nand restores the contents when in view\nExample\n\n\n\nrow number: {{ num }}\n\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview-page\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n  \n  \n  \n  \n\n\n\n   Error: requires [items] \n   Error: requires &lt;ng-template>\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsEl\n                            \n                            \n                                destroyed\n                            \n                            \n                                itemsBackup\n                            \n                            \n                                outView\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emptyItems\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                restoreItems\n                            \n                            \n                                setItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                observerOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:60\n                            \n                        \n                \n                    \n                        List of elements that are used to render this element\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                \n                \n                    \n                        Type :     IntersectionObserverInit\n\n                    \n                \n                \n                    \n                        Default value : {threshold: [0, .01]}\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:63\n                            \n                        \n                \n                    \n                        IntersectionObserver options\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emptyItems\n                        \n                    \n                \n            \n            \n                \nemptyItems()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:106\n                \n            \n\n\n            \n                \n                    Empty items when not in viewport, so that elements are not rendered\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreItems\n                        \n                    \n                \n            \n            \n                \nrestoreItems()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:84\n                \n            \n\n\n            \n                \n                    Restore items when in viewport, so that elements are rendered\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItems\n                        \n                    \n                \n            \n            \n                \nsetItems(items: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contentsEl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:72\n                        \n                    \n\n            \n                \n                    The first element of this component.\nThe height of it remains the same even when items get empty out.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemsBackup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:67\n                        \n                    \n\n            \n                \n                    The copy of items. This is set when this element is out of viewport\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outView\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:65\n                        \n                    \n\n            \n                \n                    Indicates that the page of out of viewport\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TemplateRef, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:56\n                        \n                    \n\n            \n                \n                    Allow users to change the contents\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\n\n/**\n * A block of component that listens to inView and outView events,\n * so that it empties contents when out of view after backup items\n * and restores the contents when in view\n\n ### Example\n ```html\n \n   \n     \n       row number: {{ num }}\n     \n   \n \n ```\n */\n@Component({\n  selector: 'ngui-inview-page',\n  template: `\n    \n      \n      \n      \n      \n    \n\n    \n       Error: requires [items] \n       Error: requires &lt;ng-template>\n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\n\n  /** Allow users to change the contents */\n  @ContentChild(TemplateRef, {static: true}) template: TemplateRef;\n  // @Input('template') template: TemplateRef;\n\n  /** List of elements that are used to render this element */\n  @Input() items: Array;\n\n  /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [0, .01]};\n  /** Indicates that the page of out of viewport */\n  outView = false;\n  /** The copy of items. This is set when this element is out of viewport */\n  itemsBackup: Array = [];\n  /**\n   * The first element of this component.\n   * The height of it remains the same even when items get empty out.\n   */\n  contentsEl: HTMLElement;\n  destroyed: boolean;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private cdRef: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Restore items when in viewport, so that elements are rendered\n   */\n  restoreItems(): void {\n    if (this.outView) {\n      this.outView = false;\n      this.items = Array.from(this.itemsBackup || []);\n      this.itemsBackup = undefined;\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  ngOnInit(): void {\n    this.contentsEl =\n      this.element.nativeElement.querySelector('.inview-page.contents');\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  /**\n   * Empty items when not in viewport, so that elements are not rendered\n   */\n  emptyItems(): void {\n    if (this.items && this.contentsEl && !this.outView) {\n      // set height before emptying contents\n      const height = this.element.nativeElement.getBoundingClientRect().height;\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\n\n      this.outView = true;\n      this.itemsBackup = Array.from(this.items || []);\n      this.items = undefined;\n      if (!this.destroyed) {\n        this.cdRef.detectChanges();\n      }\n    }\n  }\n\n  setItems(items: Array): void {\n    if (!this.destroyed) {\n      this.items = items;\n      this.cdRef.detectChanges();\n    }\n  }\n\n}\n\n    \n\n\n    \n            \n    :host {display: block}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Error: requires [items]    Error: requires '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListDirective.html":{"url":"directives/NguiListDirective.html","title":"directive - NguiListDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NguiListDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ngui-list\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n                \n                    \n                        Fired when ESC key is pressed from \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:13\n                            \n                        \n                \n                    \n                        Fired when child  is selected\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: 'ngui-list' // eslint-disable-line\n})\nexport class NguiListDirective {\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  constructor(public element: ElementRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListItemDirective.html":{"url":"directives/NguiListItemDirective.html","title":"directive - NguiListItemDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NguiListItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ngui-list-item\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nextSibling\n                            \n                            \n                                parentListComp\n                            \n                            \n                                prevSibling\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blurred\n                            \n                            \n                                focused\n                            \n                            \n                                keydown\n                            \n                            \n                                keyup\n                            \n                            \n                                mousedown\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                click\n                            \n                            \n                                focus\n                            \n                            \n                                keydown\n                            \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2, viewContainer: ViewContainerRef, listDirective: NguiListDirective, virtualListComponent: NguiVirtualListComponent, autocompleteComponent: NguiAutocompleteComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        listDirective\n                                                  \n                                                        \n                                                                        NguiListDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualListComponent\n                                                  \n                                                        \n                                                                        NguiVirtualListComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autocompleteComponent\n                                                  \n                                                        \n                                                                        NguiAutocompleteComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            blur\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:98\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:88\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:92\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keydown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:52\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:75\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blurred\n                        \n                    \n                \n            \n            \n                \nblurred()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('blur', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focused\n                        \n                    \n                \n            \n            \n                \nfocused()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('focus', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keydown\n                        \n                    \n                \n            \n            \n                \nkeydown(event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('keydown', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keyup\n                        \n                    \n                \n            \n            \n                \nkeyup(event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('keyup', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mousedown\n                        \n                    \n                \n            \n            \n                \nmousedown()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nextSibling\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentListComp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevSibling\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NguiListDirective } from './ngui-list.directive';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\nimport { NoneSelect } from './none-select';\nimport { NoMatchFound } from './no-match-found';\n\n// tabindex, keydown, keyup(ENTER, ESC), click\n@Directive({\n  selector: 'ngui-list-item' // eslint-disable-line\n})\nexport class NguiListItemDirective implements OnInit {\n  @Input('item') object: any; // eslint-disable-line\n\n  nextSibling: HTMLElement;\n  prevSibling: HTMLElement;\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private viewContainer: ViewContainerRef,\n    @Optional() @Host() private listDirective: NguiListDirective,\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\n    if (!this.parentListComp) {\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\n    }\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\n      this.viewContainer.clear();\n      this.el.nativeElement.innerHTML = this.object.html;\n    }\n  }\n\n  // handles keyboard up, down, left, right\n  @HostListener('keydown', ['$event']) keydown(event): void {\n    const thisListItem = this.el.nativeElement;\n    const keyCode = event.which || event.keyCode;\n    const parentListEl = this.parentListComp.element.nativeElement;\n    const listItems: Array\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\n    const listItemNdx = listItems.indexOf(thisListItem);\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\n\n    switch (keyCode) {\n    case 37: case 38: // up arrow, left arrow\n      prevListItem.focus();\n      break;\n    case 39: case 40: // down arrow, right arrow\n      nextListItem.focus();\n      break;\n    default:\n      break;\n    }\n  }\n\n  // handles keyboard enter(13), esc(27)\n  @HostListener('keyup', ['$event']) keyup(event): void {\n    switch (event.key) {\n    case 'Enter':\n      this.parentListComp.selected.emit(this.object);\n      break;\n    case 'Escape':\n      this.parentListComp.escaped.emit();\n      break;\n    default:\n      break;\n    }\n  }\n\n  @HostListener('click', ['$event']) mousedown(): void {\n    this.parentListComp.selected.emit(this.object);\n  }\n\n  @HostListener('focus', ['$event']) focused(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', true);\n    }\n  }\n\n  @HostListener('blur', ['$event']) blurred(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiListModule.html":{"url":"modules/NguiListModule.html","title":"module - NguiListModule","body":"\n                   \n\n\n\n\n    Modules\n    NguiListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_imports\n\n\n\ncluster_NguiListModule_exports\n\n\n\ncluster_NguiListModule_declarations\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/ngui-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NguiAutocompleteComponent\n                        \n                        \n                            NguiInviewPageComponent\n                        \n                        \n                            NguiListDirective\n                        \n                        \n                            NguiListItemDirective\n                        \n                        \n                            NguiVirtualListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NguiInviewModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NguiAutocompleteComponent\n                        \n                        \n                            NguiInviewPageComponent\n                        \n                        \n                            NguiListDirective\n                        \n                        \n                            NguiListItemDirective\n                        \n                        \n                            NguiVirtualListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\nimport {NguiListDirective} from './src/ngui-list.directive';\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\n\nexport {NguiAutocompleteComponent, NguiListItemDirective, NguiListDirective, NguiInviewPageComponent, NguiVirtualListComponent};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NguiInviewModule\n  ],\n  declarations: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  exports: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ]\n})\nexport class NguiListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiUtilsModule.html":{"url":"modules/NguiUtilsModule.html","title":"module - NguiUtilsModule","body":"\n                   \n\n\n\n\n    Modules\n    NguiUtilsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/ngui-utils.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NguiHighlightPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DynamicComponentService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NguiHighlightPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\nimport {DynamicComponentService} from './src/dynamic-component.service';\nimport { konsole } from './src/konsole';\nimport { fireEvent } from './src/fire-event';\n\nexport {DynamicComponentService, NguiHighlightPipe, konsole, fireEvent};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NguiHighlightPipe],\n  exports: [NguiHighlightPipe],\n  providers: [DynamicComponentService]\n})\nexport class NguiUtilsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiVirtualListComponent.html":{"url":"components/NguiVirtualListComponent.html","title":"component - NguiVirtualListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NguiVirtualListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Virtual List\nThe  inserts  into\n when it is in viewport\nWhen it's inserted, it will be pushed down, which makes it out of viewport.\nUser scrolls down to see the bottom of the list,\nthen it will insert another  again.\n listens to (nguiInview) and (nguiOutview) events,\nwhen  is out of view port, it empties out the contents.\nand it restores back the contents when it is in viewport again.\nExample\n\n\nLoading\nrow number: {{ num }}\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-virtual-list\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n   -->\n  \n   into #pages -->\n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _focused\n                            \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                dynamicComponentService\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                inviewPage\n                            \n                            \n                                inviewPages\n                            \n                            \n                                isListLoading\n                            \n                            \n                                pagesRef\n                            \n                            \n                                    Public\n                                renderer\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAnInviewPageToPages\n                            \n                            \n                                addList\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottomInview\n                            \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, element: ElementRef, dynamicComponentService: DynamicComponentService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dynamicComponentService\n                                                  \n                                                        \n                                                                        DynamicComponentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        bottomInview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:86\n                            \n                        \n                \n                    \n                        Event fired when bottom of the virtual list is in view\nThe handler of this event must call $event.addItems(items: Array) to fill contents\nIf not, only the first page is loaded, and rest of the pages won't be loaded;\nExample\n\n\n\nrow number: {{ num }}\n\nLoading\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:67\n                            \n                        \n                \n                    \n                        Fired when ESC key is pressed from \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:65\n                            \n                        \n                \n                    \n                        Fired when child  is selected\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAnInviewPageToPages\n                        \n                    \n                \n            \n            \n                \naddAnInviewPageToPages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:114\n                \n            \n\n\n            \n                \n                    When the bottom is inview port, this function is called\nIt will insert a dynamicall created NguiInviewPageComponent with the given template.\nIt will also fires (bottomInview) event, so that user can fill up items for the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addList\n                        \n                    \n                \n            \n            \n                \naddList(items: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:103\n                \n            \n\n\n            \n                \n                    Check if necessary input and output is provided\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _focused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dynamicComponentService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DynamicComponentService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviewPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:89\n                        \n                    \n\n            \n                \n                    The last NguiInviewPageComponent being inserted\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviewPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isListLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:92\n                        \n                    \n\n            \n                \n                    Indicates if a page is still loading\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagesRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewContainerRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('pages', {read: ViewContainerRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:61\n                        \n                    \n\n            \n                \n                    the container NguiInviewPage will be inserted\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TemplateRef)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:63\n                        \n                    \n\n            \n                \n                    Template of NguiInviewPage. Allow users to define their own template\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\n\n/**\n * Virtual List\n *\n * The `` inserts  into\n * `` when it is in viewport\n * When it's inserted, it will be pushed down, which makes it out of viewport.\n * User scrolls down to see the bottom of the list,\n * then it will insert another `` again.\n *\n *  listens to (nguiInview) and (nguiOutview) events,\n * when  is out of view port, it empties out the contents.\n * and it restores back the contents when it is in viewport again.\n\n ### Example\n ```html\n \n   \n     Loading\n     row number: {{ num }}\n   \n \n ```\n */\n@Component({\n  selector: 'ngui-virtual-list',\n  template: `\n    \n       -->\n      \n       into #pages -->\n    \n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiVirtualListComponent implements AfterViewInit {\n\n  /** the container NguiInviewPage will be inserted */\n  @ViewChild('pages', { read: ViewContainerRef }) pagesRef: ViewContainerRef;\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef;\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  /**\n   * Event fired when bottom of the virtual list is in view\n   * The handler of this event must call `$event.addItems(items: Array)` to fill contents\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\n\n   ### Example\n   ```html\n   \n     \n       \n          row number: {{ num }}\n       \n       Loading\n     \n   \n   ```\n   */\n  @Output() bottomInview: EventEmitter = new EventEmitter();\n\n  /** The last NguiInviewPageComponent being inserted */\n  inviewPage: ComponentRef;\n  _focused = false;\n  /** Indicates if a page is still loading */\n  isListLoading: boolean;\n  inviewPages: Array> = [];\n\n  constructor(\n    public renderer: Renderer2,\n    public element: ElementRef,\n    public dynamicComponentService: DynamicComponentService,\n    public cdr: ChangeDetectorRef\n  ) {}\n\n  /** Check if necessary input and output is provided */\n  ngAfterViewInit(): void {\n    if (!this.template || !this.bottomInview.observers.length) {\n      console.error(' requires [template] and {bottomInview)');\n    }\n  }\n\n  /**\n   * When the bottom is inview port, this function is called\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\n   */\n  addAnInviewPageToPages(): void {\n    if (!this.isListLoading) {\n      this.isListLoading = true;\n\n      this.inviewPage =\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\n      this.dynamicComponentService.insertComponent(this.inviewPage);\n\n      this.inviewPage.instance.template = this.template;\n      this.inviewPages.push(this.inviewPage);\n\n      this.bottomInview.emit(this); // fire event, so that user can load items\n    }\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array): void {\n    this.isListLoading = false;\n    this.inviewPage.instance.setItems(items);\n  }\n\n}\n\n    \n\n\n    \n            \n    :host {display: block}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->     into #pages -->'\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiVirtualListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoMatchFound.html":{"url":"classes/NoMatchFound.html","title":"class - NoMatchFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoMatchFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No Match Found'\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoMatchFound {\n  html = 'No Match Found';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoneSelect.html":{"url":"classes/NoneSelect.html","title":"class - NoneSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoneSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select'\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/none-select.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoneSelect {\n  html = 'Select';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n1.0.0 (2022-02-09)\n\nSupport for Angular v12 and v13\n\"Ivy\" partial compilation mode\nAngular v11 and below are no longer supported\n\n0.8.0 (2021-02-16)\n\nngui-virtual-list now just inserts newly loaded items without showing  items hidden message.\nobserverOptions can now be customized for ngui-inview-page\nRemoved some console.log() debugging messages\n\n0.7.0 (2020-08-04)\n\nAdd support for Angular 10\nFix issue #15 (deep import warning when using Angular 9+)\n\n0.6.0 (2018-11-02)\n\nAdd support for Angular 7\n\n0.5.0 (2018-08-15)\n\nNew \"blurEnabled\" configuration option for \"ngui-inview\" component\n\"ngui-inview\" component's \"options\" config was renamed to \"observerOptions\" to better represent its purpose\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n            \n            component\n            NguiInviewComponent\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n            \n            directive\n            NguiInviewDirective\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts\n            \n            component\n            NguiAutocompleteComponent\n            \n                27 %\n                (11/40)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n            \n            component\n            NguiInviewPageComponent\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n            \n            directive\n            NguiListItemDirective\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n            \n            directive\n            NguiListDirective\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n            \n            component\n            NguiVirtualListComponent\n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n            \n            class\n            NoMatchFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n            \n            class\n            NoneSelect\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n            \n            injectable\n            DynamicComponentService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n            \n            function\n            fireEvent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n            \n            class\n            konsole\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n            \n            pipe\n            NguiHighlightPipe\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^13.2.2\n        \n            @angular/common : ^13.2.2\n        \n            @angular/compiler : ^13.2.2\n        \n            @angular/core : ^13.2.2\n        \n            @angular/forms : ^13.2.2\n        \n            @angular/platform-browser : ^13.2.2\n        \n            @angular/platform-browser-dynamic : ^13.2.2\n        \n            @angular/router : ^13.2.2\n        \n            rxjs : ^7.5.3\n        \n            tslib : ^2.3.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fireEvent   (projects/.../fire-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fireEvent\n                        \n                    \n                \n            \n            \n                \nfireEvent(el: HTMLElement, type: string, options: any)\n                \n            \n\n\n\n\n            \n                \n                    fire the given event with options on the element\nExample\nfireEvent(el, 'click');\nfireEvent(el, 'keypress', {key: 'Enter'});\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ngui/common\nAngular 12+ UI common directives, functions, services\n\n \n\n\nDemoObject DocumentationCode Coverage ReportUnit Test ReportAcceptance ReportArticle on Medium  \nInstall\n\ninstall @ngui/common\n\n$ npm install @ngui/common --save\nimport NguiCommonModule to your AppModule\n\nimport { NguiInviewModule, NguiListModule, NguiUtilsModule } from '@ngui/common';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule, NguiListModule, NguiInviewModule, NguiUtilsModule],\n  declarations: [AppComponent],\n  providers: [HTTP_PROVIDERS],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }Use it in your code\n\n\n  \nModules\nNguiInViewModule\nHandles lazy rendering of Angular components, which utilizes HTML5 IntersectionObserver.\nFor IE11 and Safari, please add polyfill for this module:\n\nngui-inview component\nngui-inview directive\n\nNguiUtilsModules\nCollection of basic utility functions\n\nDynamicComponentService\nnguiHilight pipe\nfireEvent function\n\nNguiListModule\nHandles list elements with highlight and keyboard/mouse interaction\n\nngui-inview-page component\nngui-list component\nngui-virtual-list component\nngui-autocomplete component\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/konsole.html":{"url":"classes/konsole.html","title":"class - konsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  konsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n        \n\n\n            \n                Description\n            \n            \n                window.konsole alternative\nExample\nkonsole.setLogLevel('error');\nkonsole.log(1,2,3,4,5);\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOG_LEVELS\n                            \n                            \n                                    Static\n                                logLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                    Static\n                                log\n                            \n                            \n                                    Static\n                                setLogLevel\n                            \n                            \n                                    Static\n                                toLog\n                            \n                            \n                                    Static\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        LOG_LEVELS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:11\n                        \n                    \n\n            \n                \n                    all log levels\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        logLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'INFO'\n                    \n                \n                    \n                        \n                                Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:22\n                        \n                    \n\n            \n                \n                    current log level set by setLogLevel, default 'INFO'\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:47\n                \n            \n\n\n            \n                \n                    The same as console.debug() if the current log level is greater than debug\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:77\n                \n            \n\n\n            \n                \n                    The same as console.error() if the current log level is greater than error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        info\n                        \n                    \n                \n            \n            \n                \n                    \n                    info(...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:62\n                \n            \n\n\n            \n                \n                    The same as console.info() if the current log level is greater than info\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:55\n                \n            \n\n\n            \n                \n                    The same as console.log() if the current log level is greater than log\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        setLogLevel\n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:33\n                \n            \n\n\n            \n                \n                    sets the current log level\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        toLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    toLog(param)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:25\n                \n            \n\n\n            \n                \n                    returns if it should call window.console or not\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:70\n                \n            \n\n\n            \n                \n                    The same as console.warn() if the current log level is greater than warn\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class konsole { // eslint-disable-line\n  /** all log levels */\n  static LOG_LEVELS = {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  };\n\n  /** current log level set by setLogLevel, default 'INFO' */\n  static logLevel = 'INFO';\n\n  /** returns if it should call `window.console` or not */\n  static toLog(param): boolean { // returns to log or not\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\n    const requiredNum = this.LOG_LEVELS[param];\n\n    return requiredNum > restrictionNum;\n  }\n\n  /** sets the current log level */\n  static setLogLevel(logLevel: string): any {\n    logLevel = logLevel.toUpperCase();\n    const logLevels = Object.keys(this.LOG_LEVELS);\n    if (logLevels.indexOf(logLevel) > -1) {\n      if (window && window.sessionStorage) { // for browser env.\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\n      }\n      this.logLevel = logLevel;\n    } else {\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\n    }\n  }\n\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\n  static debug(...args: Array): void {\n    if (this.toLog('DEBUG')) {\n        // noinspection TsLint\n        console.debug.apply(console, arguments); // eslint-disable-line\n    }\n  }\n\n  /** The same as `console.log()` if the current log level is greater than `log` */\n  static log(...args: Array): void {\n    if (this.toLog('LOG')) {\n      console.log.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.info()` if the current log level is greater than `info` */\n  static info(...args: Array): void {\n    if (this.toLog('INFO')) {\n        // noinspection TsLint\n        console.info.apply(console, arguments); // eslint-disable-line\n    }\n  }\n\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\n  static warn(...args: Array): void {\n    if (this.toLog('WARN')) {\n      console.warn.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.error()` if the current log level is greater than `error` */\n  static error(...args: Array): void {\n    if (this.toLog('ERROR')) {\n      console.error.apply(console, arguments);\n    }\n  }\n}\n\n// konsole.setLogLevel('all');\n// konsole.debug('yes');\n// konsole.log('yes');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('none');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('no');\n\n// konsole.setLogLevel('info');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('WARN');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('ERROR');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('yes');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Allen Kim\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NguiCommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiInviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiUtilsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_exports\n\n\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
