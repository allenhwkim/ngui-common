var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/DynamicComponentService.html",[0,1.744,1,1.212]],["body/injectables/DynamicComponentService.html",[0,2.011,1,2.004,2,2.291,3,0.361,4,0.361,5,0.31,6,0.544,7,0.544,8,3.317,9,1.869,10,1.08,11,4.12,12,1.626,13,3.331,14,2.718,15,3.331,16,1.57,17,0.832,18,0.045,19,3.331,20,3.331,21,3.331,22,2.011,23,0.53,24,0.26,25,3.331,26,3.331,27,3.331,28,3.331,29,3.507,30,2.718,31,3.331,32,3.331,33,3.331,34,3.331,35,3.331,36,3.331,37,3.331,38,3.331,39,4.309,40,1.57,41,3.331,42,1.77,43,0.539,44,0.993,45,4.777,46,3.925,47,1.247,48,3.331,49,4.309,50,0.961,51,2.291,52,1.215,53,3.331,54,1.17,55,1.17,56,1.17,57,3.331,58,2.291,59,1.44,60,2.718,61,3.331,62,3.331,63,3.331,64,2.313,65,3.331,66,2.718,67,3.331,68,2.718,69,3.331,70,3.331,71,3.331,72,3.331,73,0.894,74,2.291,75,4.021,76,3.331,77,2.291,78,3.925,79,2.291,80,2.313,81,3.331,82,3.925,83,3.331,84,2.718,85,1.57,86,1.591,87,0.476,88,2.291,89,2.291,90,2.291,91,3.331,92,1.77,93,2.291,94,2.011,95,2.291,96,3.925,97,0.683,98,2.291,99,2.291,100,2.313,101,1.383,102,1.591,103,2.291,104,2.291,105,2.291,106,2.291,107,0.017,108,0.025,109,0.017]],["title/modules/NguiCommonModule.html",[110,0.861,111,1.535]],["body/modules/NguiCommonModule.html",[3,0.554,4,0.554,5,0.475,6,0.4,7,0.4,17,0.936,18,0.044,23,0.475,24,0.2,87,0.729,97,1.461,107,0.027,108,0.034,109,0.027,110,1.048,111,3.068,112,1.316,113,1.474,114,1.316,115,1.656,116,1.656,117,1.656,118,2.603,119,2.867,120,2.867,121,2.867,122,2.411,123,2.708,124,2.708,125,2.37,126,1.867,127,1.175,128,3.514,129,2.37,130,2.37,131,2.44,132,2.867,133,2.867,134,3.514,135,2.867,136,3.514]],["title/pipes/NguiHighlightPipe.html",[137,1.535,138,1.535]],["body/pipes/NguiHighlightPipe.html",[3,0.589,4,0.589,5,0.505,6,0.528,7,0.528,17,0.679,18,0.045,23,0.505,24,0.212,47,1.398,52,0.991,54,1.113,55,1.502,56,1.113,59,1.248,73,0.775,87,0.775,92,1.984,94,2.254,107,0.028,108,0.035,109,0.028,137,2.461,138,2.461,139,3.734,140,3.779,141,3.046,142,1.566,143,4.632,144,3.734,145,4.632,146,3.412,147,5.266,148,3.734,149,4.632,150,4.632,151,1.759,152,5.036,153,3.734,154,1.566,155,3.734,156,3.734,157,3.734,158,2.797]],["title/components/NguiInviewComponent.html",[12,0.861,159,1.212]],["body/components/NguiInviewComponent.html",[3,0.265,4,0.265,5,0.227,6,0.591,7,0.591,10,0.792,12,1.322,16,1.242,17,0.479,18,0.045,22,2.414,23,0.227,24,0.096,40,1.734,42,1.728,43,0.396,44,0.786,47,0.987,50,1.106,52,1.39,54,0.97,55,1.265,56,0.97,59,1.231,60,2.151,68,2.151,73,0.92,80,1.831,85,1.242,86,1.168,87,0.349,94,1.015,97,1.369,101,1.592,102,1.831,107,0.013,108,0.02,109,0.013,114,0.63,142,0.705,151,1.242,154,1.364,159,1.544,160,2.258,161,1.168,162,1.168,163,3.604,164,1.372,165,2.276,166,1.831,167,2.561,168,2.636,169,2.556,170,2.155,171,4.435,172,2.223,173,1.963,174,2.258,175,2.224,176,1.963,177,2.258,178,2.258,179,3.252,180,2.653,181,3.252,182,2.636,183,2.151,184,2.556,185,2.223,186,1.592,187,2.653,188,2.561,189,2.125,190,1.592,191,1.015,192,1.734,193,2.653,194,2.636,195,1.719,196,1.544,197,2.414,198,1.682,199,2.636,200,2.151,201,3.003,202,2.636,203,2.636,204,2.636,205,3.681,206,4.242,207,3.681,208,2.636,209,1.544,210,2.636,211,1.831,212,1.831,213,1.401,214,1.831,215,1.831,216,1.831,217,2.151,218,2.151,219,1.682,220,2.772,221,1.682,222,2.653,223,1.831,224,1.963,225,2.653,226,2.678,227,1.682,228,1.682,229,2.636,230,1.682,231,2.151,232,2.151,233,2.636,234,2.151,235,2.636,236,2.151,237,2.636,238,2.636,239,1.682,240,2.151,241,1.682,242,3.681,243,1.372,244,1.999,245,1.682,246,2.636,247,1.682,248,2.151,249,2.223,250,1.682,251,2.556,252,1.682,253,2.636,254,2.258,255,1.168,256,1.831,257,1.831,258,1.682,259,1.168,260,1.372,261,1.372,262,0.792,263,1.728,264,1.592,265,1.372,266,2.151,267,2.151,268,1.372,269,1.372,270,1.372,271,1.372,272,1.372,273,1.372,274,1.372,275,1.372,276,1.682,277,1.682,278,1.682,279,1.682,280,1.682,281,1.682,282,1.682,283,1.682,284,0.446,285,2.556,286,1.168,287,0.705,288,1.168,289,1.168,290,0.705,291,1.168,292,0.63,293,0.63,294,0.881,295,0.63,296,0.63,297,1.015,298,1.168,299,0.562,300,1.168,301,0.63,302,1.015,303,1.168]],["title/directives/NguiInviewDirective.html",[284,0.766,296,1.081]],["body/directives/NguiInviewDirective.html",[3,0.35,4,0.35,5,0.3,6,0.6,7,0.6,10,1.046,17,0.592,18,0.045,23,0.3,24,0.126,40,1.816,42,2.048,43,0.522,44,0.97,47,1.218,50,1.365,52,1.378,54,0.97,55,0.97,56,0.97,59,1.288,73,1.013,86,1.541,87,0.461,101,1.965,102,2.26,107,0.017,108,0.025,109,0.017,127,1.088,142,0.931,151,1.533,154,1.617,163,3.655,165,2.446,167,3.135,169,3.28,172,1.965,173,2.327,174,2.676,175,1.533,180,3.144,183,2.655,184,2.947,185,2.563,186,1.965,188,2.852,189,2.402,190,1.965,191,1.34,192,2.129,193,3.144,195,0.831,196,0.931,209,2.1,211,2.26,212,2.26,213,1.729,214,2.26,215,2.26,216,2.26,217,2.655,218,2.655,220,3.022,222,3.144,223,2.26,224,2.327,225,3.144,226,2.947,240,2.655,243,1.811,244,2.225,248,2.655,260,1.811,261,1.811,262,1.046,264,1.34,265,1.811,266,2.655,267,2.655,268,2.655,269,2.655,270,1.811,271,1.811,272,1.811,273,1.811,274,1.811,275,1.811,284,0.864,295,0.831,296,1.218,297,3.084,304,1.811,305,4.167,306,3.255,307,2.676,308,3.255,309,2.219,310,2.219,311,2.219,312,2.947,313,2.219,314,2.219,315,3.255,316,2.219,317,2.219,318,2.219,319,1.34,320,1.34,321,2.219,322,2.219]],["title/modules/NguiInviewModule.html",[110,0.861,122,1.212]],["body/modules/NguiInviewModule.html",[3,0.57,4,0.57,5,0.488,6,0.412,7,0.412,17,0.946,18,0.044,23,0.613,24,0.205,87,0.75,107,0.027,108,0.034,109,0.027,110,1.077,112,1.352,113,1.515,114,1.352,115,2.337,116,1.702,117,1.702,118,2.636,122,2.394,125,2.411,126,1.92,127,1.207,129,1.92,130,2.411,131,2.508,159,2.43,262,1.702,296,2.169,323,2.947,324,2.947,325,2.947,326,3.612,327,3.151,328,3.151,329,3.612,330,3.612]],["title/components/NguiInviewPageComponent.html",[12,0.861,290,1.212]],["body/components/NguiInviewPageComponent.html",[3,0.257,4,0.257,5,0.22,6,0.581,7,0.581,10,0.768,12,1.307,16,1.212,17,0.296,18,0.045,22,2.743,23,0.22,24,0.093,40,1.502,43,0.384,44,0.767,47,0.963,50,1.079,52,1.337,54,0.767,55,1.175,56,0.767,59,1.317,64,1.787,66,1.33,73,0.943,80,1.787,85,1.212,87,0.338,92,0.866,97,1.355,107,0.012,108,0.02,109,0.012,114,0.61,127,1.519,142,0.684,151,1.212,159,0.684,160,2.213,161,1.132,162,1.132,165,2.255,166,1.787,167,2.743,170,2.236,172,1.553,173,1.924,174,2.213,175,2.203,176,1.924,177,2.213,178,2.736,184,2.513,185,2.185,186,1.553,188,1.924,189,1.367,191,0.984,192,1.705,195,1.193,196,1.337,197,2.185,211,1.787,212,1.787,220,1.553,244,2.255,249,1.924,251,1.787,254,2.513,255,1.132,256,1.787,257,1.787,259,1.132,263,1.694,264,1.924,284,0.433,285,2.513,286,1.132,287,0.684,288,1.132,289,1.132,290,1.518,291,1.132,292,0.61,293,0.61,294,1.21,295,0.61,296,0.61,297,0.984,298,1.132,299,0.545,300,1.132,301,0.61,302,0.984,303,1.132,331,2.711,332,1.33,333,3.94,334,2.099,335,3.576,336,2.952,337,2.573,338,3.676,339,2.099,340,2.099,341,2.099,342,2.099,343,2.185,344,3.415,345,2.907,346,2.573,347,3.187,348,3.187,349,3.187,350,3.619,351,3.619,352,2.573,353,2.213,354,2.513,355,3.187,356,2.952,357,2.573,358,2.646,359,1.63,360,3.415,361,2.573,362,1.787,363,2.573,364,1.63,365,1.63,366,3.619,367,3.619,368,1.63,369,1.63,370,1.63,371,2.573,372,2.573,373,1.63,374,2.099,375,1.63,376,2.099,377,4.187,378,2.573,379,2.099,380,2.573,381,1.553,382,1.63,383,2.099,384,2.213,385,1.63,386,1.63,387,2.099,388,2.573,389,1.63,390,3.619,391,3.619,392,1.63,393,2.573,394,3.187,395,2.573,396,3.187,397,2.573,398,1.63,399,1.63,400,3.187,401,1.63,402,1.63,403,1.63,404,1.63]],["title/directives/NguiListDirective.html",[284,0.766,299,0.965]],["body/directives/NguiListDirective.html",[3,0.533,4,0.533,5,0.456,6,0.598,7,0.598,17,0.614,18,0.045,23,0.456,24,0.192,30,2.755,42,2.555,43,0.794,44,1.296,50,1.417,52,1.347,54,1.007,55,1.007,56,1.007,73,1.053,87,0.701,97,1.296,107,0.026,108,0.033,109,0.026,142,1.417,154,1.824,165,2.392,175,2.048,190,2.625,191,2.039,192,2.475,226,3.302,284,1.154,294,1.453,295,1.264,299,1.453,307,3.019,312,3.525,319,2.039,320,2.039,331,2.791,405,2.755,406,3.922,407,4.285,408,4.347,409,3.019,410,3.019,411,3.546,412,3.377,413,3.546,414,3.377]],["title/directives/NguiListItemDirective.html",[284,0.766,301,1.081]],["body/directives/NguiListItemDirective.html",[3,0.304,4,0.304,5,0.261,6,0.589,7,0.589,17,0.815,18,0.045,23,0.261,24,0.11,29,2.748,40,0.908,43,0.454,44,0.873,47,1.097,50,1.229,52,1.352,54,0.575,55,0.575,56,1.269,59,0.644,73,0.883,87,0.4,92,2.476,97,1.431,107,0.015,108,0.022,109,0.015,142,0.809,151,1.38,158,1.164,173,2.139,175,1.38,176,2.39,185,2.39,186,1.769,192,1.865,195,1.097,197,1.164,201,2.891,209,2.104,213,1.883,244,2.195,249,1.164,264,2.706,284,0.777,287,1.881,292,1.678,293,1.097,294,1.82,295,0.722,299,1.498,301,1.097,302,2.706,319,1.769,320,1.769,331,2.746,345,1.339,353,2.461,354,2.748,358,1.164,362,1.339,374,3.229,409,1.339,415,1.572,416,3.543,417,3.543,418,3.543,419,2.929,420,3.229,421,3.543,422,3.543,423,2.929,424,1.928,425,3.543,426,3.543,427,3.543,428,3.543,429,2.929,430,2.39,431,1.928,432,3.473,433,1.928,434,1.928,435,1.928,436,2.929,437,1.928,438,2.929,439,1.928,440,1.928,441,1.928,442,1.928,443,1.928,444,1.572,445,1.572,446,1.572,447,1.769,448,1.572,449,1.572,450,1.769,451,1.572,452,2.929,453,1.928,454,1.928,455,1.572,456,1.928,457,2.929,458,1.928,459,1.928,460,1.928,461,1.928,462,1.928,463,1.928,464,1.572,465,2.929,466,2.929,467,1.928,468,1.928,469,1.928,470,2.39,471,2.929,472,2.39,473,2.39,474,2.929,475,2.929,476,1.928,477,1.928,478,1.928,479,2.929,480,1.928,481,1.928,482,1.928,483,1.928,484,1.928,485,1.928,486,1.928,487,1.928,488,1.928,489,2.929,490,1.928,491,1.928,492,1.928,493,2.929,494,4.483,495,1.928,496,1.928,497,3.958,498,1.928,499,4.483,500,1.928,501,1.572,502,1.928,503,1.928,504,1.928,505,1.928,506,1.928,507,1.572,508,2.929,509,1.928,510,1.928,511,1.928,512,1.928,513,1.928,514,1.928,515,2.929,516,2.929,517,1.928,518,1.928]],["title/modules/NguiListModule.html",[110,0.861,123,1.361]],["body/modules/NguiListModule.html",[3,0.476,4,0.476,5,0.408,6,0.344,7,0.344,17,0.983,18,0.044,23,0.546,24,0.171,87,0.626,97,0.899,107,0.023,108,0.031,109,0.023,110,0.899,112,1.129,113,1.265,114,1.129,115,2.143,116,1.421,117,1.421,118,2.418,122,2.186,123,2.74,125,2.145,126,1.603,127,1.008,129,2.145,130,2.145,131,2.095,132,2.461,133,2.461,170,1.265,262,1.421,287,2.372,290,2.396,292,2.117,293,1.129,294,1.008,299,1.89,301,2.117,327,2.803,328,3.517,444,2.461,445,2.461,446,2.461,519,2.461,520,2.461,521,3.016,522,2.461,523,3.016,524,4.037,525,3.016,526,2.461]],["title/modules/NguiUtilsModule.html",[110,0.861,124,1.361]],["body/modules/NguiUtilsModule.html",[1,2.32,3,0.559,4,0.559,5,0.479,6,0.404,7,0.404,17,0.99,18,0.045,23,0.606,24,0.202,87,0.736,107,0.027,108,0.034,109,0.027,110,1.057,112,1.328,113,1.488,114,1.328,115,2.318,116,1.671,117,2.318,118,2.614,124,2.661,125,2.383,126,1.884,127,1.185,129,1.884,130,2.383,135,2.893,138,3.071,209,1.488,262,1.671,327,3.114,328,2.463,527,2.893,528,2.893,529,2.893,530,2.893,531,3.546,532,3.546,533,3.546,534,2.893,535,2.708,536,3.546,537,2.708,538,3.546]],["title/components/NguiVirtualListComponent.html",[12,0.861,292,1.081]],["body/components/NguiVirtualListComponent.html",[1,1.914,3,0.22,4,0.22,5,0.189,6,0.585,7,0.585,8,0.969,10,0.658,11,2.701,12,0.857,16,1.56,17,0.522,18,0.045,22,2.875,23,0.189,24,0.079,29,2.53,40,1.07,42,2.076,43,0.328,44,0.677,47,0.851,50,0.953,52,1.351,54,0.677,55,1.087,56,0.677,59,0.96,64,1.578,73,1.02,75,2.344,85,1.07,87,0.29,97,1.36,107,0.011,108,0.017,109,0.011,114,0.523,127,1.306,142,0.586,151,1.07,154,1.205,159,0.586,160,1.995,161,0.969,162,0.969,165,1.94,166,1.578,167,2.358,169,1.578,170,1.389,172,1.372,175,2.091,176,1.735,177,1.995,178,1.995,190,1.372,192,1.717,195,0.851,196,0.953,197,0.843,209,1.727,226,2.755,231,1.853,234,1.853,236,2.973,244,1.84,249,1.735,251,1.578,254,1.995,255,1.578,256,1.578,259,0.969,263,1.759,284,0.37,285,2.299,286,0.969,287,0.586,288,0.969,289,0.969,290,1.727,291,0.969,292,1.24,293,2.012,294,1.525,295,0.523,296,0.523,297,1.735,298,0.969,299,0.467,300,0.969,301,0.523,302,0.843,303,0.969,305,1.853,307,3.307,312,2.712,331,2.73,334,1.853,335,3.187,336,2.701,338,2.53,339,1.853,340,2.701,341,2.701,342,2.701,343,2.358,345,0.969,353,2.299,354,2.53,356,2.973,358,2.486,376,1.853,381,1.372,384,0.969,387,1.853,406,2.344,407,2.973,409,1.578,410,1.578,411,1.853,413,1.853,472,1.853,473,2.701,526,1.139,534,1.139,539,1.139,540,1.853,541,2.272,542,3.906,543,2.272,544,2.272,545,2.272,546,2.272,547,3.906,548,2.272,549,3.311,550,3.311,551,2.272,552,3.906,553,2.873,554,3.644,555,2.873,556,3.644,557,2.873,558,2.873,559,2.873,560,2.873,561,3.311,562,2.272,563,3.311,564,3.906,565,1.396,566,2.272,567,1.396,568,1.853,569,2.272,570,3.311,571,2.701,572,2.272,573,1.396,574,1.396,575,1.396,576,1.578,577,2.272,578,2.272,579,2.272,580,1.853,581,2.272,582,1.396,583,1.396,584,2.272,585,2.272,586,1.853,587,1.396,588,1.396,589,1.396,590,1.396,591,1.396,592,2.272,593,2.272,594,1.396,595,2.272,596,2.272,597,2.272,598,1.396,599,2.272,600,3.311,601,1.396,602,1.396,603,2.272,604,1.396,605,2.272,606,1.396,607,1.139,608,2.873,609,1.396,610,1.396,611,1.396,612,1.396,613,1.396,614,1.396,615,1.396,616,1.139,617,1.396,618,1.396]],["title/classes/NoMatchFound.html",[24,0.164,450,1.744]],["body/classes/NoMatchFound.html",[3,0.653,4,0.653,5,0.56,6,0.562,7,0.562,18,0.043,23,0.56,24,0.235,43,0.974,44,1.471,52,1.099,73,0.86,107,0.031,108,0.037,109,0.031,146,2.501,158,3.294,195,1.551,196,1.738,263,2.8,450,2.979,451,4.025,619,2.501,620,4.025,621,3.379,622,4.142]],["title/classes/NoneSelect.html",[24,0.164,447,1.744]],["body/classes/NoneSelect.html",[3,0.66,4,0.66,5,0.566,6,0.566,7,0.566,18,0.043,23,0.566,24,0.238,43,0.985,44,1.48,52,1.111,73,0.869,107,0.032,108,0.038,109,0.032,146,2.528,195,1.567,196,1.756,263,2.813,447,2.998,449,4.05,619,2.528,623,4.05,624,3.415,625,4.186]],["title/changelog.html",[626,1.682,627,1.682,628,2.423]],["body/changelog.html",[12,1.127,14,3.083,17,0.687,18,0.038,97,1.577,100,2.624,101,2.282,107,0.029,108,0.035,109,0.029,154,1.585,170,2.124,187,3.083,188,2.818,189,2.008,223,2.624,293,1.415,294,1.263,338,3.241,343,2.282,540,3.083,571,3.083,629,3.779,630,3.779,631,4.667,632,3.779,633,4.667,634,3.779,635,3.083,636,3.779,637,3.779,638,3.779,639,3.779,640,3.779,641,3.083,642,3.779,643,3.779,644,3.779,645,3.779,646,4.667,647,3.779,648,3.807,649,3.807,650,4.131,651,3.779,652,3.779,653,4.667,654,3.779,655,3.779,656,3.779,657,3.779,658,3.807,659,3.779,660,3.779,661,3.779,662,3.779,663,3.779,664,3.779,665,3.779,666,3.779,667,3.083]],["title/coverage.html",[668,2.722]],["body/coverage.html",[0,2.013,1,1.398,5,0.45,6,0.653,7,0.653,8,2.315,9,2.719,12,1.506,18,0.044,24,0.272,73,0.692,107,0.025,108,0.033,109,0.025,137,1.771,138,1.771,140,2.719,141,2.719,154,1.398,158,2.013,159,1.398,163,2.994,164,2.719,170,1.398,284,1.268,287,1.398,290,1.398,292,1.248,293,1.248,294,1.114,296,1.248,299,1.114,301,1.248,304,2.719,331,2.78,332,2.719,362,3.508,405,2.719,415,2.719,447,2.013,450,2.013,501,2.719,535,2.013,537,2.013,539,2.719,576,2.315,620,2.719,621,2.719,623,2.719,624,2.719,668,2.315,669,2.719,670,3.333,671,3.333,672,3.333,673,3.333,674,3.333,675,3.333,676,3.333,677,3.333,678,3.333,679,3.333,680,3.333,681,3.333,682,3.333,683,3.333,684,3.333,685,4.311,686,3.333,687,3.333,688,2.719,689,2.719,690,4.311,691,3.333,692,2.719,693,3.333,694,3.333,695,3.333,696,3.333]],["title/dependencies.html",[113,1.455,697,2.423]],["body/dependencies.html",[18,0.045,84,3.352,87,0.853,107,0.031,108,0.037,109,0.031,113,1.724,262,1.936,698,4.109,699,5.751,700,4.109,701,4.109,702,4.91,703,3.41,704,4.109,705,4.109,706,4.109,707,4.109,708,4.109,709,4.109,710,4.109,711,4.109,712,4.109,713,4.109]],["title/miscellaneous/functions.html",[714,1.976,715,2.408]],["body/miscellaneous/functions.html",[6,0.473,7,0.473,16,1.957,18,0.041,43,0.977,54,1.238,55,1.238,56,1.238,59,1.388,73,1.095,107,0.032,108,0.038,109,0.032,165,1.957,189,2.803,209,1.742,381,2.507,410,2.884,420,3.388,430,3.388,507,3.388,537,2.983,580,3.388,616,3.388,688,3.388,689,4.031,714,3.388,715,2.884,716,4.153,717,5.275,718,4.153]],["title/index.html",[43,0.57,626,1.682,627,1.682]],["body/index.html",[1,1.461,12,1.581,17,0.806,18,0.043,23,0.471,24,0.198,85,1.641,97,1.616,100,2.418,107,0.026,108,0.034,109,0.026,110,1.038,111,1.851,112,1.304,115,1.641,116,1.641,117,1.641,122,2.046,123,2.298,124,2.089,129,1.851,130,1.851,137,1.851,170,2.046,220,2.103,224,2.103,284,0.924,293,1.304,294,1.631,295,1.304,343,2.103,360,2.841,464,2.841,470,3.617,537,2.103,576,2.418,648,2.841,650,3.617,668,2.418,715,3.079,719,5.135,720,3.483,721,3.483,722,3.483,723,3.483,724,3.483,725,3.483,726,3.483,727,3.483,728,3.483,729,3.483,730,4.878,731,3.483,732,3.483,733,4.434,734,3.483,735,3.483,736,4.434,737,3.483,738,3.483,739,3.483,740,3.483,741,3.483,742,3.483,743,3.483,744,3.483,745,3.483,746,3.483,747,3.483,748,3.483,749,3.483,750,3.483,751,3.483,752,3.483,753,3.483,754,3.483]],["title/classes/konsole.html",[24,0.164,535,1.744]],["body/classes/konsole.html",[3,0.785,4,0.277,5,0.237,6,0.557,7,0.557,10,0.827,16,0.827,18,0.045,23,0.237,24,0.1,43,0.413,44,0.813,47,1.021,52,1.27,54,1.344,55,1.344,56,1.344,59,1.634,73,0.967,92,1.776,94,1.06,107,0.013,108,0.021,109,0.013,146,2.275,195,1.411,196,1.144,213,0.933,214,3.599,232,2.224,244,2.304,257,3.88,319,2.018,320,2.018,344,3.523,358,3.161,379,3.989,381,1.646,384,1.893,432,3.329,448,2.224,455,1.432,535,1.646,568,2.224,607,2.224,619,1.06,641,2.224,692,1.432,703,1.219,755,1.756,756,1.756,757,2.726,758,1.756,759,3.343,760,4.659,761,4.319,762,5.507,763,3.768,764,2.726,765,4.319,766,2.726,767,2.726,768,2.726,769,2.726,770,2.726,771,2.726,772,2.726,773,1.756,774,2.726,775,1.756,776,5.184,777,5.184,778,2.726,779,1.756,780,2.726,781,4.89,782,4.08,783,2.726,784,1.756,785,2.726,786,1.756,787,2.726,788,2.726,789,1.756,790,2.726,791,1.756,792,2.726,793,1.756,794,2.726,795,1.756,796,2.726,797,1.756,798,2.726,799,1.756,800,2.726,801,1.756,802,2.726,803,1.756,804,1.756,805,2.726,806,1.756,807,1.756,808,1.756,809,1.756,810,1.756,811,1.756,812,1.756,813,1.756,814,1.756,815,1.756,816,1.756,817,2.726,818,2.726,819,1.756,820,1.756,821,1.756,822,1.756,823,1.756,824,1.756,825,1.756,826,1.756,827,1.756,828,1.756,829,1.756,830,1.756,831,2.726,832,3.343,833,3.768,834,1.756,835,3.768,836,3.768,837,3.343,838,2.726,839,1.756,840,1.756,841,1.756]],["title/license.html",[626,1.682,627,1.682,842,1.976]],["body/license.html",[18,0.034,107,0.027,108,0.034,109,0.027,127,1.207,200,2.947,209,1.515,224,2.74,383,3.702,586,2.947,635,4.047,658,2.947,667,2.947,669,2.947,842,2.947,843,3.612,844,4.961,845,3.612,846,3.612,847,3.612,848,4.538,849,3.612,850,3.612,851,3.612,852,3.612,853,3.612,854,3.612,855,5.666,856,3.612,857,3.612,858,3.612,859,3.612,860,4.538,861,3.612,862,3.612,863,3.612,864,3.612,865,3.612,866,3.612,867,3.612,868,3.612,869,3.612,870,4.538,871,3.612,872,3.612,873,3.612,874,3.612,875,3.612,876,3.612,877,3.612,878,4.538,879,4.538,880,3.612,881,3.612,882,3.612,883,3.612,884,3.612,885,3.612,886,3.612,887,3.612,888,3.612,889,3.612,890,3.612,891,3.612,892,3.612,893,3.612,894,3.612,895,3.612,896,3.612,897,3.612,898,3.612,899,3.612,900,3.612,901,3.612,902,3.612,903,3.612,904,3.612,905,3.612]],["title/modules.html",[112,1.468]],["body/modules.html",[18,0.039,107,0.033,108,0.039,109,0.033,111,2.305,112,1.624,122,1.82,123,2.044,124,2.044,649,4.517,703,3.845,906,5.538,907,5.538]],["title/overview.html",[908,3.198]],["body/overview.html",[0,1.811,1,1.903,18,0.045,85,1.413,107,0.023,108,0.031,109,0.023,110,0.894,111,2.963,112,1.123,113,1.258,114,1.123,115,1.413,116,1.413,117,1.413,118,1.594,119,2.446,120,2.446,121,2.446,122,2.383,123,2.755,124,2.646,125,2.137,126,1.594,127,1.002,137,1.594,138,2.824,159,2.23,213,2.137,215,2.792,216,2.792,287,2.23,290,2.23,292,1.99,295,1.123,296,1.99,299,1.776,301,1.99,323,2.446,324,2.446,325,2.446,519,2.446,520,2.446,522,2.446,527,2.446,528,2.446,529,2.446,530,2.446,619,1.811,908,2.446]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":362,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["0.10.2",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":363,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["02",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":213,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{},"overview.html":{}}}],["1,2,3",{"_index":38,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["1.component",{"_index":21,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["1/1",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":100,"title":{},"body":{"injectables/DynamicComponentService.html":{},"changelog.html":{},"index.html":{}}}],["10.0.7",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["10/18",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["11/15",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["12/43",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":214,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"classes/konsole.html":{}}}],["2.0.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["2.6.9",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":658,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":215,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"overview.html":{}}}],["37",{"_index":495,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["38",{"_index":496,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["39",{"_index":500,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["4",{"_index":216,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"overview.html":{}}}],["40",{"_index":501,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["5",{"_index":217,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["5/6",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":102,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["6.6.2",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":101,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"changelog.html":{}}}],["72",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":218,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["8/11",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":205,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["83",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["9/14",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["_focused",{"_index":555,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["above",{"_index":877,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":799,"title":{},"body":{"classes/konsole.html":{}}}],["action",{"_index":899,"title":{},"body":{"license.html":{}}}],["actions",{"_index":65,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["actual_component",{"_index":303,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["add",{"_index":648,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["addaninviewpagetopages",{"_index":561,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["addlist",{"_index":562,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["addlist(items",{"_index":581,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["afterviewinit",{"_index":553,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["again",{"_index":549,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["allen",{"_index":846,"title":{},"body":{"license.html":{}}}],["allow",{"_index":64,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["alternative",{"_index":756,"title":{},"body":{"classes/konsole.html":{}}}],["and/or",{"_index":868,"title":{},"body":{"license.html":{}}}],["angular",{"_index":650,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":262,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":87,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":548,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["appcomponent",{"_index":736,"title":{},"body":{"index.html":{}}}],["applied",{"_index":203,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["applies",{"_index":208,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["appmodule",{"_index":733,"title":{},"body":{"index.html":{}}}],["args",{"_index":782,"title":{},"body":{"classes/konsole.html":{}}}],["arguments",{"_index":432,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["arising",{"_index":903,"title":{},"body":{"license.html":{}}}],["array",{"_index":358,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["array.from(parentlistel.queryselectorall('ngui",{"_index":485,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["array.from(this.items",{"_index":404,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["array.from(this.itemsbackup",{"_index":392,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["arrow",{"_index":497,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["associated",{"_index":856,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":71,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["authors",{"_index":893,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":464,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["autocomplete'},{'name",{"_index":288,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["autocomplete.component",{"_index":446,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["autocomplete.component.ts",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["autocompletecomponent",{"_index":428,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["back",{"_index":551,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["backup",{"_index":337,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["basic",{"_index":749,"title":{},"body":{"index.html":{}}}],["before",{"_index":66,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewPageComponent.html":{}}}],["being",{"_index":593,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["better",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["block",{"_index":178,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["blur",{"_index":201,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["blurenabled",{"_index":187,"title":{},"body":{"components/NguiInviewComponent.html":{},"changelog.html":{}}}],["blurred",{"_index":518,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["boolean",{"_index":381,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["bootstrap",{"_index":116,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":547,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["bottominview",{"_index":564,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["break",{"_index":499,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["browse",{"_index":907,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":703,"title":{},"body":{"dependencies.html":{},"classes/konsole.html":{},"modules.html":{}}}],["browsermodule",{"_index":734,"title":{},"body":{"index.html":{}}}],["c",{"_index":845,"title":{},"body":{"license.html":{}}}],["call",{"_index":568,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["callback",{"_index":253,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["called",{"_index":577,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["case",{"_index":494,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["cdr",{"_index":556,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["cdref",{"_index":355,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["change",{"_index":388,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["changedetectorref",{"_index":356,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["changelog",{"_index":628,"title":{"changelog.html":{}},"body":{}}],["charge",{"_index":852,"title":{},"body":{"license.html":{}}}],["check",{"_index":584,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["child",{"_index":413,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["claim",{"_index":896,"title":{},"body":{"license.html":{}}}],["class",{"_index":24,"title":{"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"index.html":{},"classes/konsole.html":{}}}],["classes",{"_index":619,"title":{},"body":{"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{},"overview.html":{}}}],["click",{"_index":420,"title":{},"body":{"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["cluster_nguicommonmodule",{"_index":119,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_exports",{"_index":121,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguicommonmodule_imports",{"_index":120,"title":{},"body":{"modules/NguiCommonModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule",{"_index":323,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_declarations",{"_index":324,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguiinviewmodule_exports",{"_index":325,"title":{},"body":{"modules/NguiInviewModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule",{"_index":519,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_declarations",{"_index":520,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_exports",{"_index":522,"title":{},"body":{"modules/NguiListModule.html":{},"overview.html":{}}}],["cluster_nguilistmodule_imports",{"_index":521,"title":{},"body":{"modules/NguiListModule.html":{}}}],["cluster_nguiutilsmodule",{"_index":527,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_declarations",{"_index":528,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_exports",{"_index":529,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["cluster_nguiutilsmodule_providers",{"_index":530,"title":{},"body":{"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["code",{"_index":738,"title":{},"body":{"index.html":{}}}],["collection",{"_index":748,"title":{},"body":{"index.html":{}}}],["common",{"_index":721,"title":{},"body":{"index.html":{}}}],["common.module.ts",{"_index":128,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["common/src/lib/ngui",{"_index":7,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["commonmodule",{"_index":327,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["compid",{"_index":96,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component",{"_index":12,"title":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["component.service",{"_index":534,"title":{},"body":{"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["component.service.ts",{"_index":9,"title":{},"body":{"injectables/DynamicComponentService.html":{},"coverage.html":{}}}],["component.service.ts:39",{"_index":79,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:41",{"_index":53,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:53",{"_index":58,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component.service.ts:63",{"_index":77,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["component_template",{"_index":286,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentfactoryresolver",{"_index":78,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref",{"_index":75,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["componentref.instance",{"_index":106,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.instance.id",{"_index":104,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["componentref.location.nativeelement.setattribute('id",{"_index":103,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["components",{"_index":85,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{},"overview.html":{}}}],["compref",{"_index":33,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["compref.instance.items",{"_index":37,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["compref.instance.output$.subscribe(val",{"_index":41,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["conditions",{"_index":876,"title":{},"body":{"license.html":{}}}],["config",{"_index":223,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"changelog.html":{}}}],["configuration",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":904,"title":{},"body":{"license.html":{}}}],["console.debug",{"_index":780,"title":{},"body":{"classes/konsole.html":{}}}],["console.debug.apply(console",{"_index":819,"title":{},"body":{"classes/konsole.html":{}}}],["console.error",{"_index":607,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["console.error(`error",{"_index":813,"title":{},"body":{"classes/konsole.html":{}}}],["console.error.apply(console",{"_index":827,"title":{},"body":{"classes/konsole.html":{}}}],["console.info",{"_index":787,"title":{},"body":{"classes/konsole.html":{}}}],["console.info.apply(console",{"_index":823,"title":{},"body":{"classes/konsole.html":{}}}],["console.log",{"_index":641,"title":{},"body":{"changelog.html":{},"classes/konsole.html":{}}}],["console.log.apply(console",{"_index":821,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn",{"_index":798,"title":{},"body":{"classes/konsole.html":{}}}],["console.warn.apply(console",{"_index":825,"title":{},"body":{"classes/konsole.html":{}}}],["const",{"_index":92,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["constructor",{"_index":50,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["constructor(@inject(componentfactoryresolver",{"_index":89,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(el",{"_index":424,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["constructor(element",{"_index":191,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{}}}],["constructor(factoryresolver",{"_index":51,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["constructor(public",{"_index":30,"title":{},"body":{"injectables/DynamicComponentService.html":{},"directives/NguiListDirective.html":{}}}],["constructor(renderer",{"_index":565,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["container",{"_index":599,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["contentchild",{"_index":259,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentchild(templateref",{"_index":256,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contents",{"_index":335,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["contentsel",{"_index":347,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["contract",{"_index":900,"title":{},"body":{"license.html":{}}}],["controls",{"_index":199,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["copies",{"_index":870,"title":{},"body":{"license.html":{}}}],["copy",{"_index":383,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"license.html":{}}}],["copyright",{"_index":844,"title":{},"body":{"license.html":{}}}],["core",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":668,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":81,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcompnent",{"_index":63,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcomponent",{"_index":48,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["createcomponent(component",{"_index":57,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["created",{"_index":579,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["current",{"_index":776,"title":{},"body":{"classes/konsole.html":{}}}],["customized",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":897,"title":{},"body":{"license.html":{}}}],["dcs",{"_index":31,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["deal",{"_index":858,"title":{},"body":{"license.html":{}}}],["dealing",{"_index":39,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dealings",{"_index":905,"title":{},"body":{"license.html":{}}}],["debug",{"_index":761,"title":{},"body":{"classes/konsole.html":{}}}],["debug(...args",{"_index":778,"title":{},"body":{"classes/konsole.html":{}}}],["debugging",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":115,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["decorators",{"_index":255,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["deep",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":195,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["defaultinviewhandler",{"_index":182,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["defaultinviewhandler(entry",{"_index":229,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["define",{"_index":603,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["defined",{"_index":52,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["defines",{"_index":83,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["demoobject",{"_index":723,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":113,"title":{"dependencies.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependents",{"_index":306,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["dependes",{"_index":233,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["deprecated",{"_index":222,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["description",{"_index":10,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["destroyed",{"_index":348,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["directive",{"_index":284,"title":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["directives",{"_index":295,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"index.html":{},"overview.html":{}}}],["display",{"_index":177,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["distribute",{"_index":866,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":669,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentationcode",{"_index":724,"title":{},"body":{"index.html":{}}}],["dom",{"_index":161,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["down",{"_index":473,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["dyn",{"_index":98,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dynamic",{"_index":84,"title":{},"body":{"injectables/DynamicComponentService.html":{},"dependencies.html":{}}}],["dynamic.component.service",{"_index":19,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dynamicall",{"_index":578,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["dynamically",{"_index":13,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["dynamiccomponentservice",{"_index":1,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["e.g",{"_index":68,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["effect",{"_index":202,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["el",{"_index":430,"title":{},"body":{"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":165,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":192,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["elements",{"_index":360,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"index.html":{}}}],["empties",{"_index":334,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["empty",{"_index":366,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["emptying",{"_index":401,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["emptyitems",{"_index":350,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["enter",{"_index":507,"title":{},"body":{"directives/NguiListItemDirective.html":{},"miscellaneous/functions.html":{}}}],["enter(13",{"_index":503,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["entries",{"_index":243,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entries.foreach((entry",{"_index":273,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entry",{"_index":239,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["entry.intersectionratio",{"_index":283,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["entry['isintersecting",{"_index":275,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["entrycomponents",{"_index":524,"title":{},"body":{"modules/NguiListModule.html":{}}}],["env",{"_index":810,"title":{},"body":{"classes/konsole.html":{}}}],["error",{"_index":344,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["error('ngui",{"_index":462,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["error(...args",{"_index":783,"title":{},"body":{"classes/konsole.html":{}}}],["esc",{"_index":409,"title":{},"body":{"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["esc(27",{"_index":504,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["escape",{"_index":509,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["escaped",{"_index":406,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["etc",{"_index":72,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["even",{"_index":380,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["event",{"_index":209,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["event.additems(items",{"_index":569,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["event.key",{"_index":506,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.keycode",{"_index":481,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["event.ts",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["event.which",{"_index":480,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["eventemitter",{"_index":226,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["events",{"_index":172,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["example",{"_index":16,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["export",{"_index":23,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"index.html":{},"classes/konsole.html":{}}}],["exports",{"_index":118,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["express",{"_index":885,"title":{},"body":{"license.html":{}}}],["factory",{"_index":82,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factory.create(this.rootviewcontainer.parentinjector",{"_index":95,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["factoryresolver",{"_index":45,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["false",{"_index":249,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"classes/konsole.html":{}}}],["files",{"_index":857,"title":{},"body":{"license.html":{}}}],["fill",{"_index":570,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["fire",{"_index":616,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["fired",{"_index":312,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["fireevent",{"_index":537,"title":{},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fireevent(el",{"_index":717,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fires",{"_index":169,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["first",{"_index":376,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["fitness",{"_index":890,"title":{},"body":{"license.html":{}}}],["fix",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":421,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["focused",{"_index":514,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["following",{"_index":875,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":735,"title":{},"body":{"index.html":{}}}],["found",{"_index":451,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{}}}],["found.ts",{"_index":621,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["found.ts:2",{"_index":622,"title":{},"body":{"classes/NoMatchFound.html":{}}}],["free",{"_index":851,"title":{},"body":{"license.html":{}}}],["function",{"_index":576,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{},"index.html":{}}}],["functions",{"_index":715,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["furnished",{"_index":873,"title":{},"body":{"license.html":{}}}],["getting",{"_index":626,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":580,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["granted",{"_index":850,"title":{},"body":{"license.html":{}}}],["greater",{"_index":781,"title":{},"body":{"classes/konsole.html":{}}}],["handleintersect",{"_index":183,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handleintersect(entries",{"_index":240,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["handler",{"_index":231,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["handlers",{"_index":210,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["handles",{"_index":470,"title":{},"body":{"directives/NguiListItemDirective.html":{},"index.html":{}}}],["height",{"_index":377,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["height}px",{"_index":403,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["hereby",{"_index":849,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":752,"title":{},"body":{"index.html":{}}}],["highlight.pipe",{"_index":532,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["highlight.pipe.ts",{"_index":141,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["highlight.pipe.ts:5",{"_index":148,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["holders",{"_index":894,"title":{},"body":{"license.html":{}}}],["host",{"_index":176,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["hostlistener",{"_index":443,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('blur",{"_index":517,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('click",{"_index":511,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('focus",{"_index":513,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keydown",{"_index":476,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlistener('keyup",{"_index":505,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostlisteners",{"_index":419,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["hostview",{"_index":67,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["html",{"_index":263,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{}}}],["html5",{"_index":742,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":374,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["http_providers",{"_index":737,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["ie11",{"_index":743,"title":{},"body":{"index.html":{}}}],["ig",{"_index":156,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["implements",{"_index":151,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["implied",{"_index":886,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"index.html":{}}}],["imports",{"_index":129,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{}}}],["included",{"_index":880,"title":{},"body":{"license.html":{}}}],["including",{"_index":860,"title":{},"body":{"license.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["indicates",{"_index":251,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["info(...args",{"_index":785,"title":{},"body":{"classes/konsole.html":{}}}],["inject",{"_index":86,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["inject(platform_id",{"_index":265,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["injectable",{"_index":0,"title":{"injectables/DynamicComponentService.html":{}},"body":{"injectables/DynamicComponentService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["input",{"_index":40,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["input('item",{"_index":454,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["input('template",{"_index":389,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["inputs",{"_index":186,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["insert",{"_index":11,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{}}}],["insertcomp",{"_index":32,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["insertcomponent",{"_index":49,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["insertcomponent(componentref",{"_index":76,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["inserted",{"_index":542,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["inserts",{"_index":540,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"changelog.html":{}}}],["install",{"_index":730,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":466,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["instead",{"_index":225,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["interaction",{"_index":754,"title":{},"body":{"index.html":{}}}],["intersection",{"_index":206,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["intersectionobserver",{"_index":220,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"index.html":{}}}],["intersectionobserver(this.handleintersect.bind(this",{"_index":270,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverentry",{"_index":274,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["intersectionobserverinit",{"_index":211,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["invalid",{"_index":814,"title":{},"body":{"classes/konsole.html":{}}}],["inview",{"_index":170,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["inview'},{'name",{"_index":289,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["inview)=\"something",{"_index":238,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component",{"_index":329,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.component.ts",{"_index":164,"title":{},"body":{"components/NguiInviewComponent.html":{},"coverage.html":{}}}],["inview.component.ts:36",{"_index":258,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:39",{"_index":219,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:42",{"_index":221,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:46",{"_index":198,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:48",{"_index":227,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:49",{"_index":228,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:51",{"_index":252,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:53",{"_index":250,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:55",{"_index":194,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:63",{"_index":247,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:75",{"_index":245,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:80",{"_index":241,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.component.ts:96",{"_index":230,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["inview.directive",{"_index":330,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview.directive.ts",{"_index":304,"title":{},"body":{"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inview.directive.ts:21",{"_index":318,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:24",{"_index":309,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:27",{"_index":310,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:30",{"_index":311,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:32",{"_index":308,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:35",{"_index":317,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:40",{"_index":316,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:52",{"_index":314,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.directive.ts:62",{"_index":313,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["inview.module",{"_index":132,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["inview.module.ts",{"_index":326,"title":{},"body":{"modules/NguiInviewModule.html":{}}}],["inview/ngui",{"_index":131,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{}}}],["inview/src/ngui",{"_index":163,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"coverage.html":{}}}],["inviewpage",{"_index":557,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["inviewpages",{"_index":558,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["invoked",{"_index":235,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["isinview",{"_index":179,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["islistloading",{"_index":559,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["isplatformbrowser",{"_index":261,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":268,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["issue",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":541,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["item",{"_index":302,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["item.directive",{"_index":525,"title":{},"body":{"modules/NguiListModule.html":{}}}],["item.directive.ts",{"_index":415,"title":{},"body":{"directives/NguiListItemDirective.html":{},"coverage.html":{}}}],["item.directive.ts:24",{"_index":431,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:26",{"_index":441,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:27",{"_index":442,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:28",{"_index":429,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:39",{"_index":440,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:52",{"_index":437,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:75",{"_index":439,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:88",{"_index":434,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:92",{"_index":435,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["item.directive.ts:98",{"_index":433,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["items",{"_index":338,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{}}}],["itemsbackup",{"_index":349,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["js",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":410,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{}}}],["keyboard",{"_index":471,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyboard/mouse",{"_index":753,"title":{},"body":{"index.html":{}}}],["keycode",{"_index":479,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown",{"_index":422,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keydown(event",{"_index":436,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keypress",{"_index":718,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keyup",{"_index":423,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(enter",{"_index":453,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["keyup(event",{"_index":438,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["kim",{"_index":847,"title":{},"body":{"license.html":{}}}],["kind",{"_index":884,"title":{},"body":{"license.html":{}}}],["konsole",{"_index":535,"title":{"classes/konsole.html":{}},"body":{"modules/NguiUtilsModule.html":{},"coverage.html":{},"classes/konsole.html":{}}}],["konsole.debug('no",{"_index":835,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.debug('yes",{"_index":829,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('no",{"_index":839,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.error('yes",{"_index":833,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('no",{"_index":837,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.info('yes",{"_index":831,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('no",{"_index":836,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log('yes",{"_index":830,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.log(1,2,3,4,5",{"_index":758,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('all",{"_index":828,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('error",{"_index":757,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('info",{"_index":840,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('none",{"_index":834,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.setloglevel('warn",{"_index":841,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('no",{"_index":838,"title":{},"body":{"classes/konsole.html":{}}}],["konsole.warn('yes",{"_index":832,"title":{},"body":{"classes/konsole.html":{}}}],["last",{"_index":592,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["lazy",{"_index":739,"title":{},"body":{"index.html":{}}}],["left",{"_index":474,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["legend",{"_index":114,"title":{},"body":{"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"overview.html":{}}}],["less",{"_index":204,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["level",{"_index":777,"title":{},"body":{"classes/konsole.html":{}}}],["levels",{"_index":774,"title":{},"body":{"classes/konsole.html":{}}}],["liability",{"_index":898,"title":{},"body":{"license.html":{}}}],["liable",{"_index":895,"title":{},"body":{"license.html":{}}}],["license",{"_index":842,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":861,"title":{},"body":{"license.html":{}}}],["limited",{"_index":887,"title":{},"body":{"license.html":{}}}],["line",{"_index":320,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["list",{"_index":294,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["list'},{'name",{"_index":300,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["list.component",{"_index":445,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.component.ts",{"_index":539,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":583,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:114",{"_index":575,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:130",{"_index":582,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:61",{"_index":598,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:63",{"_index":602,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:65",{"_index":574,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:67",{"_index":573,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:86",{"_index":567,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:89",{"_index":591,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:90",{"_index":587,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:92",{"_index":594,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:93",{"_index":566,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:96",{"_index":601,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:97",{"_index":590,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:98",{"_index":589,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.component.ts:99",{"_index":588,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["list.directive",{"_index":444,"title":{},"body":{"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{}}}],["list.directive.ts",{"_index":405,"title":{},"body":{"directives/NguiListDirective.html":{},"coverage.html":{}}}],["list.directive.ts:13",{"_index":412,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:15",{"_index":408,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.directive.ts:17",{"_index":414,"title":{},"body":{"directives/NguiListDirective.html":{}}}],["list.module",{"_index":134,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["list.module.ts",{"_index":523,"title":{},"body":{"modules/NguiListModule.html":{}}}],["list/ngui",{"_index":133,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{}}}],["list/src/ngui",{"_index":331,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["list/src/no",{"_index":620,"title":{},"body":{"classes/NoMatchFound.html":{},"coverage.html":{}}}],["list/src/none",{"_index":623,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["listdirective",{"_index":426,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listens",{"_index":166,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["listitemndx",{"_index":486,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems",{"_index":484,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems.indexof(thislistitem",{"_index":487,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[0",{"_index":490,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitemndx",{"_index":489,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["listitems[listitems.length",{"_index":492,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["load",{"_index":617,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["loaded",{"_index":571,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"changelog.html":{}}}],["loading",{"_index":552,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["log",{"_index":762,"title":{},"body":{"classes/konsole.html":{}}}],["log(...args",{"_index":788,"title":{},"body":{"classes/konsole.html":{}}}],["log_levels",{"_index":759,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel",{"_index":760,"title":{},"body":{"classes/konsole.html":{}}}],["loglevel.touppercase",{"_index":804,"title":{},"body":{"classes/konsole.html":{}}}],["loglevels",{"_index":805,"title":{},"body":{"classes/konsole.html":{}}}],["loglevels.indexof(loglevel",{"_index":807,"title":{},"body":{"classes/konsole.html":{}}}],["lt;ng",{"_index":346,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["makes",{"_index":544,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["match",{"_index":158,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{},"coverage.html":{}}}],["matching",{"_index":108,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["math.floor(math.random",{"_index":99,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["medium",{"_index":729,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":889,"title":{},"body":{"license.html":{}}}],["merge",{"_index":864,"title":{},"body":{"license.html":{}}}],["message",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["messages",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":142,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["methods",{"_index":47,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["miscellaneous",{"_index":714,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":843,"title":{},"body":{"license.html":{}}}],["modify",{"_index":863,"title":{},"body":{"license.html":{}}}],["module",{"_index":110,"title":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":112,"title":{"modules.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mousedown",{"_index":512,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["mycomponent",{"_index":25,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["mydynamiccomponent",{"_index":20,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["name",{"_index":55,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["necessary",{"_index":585,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["new",{"_index":154,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["newly",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["nextlistitem",{"_index":488,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextlistitem.focus",{"_index":502,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["nextsibling",{"_index":416,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["ngafterviewinit",{"_index":563,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ngmodule",{"_index":130,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":184,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["ngoninit",{"_index":185,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["ngui",{"_index":97,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"index.html":{}}}],["ngui/common",{"_index":719,"title":{},"body":{"index.html":{}}}],["nguiautocompletecomponent",{"_index":287,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguicommonmodule",{"_index":111,"title":{"modules/NguiCommonModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguihighlight",{"_index":143,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["nguihighlightpipe",{"_index":138,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"modules/NguiUtilsModule.html":{},"coverage.html":{},"overview.html":{}}}],["nguihilight",{"_index":751,"title":{},"body":{"index.html":{}}}],["nguiinview",{"_index":297,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiinviewcomponent",{"_index":159,"title":{"components/NguiInviewComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewdirective",{"_index":296,"title":{"directives/NguiInviewDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguiinviewmodule",{"_index":122,"title":{"modules/NguiInviewModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguiinviewpage",{"_index":600,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["nguiinviewpagecomponent",{"_index":290,"title":{"components/NguiInviewPageComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistdirective",{"_index":299,"title":{"directives/NguiListDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistitemdirective",{"_index":301,"title":{"directives/NguiListItemDirective.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nguilistmodule",{"_index":123,"title":{"modules/NguiListModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiListModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguioutview",{"_index":305,"title":{},"body":{"directives/NguiInviewDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguioutview]'},{'name",{"_index":298,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["nguiutilsmodule",{"_index":124,"title":{"modules/NguiUtilsModule.html":{}},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["nguiutilsmodules",{"_index":747,"title":{},"body":{"index.html":{}}}],["nguivirtuallistcomponent",{"_index":292,"title":{"components/NguiVirtualListComponent.html":{}},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["noinspection",{"_index":817,"title":{},"body":{"classes/konsole.html":{}}}],["nomatchfound",{"_index":450,"title":{"classes/NoMatchFound.html":{}},"body":{"directives/NguiListItemDirective.html":{},"classes/NoMatchFound.html":{},"coverage.html":{}}}],["none",{"_index":448,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["noneselect",{"_index":447,"title":{"classes/NoneSelect.html":{}},"body":{"directives/NguiListItemDirective.html":{},"classes/NoneSelect.html":{},"coverage.html":{}}}],["noninfringement",{"_index":892,"title":{},"body":{"license.html":{}}}],["notice",{"_index":878,"title":{},"body":{"license.html":{}}}],["notinview",{"_index":171,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["now",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":731,"title":{},"body":{"index.html":{}}}],["num",{"_index":342,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["number",{"_index":341,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["object",{"_index":455,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["object.keys(this.log_levels",{"_index":806,"title":{},"body":{"classes/konsole.html":{}}}],["observer",{"_index":180,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["observeroptions",{"_index":188,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"changelog.html":{}}}],["obtaining",{"_index":854,"title":{},"body":{"license.html":{}}}],["once80pctvisible",{"_index":181,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["ondestroy",{"_index":174,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["one",{"_index":815,"title":{},"body":{"classes/konsole.html":{}}}],["oninit",{"_index":173,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["option",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":56,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["options",{"_index":189,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["otherwise",{"_index":902,"title":{},"body":{"license.html":{}}}],["out",{"_index":127,"title":{},"body":{"modules/NguiCommonModule.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":42,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["outputs",{"_index":190,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["outview",{"_index":333,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["overview",{"_index":908,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":697,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":343,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"index.html":{}}}],["page'},{'name",{"_index":291,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.component",{"_index":526,"title":{},"body":{"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{}}}],["page.component.ts",{"_index":332,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:106",{"_index":365,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:121",{"_index":373,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:56",{"_index":386,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:60",{"_index":359,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:63",{"_index":364,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:65",{"_index":385,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:67",{"_index":382,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:72",{"_index":375,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:73",{"_index":357,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:84",{"_index":370,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:94",{"_index":369,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.component.ts:99",{"_index":368,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["page.contents",{"_index":399,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["pages",{"_index":554,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["pagesref",{"_index":560,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["param",{"_index":795,"title":{},"body":{"classes/konsole.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["parent",{"_index":463,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistcomp",{"_index":417,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parentlistel",{"_index":482,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["parseint('00000",{"_index":766,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00001",{"_index":767,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00010",{"_index":768,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('00100",{"_index":769,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('01000",{"_index":770,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('10000",{"_index":771,"title":{},"body":{"classes/konsole.html":{}}}],["parseint('11111",{"_index":772,"title":{},"body":{"classes/konsole.html":{}}}],["particular",{"_index":891,"title":{},"body":{"license.html":{}}}],["permission",{"_index":848,"title":{},"body":{"license.html":{}}}],["permit",{"_index":871,"title":{},"body":{"license.html":{}}}],["person",{"_index":853,"title":{},"body":{"license.html":{}}}],["persons",{"_index":872,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":137,"title":{"pipes/NguiHighlightPipe.html":{}},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["pipes",{"_index":139,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["pipetransform",{"_index":150,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["platform_id",{"_index":260,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["platformid",{"_index":193,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["please",{"_index":745,"title":{},"body":{"index.html":{}}}],["polyfill",{"_index":746,"title":{},"body":{"index.html":{}}}],["port",{"_index":550,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["portions",{"_index":882,"title":{},"body":{"license.html":{}}}],["positioning",{"_index":168,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["pressed",{"_index":411,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["prevlistitem",{"_index":491,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevlistitem.focus",{"_index":498,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["prevsibling",{"_index":418,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["private",{"_index":264,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{}}}],["projects/.../fire",{"_index":716,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ngui",{"_index":6,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["properties",{"_index":44,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["provided",{"_index":586,"title":{},"body":{"components/NguiVirtualListComponent.html":{},"license.html":{}}}],["providers",{"_index":117,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":237,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["public",{"_index":307,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["publish",{"_index":865,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":667,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pushed",{"_index":543,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["ratio",{"_index":207,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["re",{"_index":153,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["read",{"_index":597,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["read:viewcontainerref",{"_index":27,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["reason",{"_index":61,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["reference",{"_index":60,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{}}}],["regexp(search",{"_index":155,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["remains",{"_index":378,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["removed",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":361,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["rendered",{"_index":367,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["renderer",{"_index":353,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["renderer2",{"_index":354,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["rendering",{"_index":740,"title":{},"body":{"index.html":{}}}],["reportacceptance",{"_index":727,"title":{},"body":{"index.html":{}}}],["reportarticle",{"_index":728,"title":{},"body":{"index.html":{}}}],["reportunit",{"_index":725,"title":{},"body":{"index.html":{}}}],["represent",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["requirednum",{"_index":802,"title":{},"body":{"classes/konsole.html":{}}}],["requires",{"_index":345,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["reset",{"_index":126,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}],["rest",{"_index":572,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["restore",{"_index":371,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["restoreitems",{"_index":351,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["restores",{"_index":339,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["restriction",{"_index":859,"title":{},"body":{"license.html":{}}}],["restrictionnum",{"_index":800,"title":{},"body":{"classes/konsole.html":{}}}],["result",{"_index":107,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":109,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/konsole.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":152,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["return",{"_index":94,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"classes/konsole.html":{}}}],["returns",{"_index":59,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["right",{"_index":475,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["rights",{"_index":862,"title":{},"body":{"license.html":{}}}],["rootviewcontainer",{"_index":46,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["row",{"_index":340,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["rxjs",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["safari",{"_index":744,"title":{},"body":{"index.html":{}}}],["same",{"_index":379,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["save",{"_index":732,"title":{},"body":{"index.html":{}}}],["scrolls",{"_index":545,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["search",{"_index":147,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["see",{"_index":546,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["select",{"_index":449,"title":{},"body":{"directives/NguiListItemDirective.html":{},"classes/NoneSelect.html":{}}}],["select.ts",{"_index":624,"title":{},"body":{"classes/NoneSelect.html":{},"coverage.html":{}}}],["select.ts:2",{"_index":625,"title":{},"body":{"classes/NoneSelect.html":{}}}],["selected",{"_index":407,"title":{},"body":{"directives/NguiListDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["selector",{"_index":175,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["sell",{"_index":869,"title":{},"body":{"license.html":{}}}],["seperate",{"_index":62,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["service",{"_index":15,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["services",{"_index":722,"title":{},"body":{"index.html":{}}}],["set",{"_index":384,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["setitems",{"_index":352,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setitems(items",{"_index":372,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["setloglevel",{"_index":763,"title":{},"body":{"classes/konsole.html":{}}}],["setloglevel(loglevel",{"_index":790,"title":{},"body":{"classes/konsole.html":{}}}],["sets",{"_index":232,"title":{},"body":{"components/NguiInviewComponent.html":{},"classes/konsole.html":{}}}],["setting",{"_index":70,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["shall",{"_index":879,"title":{},"body":{"license.html":{}}}],["showing",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":855,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/DynamicComponentService.html":{},"modules/NguiCommonModule.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"modules/NguiInviewModule.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["src/dynamic",{"_index":533,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/fire",{"_index":538,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/konsole",{"_index":536,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["src/ngui",{"_index":328,"title":{},"body":{"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{}}}],["started",{"_index":627,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":248,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["statements",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":257,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"classes/konsole.html":{}}}],["still",{"_index":595,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["stop",{"_index":246,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["stops",{"_index":315,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["string",{"_index":146,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["styles",{"_index":160,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["styling",{"_index":69,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["subject",{"_index":874,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":867,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":881,"title":{},"body":{"license.html":{}}}],["support",{"_index":649,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":906,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":493,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["tabindex",{"_index":452,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["table",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":22,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["templateref",{"_index":254,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["test",{"_index":726,"title":{},"body":{"index.html":{}}}],["text",{"_index":149,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["text.replace(re",{"_index":157,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["this.autocompletecomponent",{"_index":460,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.blurenabled",{"_index":280,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.bottominview.emit(this",{"_index":615,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.bottominview.observers.length",{"_index":606,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.cdref.detectchanges",{"_index":396,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.contentsel",{"_index":397,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.dcs.createcomponent(mydynamiccomponent",{"_index":34,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.defaultinviewhandler(entry",{"_index":277,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.destroyed",{"_index":400,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.dynamiccomponentservice.createcomponent(nguiinviewpagecomponent",{"_index":610,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.dynamiccomponentservice.insertcomponent(this.inviewpage",{"_index":612,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.el.nativeelement",{"_index":478,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.el.nativeelement.innerhtml",{"_index":468,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.element.nativeelement.getboundingclientrect().height",{"_index":402,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.element.nativeelement.queryselector('.inview",{"_index":398,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.factoryresolver",{"_index":90,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.factoryresolver.resolvecomponentfactory(component",{"_index":93,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.inview.emit(entry",{"_index":278,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inview.observers.length",{"_index":282,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.inviewpage",{"_index":609,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.setitems(items",{"_index":618,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpage.instance.template",{"_index":613,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.inviewpages.push(this.inviewpage",{"_index":614,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.isinview",{"_index":276,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.islistloading",{"_index":608,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.items",{"_index":391,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.itemsbackup",{"_index":393,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.listdirective",{"_index":458,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.log_levels[param",{"_index":803,"title":{},"body":{"classes/konsole.html":{}}}],["this.log_levels[this.loglevel",{"_index":801,"title":{},"body":{"classes/konsole.html":{}}}],["this.loglevel",{"_index":812,"title":{},"body":{"classes/konsole.html":{}}}],["this.nguiinview.emit(entry",{"_index":321,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.nguioutview.emit(entry",{"_index":322,"title":{},"body":{"directives/NguiInviewDirective.html":{}}}],["this.notinview.emit(entry",{"_index":279,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.object",{"_index":465,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.object.html",{"_index":469,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.observer",{"_index":269,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.disconnect",{"_index":272,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observer.observe(this.element.nativeelement",{"_index":271,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.observeroptions",{"_index":267,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.once80pctvisible",{"_index":281,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["this.options",{"_index":266,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{}}}],["this.outview",{"_index":390,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.pagesref",{"_index":611,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.parentlistcomp",{"_index":457,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.element.nativeelement",{"_index":483,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.escaped.emit",{"_index":510,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp.selected.emit(this.object",{"_index":508,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocused",{"_index":515,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.parentlistcomp['setfocused']('listitem",{"_index":516,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setattribute(this.el.nativeelement",{"_index":456,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.renderer.setstyle(this.contentsel",{"_index":395,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["this.rootviewcontainer",{"_index":91,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.rootviewcontainer.insert(componentref.hostview",{"_index":105,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.template",{"_index":605,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["this.tolog('debug",{"_index":816,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('error",{"_index":826,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('info",{"_index":822,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('log",{"_index":820,"title":{},"body":{"classes/konsole.html":{}}}],["this.tolog('warn",{"_index":824,"title":{},"body":{"classes/konsole.html":{}}}],["this.vcr",{"_index":35,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["this.viewcontainer.clear",{"_index":467,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["this.virtuallistcomponent",{"_index":459,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["thislistitem",{"_index":477,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["threshold",{"_index":212,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{}}}],["throw",{"_index":461,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["ths.dcs.insertcomonent(cmpref",{"_index":36,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["tolog",{"_index":764,"title":{},"body":{"classes/konsole.html":{}}}],["tolog(param",{"_index":792,"title":{},"body":{"classes/konsole.html":{}}}],["tort",{"_index":901,"title":{},"body":{"license.html":{}}}],["transform",{"_index":144,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["transform(text",{"_index":145,"title":{},"body":{"pipes/NguiHighlightPipe.html":{}}}],["tree",{"_index":162,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["true",{"_index":197,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["ts",{"_index":88,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["tslib",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":818,"title":{},"body":{"classes/konsole.html":{}}}],["tslint:disable",{"_index":319,"title":{},"body":{"directives/NguiInviewDirective.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"classes/konsole.html":{}}}],["type",{"_index":73,"title":{},"body":{"injectables/DynamicComponentService.html":{},"pipes/NguiHighlightPipe.html":{},"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListDirective.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/konsole.html":{}}}],["ui",{"_index":720,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":394,"title":{},"body":{"components/NguiInviewPageComponent.html":{}}}],["up",{"_index":472,"title":{},"body":{"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["use",{"_index":224,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":80,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{}}}],["user",{"_index":236,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["users",{"_index":387,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["using",{"_index":14,"title":{},"body":{"injectables/DynamicComponentService.html":{},"changelog.html":{}}}],["utility",{"_index":750,"title":{},"body":{"index.html":{}}}],["utilizes",{"_index":741,"title":{},"body":{"index.html":{}}}],["utils.module",{"_index":136,"title":{},"body":{"modules/NguiCommonModule.html":{}}}],["utils.module.ts",{"_index":531,"title":{},"body":{"modules/NguiUtilsModule.html":{}}}],["utils/ngui",{"_index":135,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiUtilsModule.html":{}}}],["utils/src/dynamic",{"_index":8,"title":{},"body":{"injectables/DynamicComponentService.html":{},"components/NguiVirtualListComponent.html":{},"coverage.html":{}}}],["utils/src/fire",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils/src/konsole.ts",{"_index":692,"title":{},"body":{"coverage.html":{},"classes/konsole.html":{}}}],["utils/src/konsole.ts:11",{"_index":773,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:22",{"_index":775,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:25",{"_index":793,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:33",{"_index":791,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:47",{"_index":779,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:55",{"_index":789,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:62",{"_index":786,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:70",{"_index":797,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/konsole.ts:77",{"_index":784,"title":{},"body":{"classes/konsole.html":{}}}],["utils/src/ngui",{"_index":140,"title":{},"body":{"pipes/NguiHighlightPipe.html":{},"coverage.html":{}}}],["value",{"_index":196,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{},"classes/NoMatchFound.html":{},"classes/NoneSelect.html":{},"classes/konsole.html":{}}}],["var",{"_index":285,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["vcr",{"_index":28,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["view",{"_index":336,"title":{},"body":{"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewchild",{"_index":604,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewchild('dynamic",{"_index":26,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["viewchild('pages",{"_index":596,"title":{},"body":{"components/NguiVirtualListComponent.html":{}}}],["viewcontainer",{"_index":425,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["viewcontainerref",{"_index":29,"title":{},"body":{"injectables/DynamicComponentService.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{}}}],["viewport",{"_index":167,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["virtual",{"_index":293,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"modules/NguiListModule.html":{},"components/NguiVirtualListComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["virtuallistcomponent",{"_index":427,"title":{},"body":{"directives/NguiListItemDirective.html":{}}}],["visible",{"_index":242,"title":{},"body":{"components/NguiInviewComponent.html":{}}}],["void",{"_index":244,"title":{},"body":{"components/NguiInviewComponent.html":{},"directives/NguiInviewDirective.html":{},"components/NguiInviewPageComponent.html":{},"directives/NguiListItemDirective.html":{},"components/NguiVirtualListComponent.html":{},"classes/konsole.html":{}}}],["warn",{"_index":765,"title":{},"body":{"classes/konsole.html":{}}}],["warn(...args",{"_index":796,"title":{},"body":{"classes/konsole.html":{}}}],["warning",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":888,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":883,"title":{},"body":{"license.html":{}}}],["whether",{"_index":200,"title":{},"body":{"components/NguiInviewComponent.html":{},"license.html":{}}}],["window",{"_index":808,"title":{},"body":{"classes/konsole.html":{}}}],["window.console",{"_index":794,"title":{},"body":{"classes/konsole.html":{}}}],["window.konsole",{"_index":755,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorage",{"_index":809,"title":{},"body":{"classes/konsole.html":{}}}],["window.sessionstorage.setitem('konsole.log_level",{"_index":811,"title":{},"body":{"classes/konsole.html":{}}}],["without",{"_index":635,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["won't",{"_index":234,"title":{},"body":{"components/NguiInviewComponent.html":{},"components/NguiVirtualListComponent.html":{}}}],["yes",{"_index":74,"title":{},"body":{"injectables/DynamicComponentService.html":{}}}],["zone.js",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":125,"title":{},"body":{"modules/NguiCommonModule.html":{},"modules/NguiInviewModule.html":{},"modules/NguiListModule.html":{},"modules/NguiUtilsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/DynamicComponentService.html":{"url":"injectables/DynamicComponentService.html","title":"injectable - DynamicComponentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DynamicComponentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n        \n\n            \n                Description\n            \n            \n                Insert a component dynamically using a service\nExample\n import { DynamicComponentService } from './dynamic.component.service';\n import { MyDynamicComponent } from './my-1.component';\n\n @Component({\n   template: ` ... `\n })\n export class MyComponent {\n   @ViewChild('dynamic', {read:ViewContainerRef}) vcr: ViewContainerRef;\n\n   constructor(public dcs: DynamicComponentService) {}\n\n   insertComp() {\n     let compRef = this.dcs.createComponent(MyDynamicComponent, this.vcr);\n     ths.dcs.insertComonent(cmpRef);\n     compRef.instance.items = [1,2,3];              // dealing with @input\n     compRef.instance.output$.subscribe(val => {}); // dealing with @output\n   }\n }\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                factoryResolver\n                            \n                            \n                                rootViewContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                insertComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryResolver\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createComponent\n                        \n                        \n                    \n                \n            \n            \n                \ncreateComponent(component: any, into?: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:53\n                \n            \n\n\n            \n                \n                    returns component reference\nThe reason to seperate createCompnent and insertComponent is\nto allow some actions before we insert into a hostView.\ne.g styling, setting attributes, etc\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    into\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ComponentRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertComponent\n                        \n                        \n                    \n                \n            \n            \n                \ninsertComponent(componentRef: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:63\n                \n            \n\n\n            \n                \n                    insert component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentRef\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Component\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            factoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:39\n                            \n                        \n\n                \n                    \n                        used to create a factory from a component class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootViewContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts:41\n                            \n                        \n\n                \n                    \n                        defines where a dynamic components insert into \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  ViewContainerRef\n} from '@angular/core';\n\n/**\n * Insert a component dynamically using a service\n *\n\n ### Example\n ```ts\n import { DynamicComponentService } from './dynamic.component.service';\n import { MyDynamicComponent } from './my-1.component';\n\n @Component({\n   template: ` ... `\n })\n export class MyComponent {\n   @ViewChild('dynamic', {read:ViewContainerRef}) vcr: ViewContainerRef;\n\n   constructor(public dcs: DynamicComponentService) {}\n\n   insertComp() {\n     let compRef = this.dcs.createComponent(MyDynamicComponent, this.vcr);\n     ths.dcs.insertComonent(cmpRef);\n     compRef.instance.items = [1,2,3];              // dealing with @input\n     compRef.instance.output$.subscribe(val => {}); // dealing with @output\n   }\n }\n ```\n */\n@Injectable()\nexport class DynamicComponentService {\n  /** used to create a factory from a component class */\n  factoryResolver: ComponentFactoryResolver;\n  /** defines where a dynamic components insert into */\n  rootViewContainer: ViewContainerRef;\n\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\n    this.factoryResolver = factoryResolver;\n  }\n\n  /**\n   * returns component reference\n   * The reason to seperate `createCompnent` and `insertComponent` is\n   * to allow some actions before we insert into a hostView.\n   * e.g styling, setting attributes, etc\n   */\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef {\n    this.rootViewContainer = into || this.rootViewContainer;\n    const factory = this.factoryResolver.resolveComponentFactory(component);\n\n    return factory.create(this.rootViewContainer.parentInjector);\n  }\n\n  /**\n   * insert component\n   */\n  insertComponent(componentRef: ComponentRef): Component {\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\n    componentRef.location.nativeElement.setAttribute('id', compId);\n    componentRef.instance.id = compId;\n\n    this.rootViewContainer.insert(componentRef.hostView);\n\n    return componentRef.instance;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiCommonModule.html":{"url":"modules/NguiCommonModule.html","title":"module - NguiCommonModule","body":"\n                   \n\n\n\n\n    Modules\n    NguiCommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-common.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NguiInviewModule\n                        \n                        \n                            NguiListModule\n                        \n                        \n                            NguiUtilsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NguiInviewModule\n                        \n                        \n                            NguiListModule\n                        \n                        \n                            NguiUtilsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\nimport {NguiListModule} from './ngui-list/ngui-list.module';\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\n\n@NgModule({\n  imports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ],\n  exports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ]\n})\nexport class NguiCommonModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NguiHighlightPipe.html":{"url":"pipes/NguiHighlightPipe.html","title":"pipe - NguiHighlightPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  NguiHighlightPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        nguiHighlight\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(text: string, search: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'nguiHighlight' })\nexport class NguiHighlightPipe implements PipeTransform {\n  transform(text: string, search: string): string {\n    let ret = text;\n    if (search) {\n      const re  = new RegExp(search, 'ig');\n      ret = text.replace(re, match => `${match}`);\n    }\n\n    return ret;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewComponent.html":{"url":"components/NguiInviewComponent.html","title":"component - NguiInviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiInviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n\n\n    \n        Description\n    \n    \n        An element that listens to viewport positioning and fires inView and notInview events\nExample\n \n   \n \n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview\n            \n\n\n            \n                styles\n                :host {display: block;}\n            \n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isInview\n                            \n                            \n                                observer\n                            \n                            \n                                once80PctVisible\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultInviewHandler\n                            \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEnabled\n                            \n                            \n                                observerOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                inview\n                            \n                            \n                                notInview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blurEnabled\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:46\n                            \n                        \n                \n                    \n                        Controls whether blur effect is applied to a component with less than 80% intersection ratio.\nOnly applies when there are no \"inview\" event handlers defined.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                \n                \n                    \n                        Type :     IntersectionObserverInit\n\n                    \n                \n                \n                    \n                        Default value : {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:39\n                            \n                        \n                \n                    \n                        IntersectionObserver options \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:42\n                            \n                        \n                \n                    \n                        Deprecated config. Use observerOptions instead.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        inview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        notInview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultInviewHandler\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultInviewHandler(entry)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:96\n                \n            \n\n\n            \n                \n                    default intersection handler, which sets blur dependes on intersection ratio\nthis won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleIntersect\n                        \n                        \n                    \n                \n            \n            \n                \nhandleIntersect(entries)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:80\n                \n            \n\n\n            \n                \n                    fires (inview) and (notInview) events when this component is visible or not visible  \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entries\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:75\n                \n            \n\n\n            \n                \n                    stop IntersectionObserver \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:63\n                \n            \n\n\n            \n                \n                    Starts IntersectionObserver \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInview\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:53\n                            \n                        \n\n                \n                    \n                        indicates that this element is in viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            once80PctVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:55\n                            \n                        \n\n                \n                    \n                        indicates that this element is 80% in viewport. Used by the default callback \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(TemplateRef, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts:36\n                            \n                        \n\n                \n                    \n                         reference \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    TemplateRef\n} from '@angular/core';\n\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n An element that listens to viewport positioning and fires inView and notInview events\n ### Example\n ```html\n \n   \n \n ```\n */\n@Component({\n  selector: 'ngui-inview',\n  template: `\n        \n        \n    `,\n  styles: [':host {display: block;}']\n})\nexport class NguiInviewComponent implements OnInit, OnDestroy {\n    /**  reference */\n  @ContentChild(TemplateRef, {static: true}) template: TemplateRef;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n  /** Controls whether blur effect is applied to a component with less than 80% intersection ratio.\n   * Only applies when there are no \"inview\" event handlers defined.\n   **/\n  @Input() blurEnabled = true;\n\n  @Output() inview: EventEmitter = new EventEmitter();\n  @Output() notInview: EventEmitter = new EventEmitter();\n\n  observer: IntersectionObserver;\n    /** indicates that this element is in viewport */\n  isInview = false;\n    /** indicates that this element is 80% in viewport. Used by the default callback */\n  once80PctVisible = false;\n\n  constructor(\n        private element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** stop IntersectionObserver */\n  ngOnDestroy(): void {\n    this.observer.disconnect();\n  }\n\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.isInview = true;\n        this.defaultInviewHandler(entry);\n        this.inview.emit(entry);\n      } else {\n        this.notInview.emit(entry);\n      }\n    });\n  }\n\n    /**\n     * default intersection handler, which sets blur dependes on intersection ratio\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n     */\n  defaultInviewHandler(entry): any {\n    if (!this.blurEnabled || this.once80PctVisible || this.inview.observers.length) {\n      return;\n    }\n\n    if (entry.intersectionRatio \n    \n\n\n    \n            :host {display: block;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiInviewDirective.html":{"url":"directives/NguiInviewDirective.html","title":"directive - NguiInviewDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NguiInviewDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n        \n\n            \n                Description\n            \n            \n                Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [nguiInview], [nguiOutview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                            \n                                observer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleIntersect\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observerOptions\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nguiInview\n                            \n                            \n                                nguiOutview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                \n                \n                    \n                        Type :     IntersectionObserverInit\n\n                    \n                \n                \n                    \n                        Default value : {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]}\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:24\n                            \n                        \n                \n                    \n                        IntersectionObserver options \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:27\n                            \n                        \n                \n                    \n                        Deprecated config. Use observerOptions instead.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nguiInview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:30\n                            \n                        \n                \n                    \n                        Event that will be fired when in viewport \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nguiOutview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:32\n                            \n                        \n                \n                    \n                        Event that will be fired when out of  viewport \n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleIntersect\n                        \n                        \n                    \n                \n            \n            \n                \nhandleIntersect(entries)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:62\n                \n            \n\n\n            \n                \n                    Fires (nguiInview) event when this element is in viewport\n  and fires (nguiOutview) event when this element is not in viewport\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entries\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:52\n                \n            \n\n\n            \n                \n                    Stops IntersectionObserver \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:40\n                \n            \n\n\n            \n                \n                    Starts IntersectionObserver \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n */\n@Directive({\n    selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\n})\nexport class NguiInviewDirective implements OnInit, OnDestroy {\n  observer: IntersectionObserver;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n\n    /** Event that will be fired when in viewport */\n  @Output() nguiInview: EventEmitter = new EventEmitter();\n    /** Event that will be fired when out of  viewport */\n  @Output() nguiOutview: EventEmitter = new EventEmitter();\n\n  constructor(\n        public element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** Stops IntersectionObserver */\n  ngOnDestroy(): void {\n    if (isPlatformBrowser(this.platformId) && this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n    /**\n     * Fires (nguiInview) event when this element is in viewport\n     *  and fires (nguiOutview) event when this element is not in viewport\n     */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.nguiInview.emit(entry);\n      } else {\n        this.nguiOutview.emit(entry);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiInviewModule.html":{"url":"modules/NguiInviewModule.html","title":"module - NguiInviewModule","body":"\n                   \n\n\n\n\n    Modules\n    NguiInviewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-inview/ngui-inview.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NguiInviewComponent\n                        \n                        \n                            NguiInviewDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NguiInviewComponent\n                        \n                        \n                            NguiInviewDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiInviewComponent} from './src/ngui-inview.component';\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\n\nexport {NguiInviewComponent, NguiInviewDirective};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ],\n  exports: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ]\n})\nexport class NguiInviewModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiInviewPageComponent.html":{"url":"components/NguiInviewPageComponent.html","title":"component - NguiInviewPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiInviewPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n\n\n    \n        Description\n    \n    \n        A block of component that listens to inView and outView events,\nso that it empties contents when out of view after backup items\nand restores the contents when in view\nExample\n \n   \n     \n       row number: {{ num }}\n     \n   \n \n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-inview-page\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n  \n  \n  \n  \n\n\n\n   Error: requires [items] \n   Error: requires &lt;ng-template>\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsEl\n                            \n                            \n                                destroyed\n                            \n                            \n                                itemsBackup\n                            \n                            \n                                outView\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emptyItems\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                restoreItems\n                            \n                            \n                                setItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                observerOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:60\n                            \n                        \n                \n                    \n                        List of elements that are used to render this element \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        observerOptions\n                    \n                \n                \n                    \n                        Type :     IntersectionObserverInit\n\n                    \n                \n                \n                    \n                        Default value : {threshold: [0, .01]}\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:63\n                            \n                        \n                \n                    \n                        IntersectionObserver options \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emptyItems\n                        \n                        \n                    \n                \n            \n            \n                \nemptyItems()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:106\n                \n            \n\n\n            \n                \n                    Empty items when not in viewport, so that elements are not rendered\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restoreItems\n                        \n                        \n                    \n                \n            \n            \n                \nrestoreItems()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:84\n                \n            \n\n\n            \n                \n                    Restore items when in viewport, so that elements are rendered\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItems\n                        \n                        \n                    \n                \n            \n            \n                \nsetItems(items: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentsEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:72\n                            \n                        \n\n                \n                    \n                        The first element of this component.\nThe height of it remains the same even when items get empty out.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroyed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemsBackup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:67\n                            \n                        \n\n                \n                    \n                        The copy of items. This is set when this element is out of viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outView\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:65\n                            \n                        \n\n                \n                    \n                        Indicates that the page of out of viewport \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(TemplateRef, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts:56\n                            \n                        \n\n                \n                    \n                        Allow users to change the contents \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\n\n/**\n * A block of component that listens to inView and outView events,\n * so that it empties contents when out of view after backup items\n * and restores the contents when in view\n\n ### Example\n ```html\n \n   \n     \n       row number: {{ num }}\n     \n   \n \n ```\n */\n@Component({\n  selector: 'ngui-inview-page',\n  template: `\n    \n      \n      \n      \n      \n    \n\n    \n       Error: requires [items] \n       Error: requires &lt;ng-template>\n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\n\n  /** Allow users to change the contents */\n  @ContentChild(TemplateRef, {static: true}) template: TemplateRef;\n  // @Input('template') template: TemplateRef;\n\n  /** List of elements that are used to render this element */\n  @Input() items: Array;\n\n  /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [0, .01]};\n  /** Indicates that the page of out of viewport */\n  outView = false;\n  /** The copy of items. This is set when this element is out of viewport */\n  itemsBackup: Array = [];\n  /**\n   * The first element of this component.\n   * The height of it remains the same even when items get empty out.\n   */\n  contentsEl: HTMLElement;\n  destroyed: boolean;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private cdRef: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Restore items when in viewport, so that elements are rendered\n   */\n  restoreItems(): void {\n    if (this.outView) {\n      this.outView = false;\n      this.items = Array.from(this.itemsBackup || []);\n      this.itemsBackup = undefined;\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  ngOnInit(): void {\n    this.contentsEl =\n      this.element.nativeElement.querySelector('.inview-page.contents');\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  /**\n   * Empty items when not in viewport, so that elements are not rendered\n   */\n  emptyItems(): void {\n    if (this.items && this.contentsEl && !this.outView) {\n      // set height before emptying contents\n      const height = this.element.nativeElement.getBoundingClientRect().height;\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\n\n      this.outView = true;\n      this.itemsBackup = Array.from(this.items || []);\n      this.items = undefined;\n      if (!this.destroyed) {\n        this.cdRef.detectChanges();\n      }\n    }\n  }\n\n  setItems(items: Array): void {\n    if (!this.destroyed) {\n      this.items = items;\n      this.cdRef.detectChanges();\n    }\n  }\n\n}\n\n    \n\n\n    \n            \n    :host {display: block}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Error: requires [items]    Error: requires '\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiInviewPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListDirective.html":{"url":"directives/NguiListDirective.html","title":"directive - NguiListDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NguiListDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ngui-list\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:15\n                            \n                        \n                \n                    \n                        Fired when ESC key is pressed from  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:13\n                            \n                        \n                \n                    \n                        Fired when child  is selected \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: 'ngui-list' // tslint:disable-line\n})\nexport class NguiListDirective {\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  constructor(public element: ElementRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NguiListItemDirective.html":{"url":"directives/NguiListItemDirective.html","title":"directive - NguiListItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NguiListItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ngui-list-item\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nextSibling\n                            \n                            \n                                parentListComp\n                            \n                            \n                                prevSibling\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                click\n                            \n                            \n                                focus\n                            \n                            \n                                keydown\n                            \n                            \n                                keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2, viewContainer: ViewContainerRef, listDirective: NguiListDirective, virtualListComponent: NguiVirtualListComponent, autocompleteComponent: NguiAutocompleteComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        listDirective\n                                                  \n                                                        \n                                                                    NguiListDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualListComponent\n                                                  \n                                                        \n                                                                        NguiVirtualListComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autocompleteComponent\n                                                  \n                                                        \n                                                                        NguiAutocompleteComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:24\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            blur\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nblur()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:98\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:88\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:92\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keydown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeydown(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:52\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keyup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nkeyup(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:75\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextSibling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentListComp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevSibling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NguiListDirective } from './ngui-list.directive';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\nimport { NoneSelect } from './none-select';\nimport { NoMatchFound } from './no-match-found';\n\n// tabindex, keydown, keyup(ENTER, ESC), click\n@Directive({\n  selector: 'ngui-list-item' // tslint:disable-line\n})\nexport class NguiListItemDirective implements OnInit {\n  @Input('item') object: any; // tslint:disable-line\n\n  nextSibling: HTMLElement;\n  prevSibling: HTMLElement;\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private viewContainer: ViewContainerRef,\n    @Optional() @Host() private listDirective: NguiListDirective,\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\n    if (!this.parentListComp) {\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\n    }\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\n      this.viewContainer.clear();\n      this.el.nativeElement.innerHTML = this.object.html;\n    }\n  }\n\n  // handles keyboard up, down, left, right\n  @HostListener('keydown', ['$event']) keydown(event): void {\n    const thisListItem = this.el.nativeElement;\n    const keyCode = event.which || event.keyCode;\n    const parentListEl = this.parentListComp.element.nativeElement;\n    const listItems: Array\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\n    const listItemNdx = listItems.indexOf(thisListItem);\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\n\n    switch (keyCode) {\n    case 37: case 38: // up arrow, left arrow\n      prevListItem.focus();\n      break;\n    case 39: case 40: // down arrow, right arrow\n      nextListItem.focus();\n      break;\n    default:\n      break;\n    }\n  }\n\n  // handles keyboard enter(13), esc(27)\n  @HostListener('keyup', ['$event']) keyup(event): void {\n    switch (event.key) {\n    case 'Enter':\n      this.parentListComp.selected.emit(this.object);\n      break;\n    case 'Escape':\n      this.parentListComp.escaped.emit();\n      break;\n    default:\n      break;\n    }\n  }\n\n  @HostListener('click', ['$event']) mousedown(): void {\n    this.parentListComp.selected.emit(this.object);\n  }\n\n  @HostListener('focus', ['$event']) focused(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', true);\n    }\n  }\n\n  @HostListener('blur', ['$event']) blurred(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', false);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiListModule.html":{"url":"modules/NguiListModule.html","title":"module - NguiListModule","body":"\n                   \n\n\n\n\n    Modules\n    NguiListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_imports\n\n\n\ncluster_NguiListModule_exports\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/ngui-list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NguiAutocompleteComponent\n                        \n                        \n                            NguiInviewPageComponent\n                        \n                        \n                            NguiListDirective\n                        \n                        \n                            NguiListItemDirective\n                        \n                        \n                            NguiVirtualListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            NguiInviewPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NguiInviewModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NguiAutocompleteComponent\n                        \n                        \n                            NguiInviewPageComponent\n                        \n                        \n                            NguiListDirective\n                        \n                        \n                            NguiListItemDirective\n                        \n                        \n                            NguiVirtualListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\nimport {NguiListDirective} from './src/ngui-list.directive';\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\n\nexport {NguiAutocompleteComponent, NguiListItemDirective, NguiListDirective, NguiInviewPageComponent, NguiVirtualListComponent};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NguiInviewModule\n  ],\n  declarations: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  exports: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  entryComponents: [NguiInviewPageComponent]\n})\nexport class NguiListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NguiUtilsModule.html":{"url":"modules/NguiUtilsModule.html","title":"module - NguiUtilsModule","body":"\n                   \n\n\n\n\n    Modules\n    NguiUtilsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/ngui-utils.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NguiHighlightPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DynamicComponentService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NguiHighlightPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\nimport {DynamicComponentService} from './src/dynamic-component.service';\nimport { konsole } from './src/konsole';\nimport { fireEvent } from './src/fire-event';\n\nexport {DynamicComponentService, NguiHighlightPipe, konsole, fireEvent};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NguiHighlightPipe],\n  exports: [NguiHighlightPipe],\n  providers: [DynamicComponentService]\n})\nexport class NguiUtilsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NguiVirtualListComponent.html":{"url":"components/NguiVirtualListComponent.html","title":"component - NguiVirtualListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NguiVirtualListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n\n\n    \n        Description\n    \n    \n        Virtual List\nThe  inserts  into\n when it is in viewport\nWhen it's inserted, it will be pushed down, which makes it out of viewport.\nUser scrolls down to see the bottom of the list,\nthen it will insert another  again.\n listens to (nguiInview) and (nguiOutview) events,\nwhen  is out of view port, it empties out the contents.\nand it restores back the contents when it is in viewport again.\nExample\n \n   \n     Loading\n     row number: {{ num }}\n   \n \n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngui-virtual-list\n            \n\n\n            \n                styles\n                \n    :host {display: block}\n  \n            \n\n            \n                template\n                \n   -->\n  \n   into #pages -->\n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _focused\n                            \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                dynamicComponentService\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                inviewPage\n                            \n                            \n                                inviewPages\n                            \n                            \n                                isListLoading\n                            \n                            \n                                pagesRef\n                            \n                            \n                                    Public\n                                renderer\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAnInviewPageToPages\n                            \n                            \n                                addList\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottomInview\n                            \n                            \n                                escaped\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, element: ElementRef, dynamicComponentService: DynamicComponentService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dynamicComponentService\n                                                  \n                                                        \n                                                                        DynamicComponentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        bottomInview\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:86\n                            \n                        \n                \n                    \n                        Event fired when bottom of the virtual list is in view\nThe handler of this event must call $event.addItems(items: Array) to fill contents\nIf not, only the first page is loaded, and rest of the pages won't be loaded;\nExample\n   \n     \n       \n          row number: {{ num }}\n       \n       Loading\n     \n   \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        escaped\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:67\n                            \n                        \n                \n                    \n                        Fired when ESC key is pressed from  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:65\n                            \n                        \n                \n                    \n                        Fired when child  is selected \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAnInviewPageToPages\n                        \n                        \n                    \n                \n            \n            \n                \naddAnInviewPageToPages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:114\n                \n            \n\n\n            \n                \n                    When the bottom is inview port, this function is called\nIt will insert a dynamicall created NguiInviewPageComponent with the given template.\nIt will also fires (bottomInview) event, so that user can fill up items for the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addList\n                        \n                        \n                    \n                \n            \n            \n                \naddList(items: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:103\n                \n            \n\n\n            \n                \n                    Check if necessary input and output is provided \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _focused\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dynamicComponentService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DynamicComponentService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            element\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviewPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:89\n                            \n                        \n\n                \n                    \n                        The last NguiInviewPageComponent being inserted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inviewPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isListLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:92\n                            \n                        \n\n                \n                    \n                        Indicates if a page is still loading \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagesRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('pages', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:61\n                            \n                        \n\n                \n                    \n                        the container NguiInviewPage will be inserted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(TemplateRef)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts:63\n                            \n                        \n\n                \n                    \n                        Template of NguiInviewPage. Allow users to define their own template  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\n\n/**\n * Virtual List\n *\n * The `` inserts  into\n * `` when it is in viewport\n * When it's inserted, it will be pushed down, which makes it out of viewport.\n * User scrolls down to see the bottom of the list,\n * then it will insert another `` again.\n *\n *  listens to (nguiInview) and (nguiOutview) events,\n * when  is out of view port, it empties out the contents.\n * and it restores back the contents when it is in viewport again.\n\n ### Example\n ```html\n \n   \n     Loading\n     row number: {{ num }}\n   \n \n ```\n */\n@Component({\n  selector: 'ngui-virtual-list',\n  template: `\n    \n       -->\n      \n       into #pages -->\n    \n    \n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiVirtualListComponent implements AfterViewInit {\n\n  /** the container NguiInviewPage will be inserted */\n  @ViewChild('pages', { read: ViewContainerRef }) pagesRef: ViewContainerRef;\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef;\n  /** Fired when child `` is selected */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `` */\n  @Output() escaped: EventEmitter = new EventEmitter();\n\n  /**\n   * Event fired when bottom of the virtual list is in view\n   * The handler of this event must call `$event.addItems(items: Array)` to fill contents\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\n\n   ### Example\n   ```html\n   \n     \n       \n          row number: {{ num }}\n       \n       Loading\n     \n   \n   ```\n   */\n  @Output() bottomInview: EventEmitter = new EventEmitter();\n\n  /** The last NguiInviewPageComponent being inserted */\n  inviewPage: ComponentRef;\n  _focused = false;\n  /** Indicates if a page is still loading */\n  isListLoading: boolean;\n  inviewPages: Array> = [];\n\n  constructor(\n    public renderer: Renderer2,\n    public element: ElementRef,\n    public dynamicComponentService: DynamicComponentService,\n    public cdr: ChangeDetectorRef\n  ) {}\n\n  /** Check if necessary input and output is provided */\n  ngAfterViewInit(): void {\n    if (!this.template || !this.bottomInview.observers.length) {\n      console.error(' requires [template] and {bottomInview)');\n    }\n  }\n\n  /**\n   * When the bottom is inview port, this function is called\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\n   */\n  addAnInviewPageToPages(): void {\n    if (!this.isListLoading) {\n      this.isListLoading = true;\n\n      this.inviewPage =\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\n      this.dynamicComponentService.insertComponent(this.inviewPage);\n\n      this.inviewPage.instance.template = this.template;\n      this.inviewPages.push(this.inviewPage);\n\n      this.bottomInview.emit(this); // fire event, so that user can load items\n    }\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array): void {\n    this.isListLoading = false;\n    this.inviewPage.instance.setItems(items);\n  }\n\n}\n\n    \n\n\n    \n            \n    :host {display: block}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->     into #pages -->'\n    var COMPONENTS = [{'name': 'NguiAutocompleteComponent', 'selector': 'ngui-autocomplete'},{'name': 'NguiInviewComponent', 'selector': 'ngui-inview'},{'name': 'NguiInviewPageComponent', 'selector': 'ngui-inview-page'},{'name': 'NguiVirtualListComponent', 'selector': 'ngui-virtual-list'}];\n    var DIRECTIVES = [{'name': 'NguiInviewDirective', 'selector': '[nguiInview], [nguiOutview]'},{'name': 'NguiListDirective', 'selector': 'ngui-list'},{'name': 'NguiListItemDirective', 'selector': 'ngui-list-item'}];\n    var ACTUAL_COMPONENT = {'name': 'NguiVirtualListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoMatchFound.html":{"url":"classes/NoMatchFound.html","title":"class - NoMatchFound","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoMatchFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'No Match Found'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoMatchFound {\n  html = 'No Match Found';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoneSelect.html":{"url":"classes/NoneSelect.html","title":"class - NoneSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoneSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Select'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-list/src/none-select.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NoneSelect {\n  html = 'Select';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.8.0 (2021-02-16)\n\nngui-virtual-list now just inserts newly loaded items without showing \" items hidden\" message.\nobserverOptions can now be customized for ngui-inview-page\nRemoved some console.log() debugging messages\n\n0.7.0 (2020-08-04)\n\nAdd support for Angular 10\nFix issue #15 (deep import warning when using Angular 9+)\n\n0.6.0 (2018-11-02)\n\nAdd support for Angular 7\n\n0.5.0 (2018-08-15)\n\nNew \"blurEnabled\" configuration option for \"ngui-inview\" component\n\"ngui-inview\" component's \"options\" config was renamed to \"observerOptions\" to better represent its purpose\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts\n            \n            component\n            NguiInviewComponent\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts\n            \n            directive\n            NguiInviewDirective\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts\n            \n            component\n            NguiAutocompleteComponent\n            \n                27 %\n                (12/43)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts\n            \n            component\n            NguiInviewPageComponent\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts\n            \n            directive\n            NguiListItemDirective\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts\n            \n            directive\n            NguiListDirective\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts\n            \n            component\n            NguiVirtualListComponent\n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts\n            \n            class\n            NoMatchFound\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-list/src/none-select.ts\n            \n            class\n            NoneSelect\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts\n            \n            injectable\n            DynamicComponentService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n            \n            function\n            fireEvent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n            \n            class\n            konsole\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts\n            \n            pipe\n            NguiHighlightPipe\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.7\n        \n            @angular/common : ^10.0.7\n        \n            @angular/compiler : ^10.0.7\n        \n            @angular/core : ^10.0.7\n        \n            @angular/forms : ^10.0.7\n        \n            @angular/platform-browser : ^10.0.7\n        \n            @angular/platform-browser-dynamic : ^10.0.7\n        \n            @angular/router : ^10.0.7\n        \n            core-js : ^2.6.9\n        \n            rxjs : ^6.6.2\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fireEvent   (projects/.../fire-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fireEvent\n                        \n                        \n                    \n                \n            \n            \n                \nfireEvent(el, type, options: any)\n                \n            \n\n\n\n\n            \n                \n                    fire the given event with options on the element\nExample\n fireEvent(el, 'click');\n fireEvent(el, 'keypress', {key: 'Enter'});\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ngui/common\nAngular 10+ UI common directives, functions, services\n\n \n\n\nDemoObject DocumentationCode Coverage ReportUnit Test ReportAcceptance ReportArticle on Medium  \nInstall\n\ninstall @ngui/common\n\n$ npm install @ngui/common --save\nimport NguiCommonModule to your AppModule  \n\nimport { NguiInviewModule, NguiListModule, NguiUtilsModule } from '@ngui/common';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule, NguiListModule, NguiInviewModule, NguiUtilsModule],\n  declarations: [AppComponent],\n  providers: [HTTP_PROVIDERS],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }Use it in your code\n\n\n  \nModules\nNguiInViewModule\nHandles lazy rendering of Angular components, which utilizes HTML5 IntersectionObserver.\nFor IE11 and Safari, please add polyfill for this module:\n\nngui-inview component\nngui-inview directive\n\nNguiUtilsModules\nCollection of basic utility functions\n\nDynamicComponentService\nnguiHilight pipe\nfireEvent function\n\nNguiListModule\nHandles list elements with highlight and keyboard/mouse interaction\n\nngui-inview-page component\nngui-list component\nngui-virtual-list component\nngui-autocomplete component\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/konsole.html":{"url":"classes/konsole.html","title":"class - konsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  konsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngui-common/src/lib/ngui-utils/src/konsole.ts\n        \n\n            \n                Description\n            \n            \n                window.konsole alternative\nExample\n konsole.setLogLevel('error');\n konsole.log(1,2,3,4,5);\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                LOG_LEVELS\n                            \n                            \n                                    Static\n                                logLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                    Static\n                                log\n                            \n                            \n                                    Static\n                                setLogLevel\n                            \n                            \n                                    Static\n                                toLog\n                            \n                            \n                                    Static\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LOG_LEVELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:11\n                            \n                        \n\n                \n                    \n                        all log levels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            logLevel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'INFO'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:22\n                            \n                        \n\n                \n                    \n                        current log level set by setLogLevel, default 'INFO' \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:47\n                \n            \n\n\n            \n                \n                    The same as console.debug() if the current log level is greater than debug \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:77\n                \n            \n\n\n            \n                \n                    The same as console.error() if the current log level is greater than error \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            info\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    info(...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:62\n                \n            \n\n\n            \n                \n                    The same as console.info() if the current log level is greater than info \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:55\n                \n            \n\n\n            \n                \n                    The same as console.log() if the current log level is greater than log \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            setLogLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLogLevel(logLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:33\n                \n            \n\n\n            \n                \n                    sets the current log level \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toLog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toLog(param)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:25\n                \n            \n\n\n            \n                \n                    returns if it should call window.console or not \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngui-common/src/lib/ngui-utils/src/konsole.ts:70\n                \n            \n\n\n            \n                \n                    The same as console.warn() if the current log level is greater than warn \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class konsole { // tslint:disable-line\n  /** all log levels */\n  static LOG_LEVELS = {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  };\n\n  /** current log level set by setLogLevel, default 'INFO' */\n  static logLevel = 'INFO';\n\n  /** returns if it should call `window.console` or not */\n  static toLog(param): boolean { // returns to log or not\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\n    const requiredNum = this.LOG_LEVELS[param];\n\n    return requiredNum > restrictionNum;\n  }\n\n  /** sets the current log level */\n  static setLogLevel(logLevel: string): any {\n    logLevel = logLevel.toUpperCase();\n    const logLevels = Object.keys(this.LOG_LEVELS);\n    if (logLevels.indexOf(logLevel) > -1) {\n      if (window && window.sessionStorage) { // for browser env.\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\n      }\n      this.logLevel = logLevel;\n    } else {\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\n    }\n  }\n\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\n  static debug(...args: Array): void {\n    if (this.toLog('DEBUG')) {\n        // noinspection TsLint\n        console.debug.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.log()` if the current log level is greater than `log` */\n  static log(...args: Array): void {\n    if (this.toLog('LOG')) {\n      console.log.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.info()` if the current log level is greater than `info` */\n  static info(...args: Array): void {\n    if (this.toLog('INFO')) {\n        // noinspection TsLint\n        console.info.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\n  static warn(...args: Array): void {\n    if (this.toLog('WARN')) {\n      console.warn.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.error()` if the current log level is greater than `error` */\n  static error(...args: Array): void {\n    if (this.toLog('ERROR')) {\n      console.error.apply(console, arguments);\n    }\n  }\n}\n\n// konsole.setLogLevel('all');\n// konsole.debug('yes');\n// konsole.log('yes');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('none');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('no');\n\n// konsole.setLogLevel('info');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('WARN');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('ERROR');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('yes');\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Allen Kim\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NguiCommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiInviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NguiUtilsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NguiCommonModule\n\n\n\ncluster_NguiCommonModule_imports\n\n\n\ncluster_NguiCommonModule_exports\n\n\n\ncluster_NguiInviewModule\n\n\n\ncluster_NguiInviewModule_declarations\n\n\n\ncluster_NguiInviewModule_exports\n\n\n\ncluster_NguiListModule\n\n\n\ncluster_NguiListModule_declarations\n\n\n\ncluster_NguiListModule_exports\n\n\n\ncluster_NguiUtilsModule\n\n\n\ncluster_NguiUtilsModule_declarations\n\n\n\ncluster_NguiUtilsModule_exports\n\n\n\ncluster_NguiUtilsModule_providers\n\n\n\n\nNguiInviewModule\n\nNguiInviewModule\n\n\n\nNguiListModule\n\nNguiListModule\n\nNguiListModule -->\n\nNguiInviewModule->NguiListModule\n\n\n\n\n\nNguiCommonModule\n\nNguiCommonModule\n\nNguiCommonModule -->\n\nNguiInviewModule->NguiCommonModule\n\n\n\n\n\nNguiInviewComponent \n\nNguiInviewComponent \n\nNguiInviewComponent  -->\n\nNguiInviewModule->NguiInviewComponent \n\n\n\n\n\nNguiInviewDirective \n\nNguiInviewDirective \n\nNguiInviewDirective  -->\n\nNguiInviewModule->NguiInviewDirective \n\n\n\nNguiCommonModule -->\n\nNguiListModule->NguiCommonModule\n\n\n\n\n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent \n\nNguiAutocompleteComponent  -->\n\nNguiListModule->NguiAutocompleteComponent \n\n\n\n\n\nNguiInviewPageComponent \n\nNguiInviewPageComponent \n\nNguiInviewPageComponent  -->\n\nNguiListModule->NguiInviewPageComponent \n\n\n\n\n\nNguiListDirective \n\nNguiListDirective \n\nNguiListDirective  -->\n\nNguiListModule->NguiListDirective \n\n\n\n\n\nNguiListItemDirective \n\nNguiListItemDirective \n\nNguiListItemDirective  -->\n\nNguiListModule->NguiListItemDirective \n\n\n\n\n\nNguiVirtualListComponent \n\nNguiVirtualListComponent \n\nNguiVirtualListComponent  -->\n\nNguiListModule->NguiVirtualListComponent \n\n\n\n\n\nNguiUtilsModule\n\nNguiUtilsModule\n\nNguiCommonModule -->\n\nNguiUtilsModule->NguiCommonModule\n\n\n\n\n\nNguiHighlightPipe \n\nNguiHighlightPipe \n\nNguiHighlightPipe  -->\n\nNguiUtilsModule->NguiHighlightPipe \n\n\n\n\n\nNguiInviewModule \n\nNguiInviewModule \n\nNguiInviewModule  -->\n\nNguiCommonModule->NguiInviewModule \n\n\n\n\n\nNguiListModule \n\nNguiListModule \n\nNguiListModule  -->\n\nNguiCommonModule->NguiListModule \n\n\n\n\n\nNguiUtilsModule \n\nNguiUtilsModule \n\nNguiUtilsModule  -->\n\nNguiCommonModule->NguiUtilsModule \n\n\n\n\n\nNguiInviewComponent\n\nNguiInviewComponent\n\nNguiInviewModule -->\n\nNguiInviewComponent->NguiInviewModule\n\n\n\n\n\nNguiInviewDirective\n\nNguiInviewDirective\n\nNguiInviewModule -->\n\nNguiInviewDirective->NguiInviewModule\n\n\n\n\n\nNguiAutocompleteComponent\n\nNguiAutocompleteComponent\n\nNguiListModule -->\n\nNguiAutocompleteComponent->NguiListModule\n\n\n\n\n\nNguiInviewPageComponent\n\nNguiInviewPageComponent\n\nNguiListModule -->\n\nNguiInviewPageComponent->NguiListModule\n\n\n\n\n\nNguiListDirective\n\nNguiListDirective\n\nNguiListModule -->\n\nNguiListDirective->NguiListModule\n\n\n\n\n\nNguiListItemDirective\n\nNguiListItemDirective\n\nNguiListModule -->\n\nNguiListItemDirective->NguiListModule\n\n\n\n\n\nNguiVirtualListComponent\n\nNguiVirtualListComponent\n\nNguiListModule -->\n\nNguiVirtualListComponent->NguiListModule\n\n\n\n\n\nNguiHighlightPipe\n\nNguiHighlightPipe\n\nNguiUtilsModule -->\n\nNguiHighlightPipe->NguiUtilsModule\n\n\n\n\n\nDynamicComponentService\n\nDynamicComponentService\n\nNguiUtilsModule -->\n\nDynamicComponentService->NguiUtilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
