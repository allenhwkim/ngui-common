{"version":3,"file":"ngui-inview-page.component.d.ts","sources":["ngui-inview-page.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';\r\n/**\r\n * A block of component that listens to inView and outView events,\r\n * so that it empties contents when out of view after backup items\r\n * and restores the contents when in view\r\n\r\n ### Example\r\n ```html\r\n <ngui-inview-page [items]=\"items\">\r\n   <ng-template let-items=\"items\">\r\n     <div *ngIf=\"items else noItems\">\r\n       <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n     </div>\r\n   </ng-template>\r\n </ngui-inview-page>\r\n ```\r\n */\r\nexport declare class NguiInviewPageComponent implements OnInit, OnDestroy {\r\n    private element;\r\n    private renderer;\r\n    private cdRef;\r\n    /** Allow users to change the contents */\r\n    template: TemplateRef<any>;\r\n    /** List of elements that are used to render this element */\r\n    items: Array<any>;\r\n    /** IntersectionObserver options */\r\n    observerOptions: IntersectionObserverInit;\r\n    /** Indicates that the page of out of viewport */\r\n    outView: boolean;\r\n    /** The copy of items. This is set when this element is out of viewport */\r\n    itemsBackup: Array<any>;\r\n    /**\r\n     * The first element of this component.\r\n     * The height of it remains the same even when items get empty out.\r\n     */\r\n    contentsEl: HTMLElement;\r\n    destroyed: boolean;\r\n    constructor(element: ElementRef, renderer: Renderer2, cdRef: ChangeDetectorRef);\r\n    /**\r\n     * Restore items when in viewport, so that elements are rendered\r\n     */\r\n    restoreItems(): void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Empty items when not in viewport, so that elements are not rendered\r\n     */\r\n    emptyItems(): void;\r\n    setItems(items: Array<any>): void;\r\n}\r\n"]}