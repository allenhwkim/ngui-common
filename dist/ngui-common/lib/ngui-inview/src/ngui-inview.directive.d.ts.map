{"version":3,"file":"ngui-inview.directive.d.ts","sources":["ngui-inview.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\n/**\r\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\r\n */\r\nexport declare class NguiInviewDirective implements OnInit, OnDestroy {\r\n    element: ElementRef;\r\n    private platformId;\r\n    observer: IntersectionObserver;\r\n    /** IntersectionObserver options */\r\n    observerOptions: IntersectionObserverInit;\r\n    /** Deprecated config. Use `observerOptions` instead.\r\n     * @deprecated Use `observerOptions` instead. */\r\n    options: any;\r\n    /** Event that will be fired when in viewport */\r\n    nguiInview: EventEmitter<IntersectionObserverEntry>;\r\n    /** Event that will be fired when out of  viewport */\r\n    nguiOutview: EventEmitter<IntersectionObserverEntry>;\r\n    constructor(element: ElementRef, platformId: any);\r\n    /** Starts IntersectionObserver */\r\n    ngOnInit(): void;\r\n    /** Stops IntersectionObserver */\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Fires (nguiInview) event when this element is in viewport\r\n     *  and fires (nguiOutview) event when this element is not in viewport\r\n     */\r\n    handleIntersect(entries: any): void;\r\n}\r\n"]}