{"version":3,"sources":["../../../projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.component.ts","../../../projects/ngui-common/src/lib/ngui-inview/src/ngui-inview.directive.ts","../../../projects/ngui-common/src/lib/ngui-inview/ngui-inview.module.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngui-common/src/lib/ngui-utils/src/fire-event.ts","../../../projects/ngui-common/src/lib/ngui-utils/src/dynamic-component.service.ts","../../../projects/ngui-common/src/lib/ngui-list/src/ngui-inview-page.component.ts","../../../projects/ngui-common/src/lib/ngui-list/src/ngui-virtual-list.component.ts","../../../projects/ngui-common/src/lib/ngui-list/src/no-match-found.ts","../../../projects/ngui-common/src/lib/ngui-list/src/none-select.ts","../../../projects/ngui-common/src/lib/ngui-list/src/ngui-autocomplete.component.ts","../../../projects/ngui-common/src/lib/ngui-list/src/ngui-list.directive.ts","../../../projects/ngui-common/src/lib/ngui-list/src/ngui-list-item.directive.ts","../../../projects/ngui-common/src/lib/ngui-list/ngui-list.module.ts","../../../projects/ngui-common/src/lib/ngui-utils/src/ngui-highlight.pipe.ts","../../../projects/ngui-common/src/lib/ngui-utils/src/konsole.ts","../../../projects/ngui-common/src/lib/ngui-utils/ngui-utils.module.ts","../../../projects/ngui-common/src/lib/ngui-common.module.ts"],"names":["NguiInviewComponent","element","platformId","this","observerOptions","threshold","blurEnabled","inview","EventEmitter","notInview","isInview","once80PctVisible","prototype","ngOnInit","options","isPlatformBrowser","observer","IntersectionObserver","handleIntersect","bind","observe","nativeElement","ngOnDestroy","disconnect","entries","_this","forEach","entry","defaultInviewHandler","emit","observers","length","intersectionRatio","opacity","filter","Math","floor","Object","assign","target","style","Component","args","selector","template","ElementRef","Inject","PLATFORM_ID","ContentChild","TemplateRef","static","Input","Output","NguiInviewDirective","nguiInview","nguiOutview","Directive","NgModule","imports","CommonModule","declarations","exports","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","concat","fireEvent","el","type","event","match","MouseEvent","KeyboardEvent","TouchEvent","dispatchEvent","DynamicComponentService","factoryResolver","createComponent","component","into","rootViewContainer","resolveComponentFactory","parentInjector","insertComponent","componentRef","compId","random","pow","location","setAttribute","instance","id","insert","hostView","Injectable","ComponentFactoryResolver","NguiInviewPageComponent","renderer","cdRef","outView","itemsBackup","restoreItems","items","from","undefined","setStyle","contentsEl","detectChanges","querySelector","console","log","destroyed","emptyItems","height","getBoundingClientRect","setItems","Renderer2","ChangeDetectorRef","NguiVirtualListComponent","dynamicComponentService","cdr","selected","escaped","bottomInview","_focused","inviewPages","ngAfterViewInit","addAnInviewPageToPages","isListLoading","inviewPage","pagesRef","addList","ViewChild","read","ViewContainerRef","NoMatchFound","html","NoneSelect","NguiAutocompleteComponent","_super","apply","minInputChars","blankOption","noMatchItem","input","listItem","__","constructor","__extends","defineProperty","selectedOrEscaped","_selectedFromList","_escapedFromList","focused","minChars","inputEl","document","for","positionThisUnderInputEl","fromEvent","subscribe","onInputElKeyup","addEventListener","onInputElFocused","onInputElBlurred","onSelected","onEscaped","focus","_lastSelected","_orgInputValue","_prevInputValue","setFocused","clearList","compRef","destroy","key","firstList","addAutocompleteList","isReady","clearTimeout","_acTimer","setTimeout","addMorePages","elType","val","_focusTimer","thisEl","thisInputElBCR","top","window","scrollY","left","width","blankItem","allItems","x","NguiListItemDirective","viewContainer","listDirective","virtualListComponent","autocompleteComponent","parentListComp","Error","object","clear","innerHTML","keydown","thisListItem","keyCode","which","parentListEl","listItems","querySelectorAll","listItemNdx","indexOf","nextListItem","prevListItem","keyup","mousedown","blurred","NguiListDirective","decorators","Optional","Host","HostListener","NguiInviewModule","entryComponents","NguiHighlightPipe","transform","text","search","ret","re","RegExp","replace","Pipe","name","konsole","toLog","param","restrictionNum","LOG_LEVELS","logLevel","setLogLevel","toUpperCase","logLevels","keys","sessionStorage","setItem","debug","_i","info","warn","ALL","parseInt","DEBUG","LOG","INFO","WARN","ERROR","NONE","providers","NguiListModule","NguiUtilsModule"],"mappings":"6YAwDE,SAAAA,EACcC,EACqBC,GADrBC,KAAAF,QAAAA,EACqBE,KAAAD,WAAAA,EApB1BC,KAAAC,gBAA4C,CAACC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAOrFF,KAAAG,aAAc,EAEbH,KAAAI,OAAkD,IAAIC,EAAAA,aACtDL,KAAAM,UAAqD,IAAID,EAAAA,aAInEL,KAAAO,UAAW,EAEXP,KAAAQ,kBAAmB,SAQnBX,EAAAY,UAAAC,SAAA,WACMV,KAAKW,UACPX,KAAKC,gBAAkBD,KAAKW,SAG1BC,EAAAA,kBAAkBZ,KAAKD,cACzBC,KAAKa,SAAW,IAAIC,qBAAqBd,KAAKe,gBAAgBC,KAAKhB,MAAOA,KAAKC,iBAC/ED,KAAKa,SAASI,QAAQjB,KAAKF,QAAQoB,iBAKvCrB,EAAAY,UAAAU,YAAA,WACEnB,KAAKa,SAASO,cAIhBvB,EAAAY,UAAAM,gBAAA,SAAgBM,GAAhB,IAAAC,EAAAtB,KACEqB,EAAQE,SAAQ,SAACC,GACXA,EAAsB,gBACxBF,EAAKf,UAAW,EAChBe,EAAKG,qBAAqBD,GAC1BF,EAAKlB,OAAOsB,KAAKF,IAEjBF,EAAKhB,UAAUoB,KAAKF,OAS1B3B,EAAAY,UAAAgB,qBAAA,SAAqBD,GACnB,GAAKxB,KAAKG,cAAeH,KAAKQ,mBAAoBR,KAAKI,OAAOuB,UAAUC,OAIxE,GAAIJ,EAAMK,kBAAoB,GAAK,CACjC,IAAMC,EAAiC,KAAvBN,EAAMK,kBAEhBE,EAAS,SADF,GAAgD,EAA3CC,KAAKC,MAAgC,GAA1BT,EAAMK,oBACR,MAC3BK,OAAOC,OAAOX,EAAMY,OAAOC,MAAO,CAACP,QAAOA,EAAEC,OAAMA,SAElDP,EAAMY,OAAOC,MAAMP,QAAU,EAC7BN,EAAMY,OAAOC,MAAMN,OAAS,QAE5B/B,KAAKQ,kBAAmB,4BApF7B8B,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,cACVC,SAAU,iHAID,wEA5BPC,EAAAA,2CAuDKC,EAAAA,OAAMJ,KAAA,CAACK,EAAAA,oDAvBbC,EAAAA,aAAYN,KAAA,CAACO,EAAAA,YAAa,CAACC,QAAQ,6BAGnCC,EAAAA,uBAGAA,EAAAA,2BAIAA,EAAAA,sBAEAC,EAAAA,0BACAA,EAAAA,2BCfD,SAAAC,EACapD,EACsBC,GADtBC,KAAAF,QAAAA,EACsBE,KAAAD,WAAAA,EAZ1BC,KAAAC,gBAA4C,CAACC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAMpFF,KAAAmD,WAAsD,IAAI9C,EAAAA,aAE1DL,KAAAoD,YAAuD,IAAI/C,EAAAA,oBAQrE6C,EAAAzC,UAAAC,SAAA,WACMV,KAAKW,UACPX,KAAKC,gBAAkBD,KAAKW,SAG1BC,EAAAA,kBAAkBZ,KAAKD,cACzBC,KAAKa,SAAW,IAAIC,qBAAqBd,KAAKe,gBAAgBC,KAAKhB,MAAOA,KAAKC,iBAC/ED,KAAKa,SAASI,QAAQjB,KAAKF,QAAQoB,iBAKvCgC,EAAAzC,UAAAU,YAAA,WACMP,EAAAA,kBAAkBZ,KAAKD,aAAeC,KAAKa,UAC7Cb,KAAKa,SAASO,cAQlB8B,EAAAzC,UAAAM,gBAAA,SAAgBM,GAAhB,IAAAC,EAAAtB,KACEqB,EAAQE,SAAQ,SAACC,GACXA,EAAsB,eACxBF,EAAK6B,WAAWzB,KAAKF,GAErBF,EAAK8B,YAAY1B,KAAKF,gCAlD7B6B,EAAAA,UAASd,KAAA,CAAC,CACPC,SAAU,2EAfVE,EAAAA,2CAiCKC,EAAAA,OAAMJ,KAAA,CAACK,EAAAA,2DAZbI,EAAAA,uBAGAA,EAAAA,0BAGAC,EAAAA,4BAEAA,EAAAA,gBCXH,iCAbCK,EAAAA,SAAQf,KAAA,CAAC,CACRgB,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZ5D,EACAqD,GAEFQ,QAAS,CACP7D,EACAqD;;;;;;;;;;;;;;;ACDJ,IAAIS,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBzB,OAAO4B,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,MACpDL,EAAGC,IAqFC3B,OAAOiC,gBAwBpBC,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAgBA,KAAM,MAAQI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,WAEzB,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,SAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,WAGKM,IACZ,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUzD,OAAQgD,IAC3CE,EAAKA,EAAGQ,OAAOlB,EAAOiB,UAAUT,KACpC,OAAOE,EA8Cc5C,OAAOiC,gBC7LhBoB,EAAUC,EAAiBC,EAAc9E,GACvD,IAAI+E,EASJ,YAVuD,IAAA/E,IAAAA,EAAA,IAE1C,UAAT8E,GAAoBA,EAAKE,MAAM,UACjCD,EAAQ,IAAIE,WAAWH,EAAM9E,GACpB8E,EAAKE,MAAM,QACpBD,EAAQ,IAAIG,cAAcJ,EAAM9E,GACvB8E,EAAKE,MAAM,YACpBD,EAAQ,IAAII,WAAWL,EAAM9E,IAGxB6E,EAAGO,cAAcL,oBC4BxB,SAAAM,EAA8CC,GAC5CjG,KAAKiG,gBAAkBA,SASzBD,EAAAvF,UAAAyF,gBAAA,SAAgBC,EAAgBC,GAI9B,OAHApG,KAAKqG,kBAAoBD,GAAQpG,KAAKqG,kBACtBrG,KAAKiG,gBAAgBK,wBAAwBH,GAE9ChC,OAAOnE,KAAKqG,kBAAkBE,iBAM/CP,EAAAvF,UAAA+F,gBAAA,SAAgBC,GACd,IAAMC,EAAS,aAAY1E,KAAKC,MAAMD,KAAK2E,SAAW3E,KAAA4E,IAAA,GAAM,IAAK5E,KAAA4E,IAAA,GAAM,IAMvE,OALAH,EAAaI,SAAS3F,cAAc4F,aAAa,KAAMJ,GACvDD,EAAaM,SAASC,GAAKN,EAE3B1G,KAAKqG,kBAAkBY,OAAOR,EAAaS,UAEpCT,EAAaM,mCAlCvBI,EAAAA,+EAOcxE,EAAAA,OAAMJ,KAAA,CAAC6E,EAAAA,gDC8BpB,SAAAC,EACUvH,EACAwH,EACAC,GAFAvH,KAAAF,QAAAA,EACAE,KAAAsH,SAAAA,EACAtH,KAAAuH,MAAAA,EAbVvH,KAAAwH,SAAU,EAEVxH,KAAAyH,YAA0B,UAiB1BJ,EAAA5G,UAAAiH,aAAA,WACM1H,KAAKwH,UACPxH,KAAKwH,SAAU,EACfxH,KAAK2H,MAAQ3D,MAAM4D,KAAK5H,KAAKyH,aAAe,IAC5CzH,KAAKyH,iBAAcI,EACnB7H,KAAKsH,SAASQ,SAAS9H,KAAK+H,WAAY,cAAUF,GAClD7H,KAAKuH,MAAMS,kBAIfX,EAAA5G,UAAAC,SAAA,WACEV,KAAK+H,WACH/H,KAAKF,QAAQoB,cAAc+G,cAAc,0BAG7CZ,EAAA5G,UAAAU,YAAA,WACE+G,QAAQC,IAAI,mDACZnI,KAAKoI,WAAY,GAMnBf,EAAA5G,UAAA4H,WAAA,WACE,GAAIrI,KAAK2H,OAAS3H,KAAK+H,aAAe/H,KAAKwH,QAAS,CAElD,IAAMc,EAAStI,KAAKF,QAAQoB,cAAcqH,wBAAwBD,OAClEtI,KAAKsH,SAASQ,SAAS9H,KAAK+H,WAAY,SAAaO,EAAM,MAE3DtI,KAAKwH,SAAU,EACfxH,KAAKyH,YAAczD,MAAM4D,KAAK5H,KAAK2H,OAAS,IAC5C3H,KAAK2H,WAAQE,EACR7H,KAAKoI,WACRpI,KAAKuH,MAAMS,kBAKjBX,EAAA5G,UAAA+H,SAAA,SAASb,GACF3H,KAAKoI,YACRF,QAAQC,IAAI,oDAAqDR,GACjE3H,KAAK2H,MAAQA,EACb3H,KAAKuH,MAAMS,2CAjGhB1F,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAU,wrBAkBD,iFA5CTC,EAAAA,kBAIA+F,EAAAA,iBAPAC,EAAAA,uDAsDC7F,EAAAA,aAAYN,KAAA,CAACO,EAAAA,YAAa,CAACC,QAAQ,mBAInCC,EAAAA,0BCmCD,SAAA2F,EACSrB,EACAxH,EACA8I,EACAC,GAHA7I,KAAAsH,SAAAA,EACAtH,KAAAF,QAAAA,EACAE,KAAA4I,wBAAAA,EACA5I,KAAA6I,IAAAA,EAlCC7I,KAAA8I,SAA8B,IAAIzI,EAAAA,aAElCL,KAAA+I,QAA6B,IAAI1I,EAAAA,aAmBjCL,KAAAgJ,aAAkC,IAAI3I,EAAAA,aAIhDL,KAAAiJ,UAAW,EAGXjJ,KAAAkJ,YAA4D,UAU5DP,EAAAlI,UAAA0I,gBAAA,WACOnJ,KAAKyC,UAAazC,KAAKgJ,aAAarH,UAAUC,QACjDsG,QAAQ/C,MAAM,+DASlBwD,EAAAlI,UAAA2I,uBAAA,WACOpJ,KAAKqJ,cAYRnB,QAAQC,IAAI,0DAXZnI,KAAKqJ,eAAgB,EAErBrJ,KAAKsJ,WACHtJ,KAAK4I,wBAAwB1C,gBAAgBmB,EAAyBrH,KAAKuJ,UAC7EvJ,KAAK4I,wBAAwBpC,gBAAgBxG,KAAKsJ,YAElDtJ,KAAKsJ,WAAWvC,SAAStE,SAAWzC,KAAKyC,SACzCzC,KAAKkJ,YAAYjE,KAAKjF,KAAKsJ,YAE3BtJ,KAAKgJ,aAAatH,KAAK1B,QAO3B2I,EAAAlI,UAAA+I,QAAA,SAAQ7B,GACN3H,KAAKqJ,eAAgB,EACrBnB,QAAQC,IAAI,yDACZnI,KAAKsJ,WAAWvC,SAASyB,SAASb,6BA7FrCrF,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oBACVC,SAAU,oVAUD,iFA5CTgG,EAAAA,iBAHA/F,EAAAA,kBASOsD,SAbP0C,EAAAA,uDA0DCe,EAAAA,UAASlH,KAAA,CAAC,QAAS,CAAEmH,KAAMC,EAAAA,qCAE3B9G,EAAAA,aAAYN,KAAA,CAACO,EAAAA,+BAEbG,EAAAA,wBAEAA,EAAAA,6BAmBAA,EAAAA,UCrFH,IAAA2G,EAAA,WACE5J,KAAA6J,KAAO,kBCDTC,EAAA,WACE9J,KAAA6J,KAAO,wBCaT,SAAAE,IAAA,IAAAzI,EAAA0I,EAAAC,MAAAjK,KAAAoF,EAAAC,aAAArF,YAiBWsB,EAAA4I,cAAgB,EAChB5I,EAAA6I,YAAc,aACd7I,EAAA8I,YAAc,iBAMvB9I,EAAA2H,SAAgB,CAACoB,OAAO,EAAOC,UAAU,qBPhBjB1G,EAAGC,GAEzB,SAAS0G,IAAOvK,KAAKwK,YAAc5G,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEnD,UAAkB,OAANoD,EAAa3B,OAAOiC,OAAON,IAAM0G,EAAG9J,UAAYoD,EAAEpD,UAAW,IAAI8J,GOGpCE,CAAAV,EAAAC,GA0B7C9H,OAAAwI,eAAIX,EAAAtJ,UAAA,UAAO,KAAX,WACE,IAAMkK,EAAoB3K,KAAK4K,mBAAqB5K,KAAK6K,iBACnDC,EAAU9K,KAAKiJ,SAASoB,OAASrK,KAAKiJ,SAASqB,SAC/CS,EAAW/K,KAAKgL,QAAQ9F,MAAMtD,QAAU5B,KAAKkK,cAEnD,OAASS,GAAqBG,GAAWC,mCAG3ChB,EAAAtJ,UAAAC,SAAA,WACEV,KAAKgL,QAA6BC,SAAShD,cAAc,IAAMjI,KAAKkL,KACpElL,KAAKmL,2BAELC,EAAAA,UAAUpL,KAAKgL,QAAS,SAASK,UAAUrL,KAAKsL,eAAetK,KAAKhB,OACpEA,KAAKgL,QAAQO,iBAAiB,QAASvL,KAAKwL,iBAAiBxK,KAAKhB,OAClEA,KAAKgL,QAAQO,iBAAiB,OAAQvL,KAAKyL,iBAAiBzK,KAAKhB,OACjEA,KAAK8I,SAASuC,UAAUrL,KAAK0L,WAAW1K,KAAKhB,OAC7CA,KAAK+I,QAAQsC,UAAUrL,KAAK2L,UAAU3K,KAAKhB,QAG7C+J,EAAAtJ,UAAAiL,WAAA,SAAWxG,GACTlF,KAAK4K,mBAAoB,EACzB5K,KAAKgL,QAAQY,QACb5L,KAAK6L,cAAgB3G,EACrBlF,KAAK6I,IAAIb,gBACTE,QAAQC,IAAI,mDAAoDjD,IAGlE6E,EAAAtJ,UAAAkL,UAAA,WACE3L,KAAK6K,kBAAmB,EACxB7K,KAAKgL,QAAQY,QACR5L,KAAK6L,gBACR7L,KAAKgL,QAAQ9F,MAAQlF,KAAK8L,gBAE5B9L,KAAK6I,IAAIb,gBACTE,QAAQC,IAAI,oDAGd4B,EAAAtJ,UAAA+K,iBAAA,SAAiB9F,GACfwC,QAAQC,IAAI,yDAA0DzC,GACtE1F,KAAKqJ,eAAgB,OACc,IAAxBrJ,KAAK8L,iBACd9L,KAAK8L,eAAiB9L,KAAKgL,QAAQ9F,OAErClF,KAAK+L,gBAAkB/L,KAAKgL,QAAQ9F,MACpClF,KAAKgM,WAAW,SAAS,IAG3BjC,EAAAtJ,UAAAgL,iBAAA,WACEzL,KAAKgM,WAAW,SAAS,IAG3BjC,EAAAtJ,UAAAwL,UAAA,WACEjM,KAAKkJ,YAAY3H,SAAQ,SAAA2K,GACvBA,EAAQC,aAEVnM,KAAKkJ,YAAc,IAGrBa,EAAAtJ,UAAA6K,eAAA,SAAe5F,GACbwC,QAAQC,IAAI,qDAAsDzC,EAAM0G,KACxE,IAAMC,EAAYrM,KAAKF,QAAQoB,cAAc+G,cAAc,kBACzC,UAAdvC,EAAM0G,KAAiC,WAAd1G,EAAM0G,IAC7BC,EACF9G,EAAU8G,EAAW,QAAS,CAACD,IAAK1G,EAAM0G,MAE1CpM,KAAK2L,YAEiB,cAAdjG,EAAM0G,KAAqC,eAAd1G,EAAM0G,MAAyBC,EAE/C,YAAd3G,EAAM0G,KAAmC,cAAd1G,EAAM0G,KAEjCpM,KAAKgL,QAAQ9F,MAAMtD,QAAU5B,KAAKkK,gBAC3ClK,KAAK4K,mBAAoB,EACzB5K,KAAK6K,kBAAmB,EACxB7K,KAAKsM,uBANLD,EAAUT,SAWd7B,EAAAtJ,UAAA6L,oBAAA,WAAA,IAAAhL,EAAAtB,KACMA,KAAKuM,UACPC,aAAaxM,KAAKyM,UAClBzM,KAAKyM,SAAWC,YAAW,WACzBpL,EAAK+H,eAAgB,EACrB/H,EAAKyK,gBAAkBzK,EAAK0J,QAAQ9F,MACpC5D,EAAKuJ,kBAAmB,EACxBvJ,EAAKsJ,mBAAoB,EACzBtJ,EAAK2K,YACL3K,EAAK8H,2BACJ,OAKPW,EAAAtJ,UAAAkM,aAAA,WACM3M,KAAKkJ,YAAYtH,QACnB5B,KAAKoJ,0BAITW,EAAAtJ,UAAAuL,WAAA,SAAWY,EAA8BC,GAAzC,IAAAvL,EAAAtB,KACM6M,GACFL,aAAaxM,KAAK8M,aAClB9M,KAAKiJ,SAAW,CAACoB,OAAO,EAAOC,UAAU,GACzCtK,KAAKiJ,SAAS2D,IAAU,GAExB5M,KAAK8M,YAAcJ,YAAW,WAC5BpL,EAAK2H,SAAS2D,IAAU,EACxBtL,EAAKuH,IAAIb,kBACR,MAIP+B,EAAAtJ,UAAA0K,yBAAA,WACE,IAAM4B,EAAS/M,KAAKF,QAAQoB,cACtB8L,EAAiBhN,KAAKgL,QAAQzC,wBAC9B0E,EAAMD,EAAeC,IAAMD,EAAe1E,OAAS4E,OAAOC,QAEhEnN,KAAKsH,SAASQ,SAASiF,EAAQ,OAAWC,EAAeI,KAAI,MAC7DpN,KAAKsH,SAASQ,SAASiF,EAAQ,MAAUE,EAAG,MAC5CjN,KAAKsH,SAASQ,SAASiF,EAAQ,WAAeC,EAAeK,MAAK,OAIpEtD,EAAAtJ,UAAA+I,QAAA,SAAQ7B,GAKN,IAAIyC,EAJJlC,QAAQC,IAAI,0DACZnI,KAAKqJ,eAAgB,EAIrB,IAAIiE,EAAiB,GACW,IAA5BtN,KAAKkJ,YAAYtH,UACf5B,KAAKoK,aAAiBzC,GAA0B,IAAjBA,EAAM/F,OAG9B5B,KAAKmK,eACdmD,EAAY,IAAIxD,GACND,KAAO7J,KAAKmK,cAJtBC,EAAc,IAAIR,EAClB0D,EAAUzD,KAAO7J,KAAKoK,cAO1B,IAAMmD,EAAW,GAAGjI,OAAO8E,EAAakD,EAAW3F,GAAO5F,QAAO,SAAAyL,GAAK,OAAAA,KACtExN,KAAKsJ,WAAWvC,SAASyB,SAAS+E,GAClCvN,KAAK6I,IAAIb,oBAzKkCW,uBAf9CrG,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oBACVC,SAAU,sNAQD,qMAMRO,EAAAA,6BACAA,EAAAA,2BACAA,EAAAA,2BACAA,EAAAA,wBAGAH,EAAAA,aAAYN,KAAA,CAACO,EAAAA,sBCpBd,SAAmBhD,GAAAE,KAAAF,QAAAA,EAJTE,KAAA8I,SAA8B,IAAIzI,EAAAA,aAElCL,KAAA+I,QAA6B,IAAI1I,EAAAA,kCAP5CgD,EAAAA,UAASd,KAAA,CAAC,CACTC,SAAU,yDANVE,EAAAA,gDAUCO,EAAAA,wBAEAA,EAAAA,2BCeD,SAAAwK,EACUjI,EACA8B,EACAoG,EACoBC,EACAC,EACAC,GALpB7N,KAAAwF,GAAAA,EACAxF,KAAAsH,SAAAA,EACAtH,KAAA0N,cAAAA,EACoB1N,KAAA2N,cAAAA,EACA3N,KAAA4N,qBAAAA,EACA5N,KAAA6N,sBAAAA,SAG9BJ,EAAAhN,UAAAC,SAAA,WAGE,GAFAV,KAAKsH,SAASR,aAAa9G,KAAKwF,GAAGtE,cAAe,WAAY,KAC9DlB,KAAK8N,eAAiB9N,KAAK2N,eAAiB3N,KAAK4N,sBAAwB5N,KAAK6N,uBACzE7N,KAAK8N,eACR,MAAMC,MAAM,0FAET/N,KAAKgO,kBAAkBlE,GAAgB9J,KAAKgO,kBAAkBpE,KACjE5J,KAAK0N,cAAcO,QACnBjO,KAAKwF,GAAGtE,cAAcgN,UAAYlO,KAAKgO,OAAOnE,OAKb4D,EAAAhN,UAAA0N,QAAA,SAAQzI,GAC3C,IAAM0I,EAAepO,KAAKwF,GAAGtE,cACvBmN,EAAU3I,EAAM4I,OAAS5I,EAAM2I,QAC/BE,EAAevO,KAAK8N,eAAehO,QAAQoB,cAC3CsN,EACFxK,MAAM4D,KAAK2G,EAAaE,iBAAiB,mBACvCC,EAAcF,EAAUG,QAAQP,GAChCQ,EAAeJ,EAAUE,EAAc,IAAMF,EAAU,GACvDK,EAAeL,EAAUE,EAAc,IAAMF,EAAUA,EAAU5M,OAAS,GAEhF,OAAQyM,GACR,KAAK,GAAI,KAAK,GACZQ,EAAajD,QACb,MACF,KAAK,GAAI,KAAK,GACZgD,EAAahD,UAQkB6B,EAAAhN,UAAAqO,MAAA,SAAMpJ,GACvC,OAAQA,EAAM0G,KACd,IAAK,QACHpM,KAAK8N,eAAehF,SAASpH,KAAK1B,KAAKgO,QACvC,MACF,IAAK,SACHhO,KAAK8N,eAAe/E,QAAQrH,SAOG+L,EAAAhN,UAAAsO,UAAA,WACjC/O,KAAK8N,eAAehF,SAASpH,KAAK1B,KAAKgO,SAGNP,EAAAhN,UAAAqK,QAAA,WAC7B9K,KAAK8N,eAA2B,YAClC9N,KAAK8N,eAA2B,WAAE,YAAY,IAIhBL,EAAAhN,UAAAuO,QAAA,WAC5BhP,KAAK8N,eAA2B,YAClC9N,KAAK8N,eAA2B,WAAE,YAAY,6BAhFnDzK,EAAAA,UAASd,KAAA,CAAC,CACTC,SAAU,8DAlBVE,EAAAA,kBAMA+F,EAAAA,iBACAkB,EAAAA,wBAGOsF,EAAiBC,WAAA,CAAA,CAAAzJ,KAqBrB0J,EAAAA,UAAQ,CAAA1J,KAAI2J,EAAAA,cApBRzG,EAAwBuG,WAAA,CAAA,CAAAzJ,KAqB5B0J,EAAAA,UAAQ,CAAA1J,KAAI2J,EAAAA,cApBRrF,EAAyBmF,WAAA,CAAA,CAAAzJ,KAqB7B0J,EAAAA,UAAQ,CAAA1J,KAAI2J,EAAAA,0CAZdpM,EAAAA,MAAKT,KAAA,CAAC,yBA4BN8M,EAAAA,aAAY9M,KAAA,CAAC,UAAW,CAAC,0BAuBzB8M,EAAAA,aAAY9M,KAAA,CAAC,QAAS,CAAC,8BAavB8M,EAAAA,aAAY9M,KAAA,CAAC,QAAS,CAAC,4BAIvB8M,EAAAA,aAAY9M,KAAA,CAAC,QAAS,CAAC,4BAMvB8M,EAAAA,aAAY9M,KAAA,CAAC,OAAQ,CAAC,oBCjEzB,iCArBCe,EAAAA,SAAQf,KAAA,CAAC,CACRgB,QAAS,CACPC,EAAAA,aACA8L,GAEF7L,aAAc,CACZsG,EACA1C,EACA4H,EACAxB,EACA9E,GAEFjF,QAAS,CACPqG,EACA1C,EACA4H,EACAxB,EACA9E,GAEF4G,gBAAiB,CAAClI,wBC3BpB,SAAAmI,YACEA,EAAA/O,UAAAgP,UAAA,SAAUC,EAAcC,GACtB,IAAIC,EAAMF,EACV,GAAIC,EAAQ,CACV,IAAME,EAAM,IAAIC,OAAOH,EAAQ,MAC/BC,EAAMF,EAAKK,QAAQF,GAAI,SAAAlK,GAAS,MAAA,gCAAgCA,EAAK,aAGvE,OAAOiK,4BATVI,EAAAA,KAAIzN,KAAA,CAAC,CAAE0N,KAAM,qCCMd,SAAAC,YAgBSA,EAAAC,MAAP,SAAaC,GACX,IAAMC,EAAiBrQ,KAAKsQ,WAAWtQ,KAAKuQ,UAG5C,OAFoBvQ,KAAKsQ,WAAWF,GAEfC,GAIhBH,EAAAM,YAAP,SAAmBD,GACjBA,EAAWA,EAASE,cACpB,IAAMC,EAAYxO,OAAOyO,KAAK3Q,KAAKsQ,YAC/BI,EAAU/B,QAAQ4B,IAAa,GAC7BrD,QAAUA,OAAO0D,gBACnB1D,OAAO0D,eAAeC,QAAQ,oBAAqBN,GAErDvQ,KAAKuQ,SAAWA,GAEhBrI,QAAQ/C,MAAM,8CAA8CuL,IAKzDR,EAAAY,MAAP,eAAa,IAAAvO,EAAA,GAAAwO,EAAA,EAAAA,EAAA1L,UAAAzD,OAAAmP,IAAAxO,EAAAwO,GAAA1L,UAAA0L,GACP/Q,KAAKmQ,MAAM,UAEXjI,QAAQ4I,MAAM7G,MAAM/B,QAAS7C,YAK5B6K,EAAA/H,IAAP,eAAW,IAAA5F,EAAA,GAAAwO,EAAA,EAAAA,EAAA1L,UAAAzD,OAAAmP,IAAAxO,EAAAwO,GAAA1L,UAAA0L,GACL/Q,KAAKmQ,MAAM,QACbjI,QAAQC,IAAI8B,MAAM/B,QAAS7C,YAKxB6K,EAAAc,KAAP,eAAY,IAAAzO,EAAA,GAAAwO,EAAA,EAAAA,EAAA1L,UAAAzD,OAAAmP,IAAAxO,EAAAwO,GAAA1L,UAAA0L,GACN/Q,KAAKmQ,MAAM,SAEXjI,QAAQ8I,KAAK/G,MAAM/B,QAAS7C,YAK3B6K,EAAAe,KAAP,eAAY,IAAA1O,EAAA,GAAAwO,EAAA,EAAAA,EAAA1L,UAAAzD,OAAAmP,IAAAxO,EAAAwO,GAAA1L,UAAA0L,GACN/Q,KAAKmQ,MAAM,SACbjI,QAAQ+I,KAAKhH,MAAM/B,QAAS7C,YAKzB6K,EAAA/K,MAAP,eAAa,IAAA5C,EAAA,GAAAwO,EAAA,EAAAA,EAAA1L,UAAAzD,OAAAmP,IAAAxO,EAAAwO,GAAA1L,UAAA0L,GACP/Q,KAAKmQ,MAAM,UACbjI,QAAQ/C,MAAM8E,MAAM/B,QAAS7C,iBApE1B6K,EAAAI,WAAa,CAClBY,IAAOC,SAAS,QAAS,GACzBC,MAAOD,SAAS,QAAS,GACzBE,IAAOF,SAAS,QAAS,GACzBG,KAAOH,SAAS,QAAS,GACzBI,KAAOJ,SAAS,QAAS,GACzBK,MAAOL,SAAS,QAAS,GACzBM,KAAON,SAAS,QAAS,IAIpBjB,EAAAK,SAAW,aCJpB,iCARCjN,EAAAA,SAAQf,KAAA,CAAC,CACRgB,QAAS,CACPC,EAAAA,cAEFC,aAAc,CAAC+L,GACf9L,QAAS,CAAC8L,GACVkC,UAAW,CAAC1L,aCEd,iCAZC1C,EAAAA,SAAQf,KAAA,CAAC,CACRgB,QAAS,CACP+L,EACAqC,EACAC,GAEFlO,QAAS,CACP4L,EACAqC,EACAC","sourcesContent":["import {\r\n    Component,\r\n    ContentChild,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    PLATFORM_ID,\r\n    TemplateRef\r\n} from '@angular/core';\r\n\r\nimport {isPlatformBrowser} from '@angular/common';\r\n\r\n/**\r\n * An element that listens to viewport positioning and fires inView and notInview events\r\n * ### example\r\n * ```ts\r\n * <ngui-inview [observerOptions]=\"myObserverOptions\" (inview)=\"doA()\" (notInview)=\"doB()\">\r\n *   <img *ngIf src=\"https://picsum.photos/800/300?image=1>\r\n * </ngui-inview>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-inview',\r\n  template: `\r\n        <ng-container *ngIf=\"isInview\" [ngTemplateOutlet]=\"template\">\r\n        </ng-container>\r\n    `,\r\n  styles: [':host {display: block;}']\r\n})\r\nexport class NguiInviewComponent implements OnInit, OnDestroy {\r\n    /** <ng-template> reference */\r\n  @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>;\r\n\r\n    /** IntersectionObserver options */\r\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\r\n    /** Deprecated config. Use `observerOptions` instead.\r\n     * @deprecated Use `observerOptions` instead. */\r\n  @Input() options: any;\r\n  /** Controls whether blur effect is applied to a component with less than 80% intersection ratio.\r\n   * Only applies when there are no \"inview\" event handlers defined.\r\n   **/\r\n  @Input() blurEnabled = true;\r\n\r\n  @Output() inview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\r\n  @Output() notInview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\r\n\r\n  observer: IntersectionObserver;\r\n    /** indicates that this element is in viewport */\r\n  isInview = false;\r\n    /** indicates that this element is 80% in viewport. Used by the default callback */\r\n  once80PctVisible = false;\r\n\r\n  constructor(\r\n        private element: ElementRef,\r\n        @Inject(PLATFORM_ID) private platformId: any) {\r\n  }\r\n\r\n    /** Starts IntersectionObserver */\r\n  ngOnInit(): void {\r\n    if (this.options) {\r\n      this.observerOptions = this.options;\r\n    }\r\n\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\r\n      this.observer.observe(this.element.nativeElement);\r\n    }\r\n  }\r\n\r\n    /** stop IntersectionObserver */\r\n  ngOnDestroy(): void {\r\n    this.observer.disconnect();\r\n  }\r\n\r\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\r\n  handleIntersect(entries): void {\r\n    entries.forEach((entry: IntersectionObserverEntry) => {\r\n      if (entry['isIntersecting']) {\r\n        this.isInview = true;\r\n        this.defaultInviewHandler(entry);\r\n        this.inview.emit(entry);\r\n      } else {\r\n        this.notInview.emit(entry);\r\n      }\r\n    });\r\n  }\r\n\r\n    /**\r\n     * default intersection handler, which sets blur dependes on intersection ratio\r\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\r\n     */\r\n  defaultInviewHandler(entry): any {\r\n    if (!this.blurEnabled || this.once80PctVisible || this.inview.observers.length) {\r\n      return;\r\n    }\r\n\r\n    if (entry.intersectionRatio < 0.8) {\r\n      const opacity = entry.intersectionRatio * (1 / 0.8);\r\n      const blur = 20 - Math.floor(entry.intersectionRatio * 10) * 4;\r\n      const filter = `blur(${blur}px)`;\r\n      Object.assign(entry.target.style, {opacity, filter});\r\n    } else {\r\n      entry.target.style.opacity = 1;\r\n      entry.target.style.filter = 'unset';\r\n\r\n      this.once80PctVisible = true;\r\n    }\r\n  }\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    PLATFORM_ID\r\n} from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\n\r\n/**\r\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\r\n */\r\n@Directive({\r\n    selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\r\n})\r\nexport class NguiInviewDirective implements OnInit, OnDestroy {\r\n  observer: IntersectionObserver;\r\n\r\n    /** IntersectionObserver options */\r\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\r\n    /** Deprecated config. Use `observerOptions` instead.\r\n     * @deprecated Use `observerOptions` instead. */\r\n  @Input() options: any;\r\n\r\n    /** Event that will be fired when in viewport */\r\n  @Output() nguiInview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\r\n    /** Event that will be fired when out of  viewport */\r\n  @Output() nguiOutview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\r\n\r\n  constructor(\r\n        public element: ElementRef,\r\n        @Inject(PLATFORM_ID) private platformId: any) {\r\n  }\r\n\r\n    /** Starts IntersectionObserver */\r\n  ngOnInit(): void {\r\n    if (this.options) {\r\n      this.observerOptions = this.options;\r\n    }\r\n\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\r\n      this.observer.observe(this.element.nativeElement);\r\n    }\r\n  }\r\n\r\n    /** Stops IntersectionObserver */\r\n  ngOnDestroy(): void {\r\n    if (isPlatformBrowser(this.platformId) && this.observer) {\r\n      this.observer.disconnect();\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Fires (nguiInview) event when this element is in viewport\r\n     *  and fires (nguiOutview) event when this element is not in viewport\r\n     */\r\n  handleIntersect(entries): void {\r\n    entries.forEach((entry: IntersectionObserverEntry) => {\r\n      if (entry['isIntersecting']) {\r\n        this.nguiInview.emit(entry);\r\n      } else {\r\n        this.nguiOutview.emit(entry);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NguiInviewComponent} from './src/ngui-inview.component';\r\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\r\n\r\nexport {NguiInviewComponent, NguiInviewDirective};\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NguiInviewComponent,\r\n    NguiInviewDirective\r\n  ],\r\n  exports: [\r\n    NguiInviewComponent,\r\n    NguiInviewDirective\r\n  ]\r\n})\r\nexport class NguiInviewModule {\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\r\n * fire the given event with options on the element\r\n * @example\r\n * fireEvent(el, 'click');\r\n * fireEvent(el, 'keypress', {key: 'Enter'});\r\n */\r\nexport function fireEvent(el: HTMLElement, type: string, options: any = {}): boolean {\r\n  let event;\r\n  if (type === 'click' || type.match(/^mouse/)) {\r\n    event = new MouseEvent(type, options);\r\n  } else if (type.match(/^key/)) {\r\n    event = new KeyboardEvent(type, options);\r\n  } else if (type.match(/^touch/)) {\r\n    event = new TouchEvent(type, options);\r\n  }\r\n\r\n  return el.dispatchEvent(event);\r\n}\r\n","/**\r\n * Insert a component dynamically using a service\r\n *\r\n * ### Example\r\n * ```ts\r\n * import { DynamicComponentService } from './dynamic.component.service';\r\n * import { MyDynamicComponent } from './my-1.component';\r\n *\r\n * @Component({\r\n *   template: ` ... <div #dymamic></div>`\r\n * })\r\n * export class MyComponent {\r\n *   @ViewChild('dynamic', {read:ViewContainerRef}) vcr: ViewContainerRef;\r\n *\r\n *   constructor(public dcs: DynamicComponentService) {}\r\n *\r\n *   insertComp() {\r\n *     let compRef = this.dcs.createComponent(MyDynamicComponent, this.vcr);\r\n *     ths.dcs.insertComonent(cmpRef);\r\n *     compRef.instance.items = [1,2,3];              // dealing with @input\r\n *     compRef.instance.output$.subscribe(val => {}); // dealing with @output\r\n *   }\r\n * }\r\n * ```\r\n */\r\nimport {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\n/**\r\n * Provide service to add or remove component dynamically\r\n */\r\n@Injectable()\r\nexport class DynamicComponentService {\r\n  /** used to create a factory from a component class */\r\n  factoryResolver: ComponentFactoryResolver;\r\n  /** defines where a dynamic components insert into */\r\n  rootViewContainer: ViewContainerRef;\r\n\r\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\r\n    this.factoryResolver = factoryResolver;\r\n  }\r\n\r\n  /**\r\n   * returns component reference\r\n   * The reason to seperate `createCompnent` and `insertComponent` is\r\n   * to allow some actions before we insert into a hostView.\r\n   * e.g styling, setting attributes, etc\r\n   */\r\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef<any> {\r\n    this.rootViewContainer = into || this.rootViewContainer;\r\n    const factory = this.factoryResolver.resolveComponentFactory(component);\r\n\r\n    return factory.create(this.rootViewContainer.parentInjector);\r\n  }\r\n\r\n  /**\r\n   * insert component\r\n   */\r\n  insertComponent(componentRef: ComponentRef<any>): Component {\r\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\r\n    componentRef.location.nativeElement.setAttribute('id', compId);\r\n    componentRef.instance.id = compId;\r\n\r\n    this.rootViewContainer.insert(componentRef.hostView);\r\n\r\n    return componentRef.instance;\r\n  }\r\n\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\n/**\r\n * A block of component that listens to inView and outView events,\r\n * so that it empties contents when out of view after backup items\r\n * and restores the contents when in view\r\n *\r\n * ### example\r\n * ```ts\r\n * <ngui-inview-page [items]=\"items\">\r\n *   <ng-template let-items=\"items\">\r\n *     <div *ngIf=\"items else noItems\">\r\n *       <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n *     </div>\r\n *   </ng-template>\r\n * </ngui-inview-page>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-inview-page',\r\n  template: `\r\n    <div class=\"inview-page contents\"\r\n      (nguiInview)=\"restoreItems()\"\r\n      (nguiOutview)=\"emptyItems()\">\r\n      <!-- add blank ngui-list-item by condition  -->\r\n      <!-- no match found ngui-list-item by condition -->\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"template||defaultTemplate\"\r\n        [ngTemplateOutletContext]=\"{items: items, outView: outView}\">\r\n      </ng-container>\r\n      <div *ngIf=\"outView\">{{ itemsBackup.length }} items hidden</div>\r\n    </div>\r\n\r\n    <ng-template #defaultTemplate>\r\n      <div *ngIf=\"!items\"> Error: requires [items] </div>\r\n      <div *ngIf=\"!template\"> Error: requires &lt;ng-template></div>\r\n    </ng-template>\r\n  `,\r\n  styles: [`\r\n    :host {display: block}\r\n  `]\r\n})\r\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\r\n\r\n  /** Allow users to change the contents */\r\n  @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>;\r\n  // @Input('template') template: TemplateRef<any>;\r\n\r\n  /** List of elements that are used to render this element */\r\n  @Input() items: Array<any>;\r\n\r\n  /** IntersectionObserver options */\r\n  options: any;\r\n  /** Indicates that the page of out of viewport */\r\n  outView = false;\r\n  /** The copy of items. This is set when this element is out of viewport */\r\n  itemsBackup: Array<any> = [];\r\n  /**\r\n   * The first element of this component.\r\n   * The height of it remains the same even when items get empty out.\r\n   */\r\n  contentsEl: HTMLElement;\r\n  destroyed: boolean;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    private cdRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  /**\r\n   * Restore items when in viewport, so that elements are rendered\r\n   */\r\n  restoreItems(): void {\r\n    if (this.outView) {\r\n      this.outView = false;\r\n      this.items = Array.from(this.itemsBackup || []);\r\n      this.itemsBackup = undefined;\r\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.contentsEl =\r\n      this.element.nativeElement.querySelector('.inview-page.contents');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log('NguiInviewPageComponent.ngOnDestroy() is called');\r\n    this.destroyed = true;\r\n  }\r\n\r\n  /**\r\n   * Empty items when not in viewport, so that elements are not rendered\r\n   */\r\n  emptyItems(): void {\r\n    if (this.items && this.contentsEl && !this.outView) {\r\n      // set height before emptying contents\r\n      const height = this.element.nativeElement.getBoundingClientRect().height;\r\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\r\n\r\n      this.outView = true;\r\n      this.itemsBackup = Array.from(this.items || []);\r\n      this.items = undefined;\r\n      if (!this.destroyed) {\r\n        this.cdRef.detectChanges();\r\n      }\r\n    }\r\n  }\r\n\r\n  setItems(items: Array<any>): void {\r\n    if (!this.destroyed) {\r\n      console.log('NguiInviewPageComponent.setItems() is called with', items);\r\n      this.items = items;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentRef,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\r\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\r\n\r\n/**\r\n * Virtual List\r\n *\r\n * The `<ngui-inview ..>` inserts <ngui-inview-page> into\r\n * `<div #pages>` when it is in viewport\r\n * When it's inserted, it will be pushed down, which makes it out of viewport.\r\n * User scrolls down to see the bottom of the list,\r\n * then it will insert another `<ngui-inview-page>` again.\r\n *\r\n * <ngui-inview-page> listens to (nguiInview) and (nguiOutview) events,\r\n * when <ngui-inview-page> is out of view port, it empties out the contents.\r\n * and it restores back the contents when it is in viewport again.\r\n *\r\n * ### example\r\n * ```ts\r\n * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\r\n *   <ng-template let-items=\"items\">\r\n *     <div *ngIf=\"!items\">Loading</div>\r\n *     <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n *   </ng-template>\r\n * </ngui-virtual-list>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-virtual-list',\r\n  template: `\r\n    <div class=\"ngui-virtual-list\"\r\n      (focus)=\"_focused = true\"\r\n      (click)=\"_focused = true\">\r\n      <!-- hold multiple <ngui-inview-page> -->\r\n      <div #pages></div>\r\n      <!-- insert <ngui-inview-page> into #pages -->\r\n    </div>\r\n    <ngui-inview (inview)=\"addAnInviewPageToPages()\"></ngui-inview>\r\n  `,\r\n  styles: [`\r\n    :host {display: block}\r\n  `]\r\n})\r\nexport class NguiVirtualListComponent implements AfterViewInit {\r\n\r\n  /** the container NguiInviewPage will be inserted */\r\n  @ViewChild('pages', { read: ViewContainerRef }) pagesRef: ViewContainerRef;\r\n  /** Template of NguiInviewPage. Allow users to define their own template  */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n  /** Fired when child `<ngui-list-item>` is selected */\r\n  @Output() selected: EventEmitter<any> = new EventEmitter();\r\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\r\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Event fired when bottom of the virtual list is in view\r\n   * The handler of this event must call `$event.addItems(items: Array<any>)` to fill contents\r\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\r\n   *\r\n   * ### example\r\n   * ```ts\r\n   * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\r\n   *   <ng-template let-items=\"items\">\r\n   *     <div *ngIf=\"items else noItems\">\r\n   *        <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n   *     </div>\r\n   *     <ng-template #noItems>Loading</ng-template>\r\n   *   </ng-template>\r\n   * </ngui-virtual-list>\r\n   * ```\r\n   */\r\n  @Output() bottomInview: EventEmitter<any> = new EventEmitter();\r\n\r\n  /** The last NguiInviewPageComponent being inserted */\r\n  inviewPage: ComponentRef<NguiInviewPageComponent>;\r\n  _focused = false;\r\n  /** Indicates if a page is still loading */\r\n  isListLoading: boolean;\r\n  inviewPages: Array<ComponentRef<NguiInviewPageComponent>> = [];\r\n\r\n  constructor(\r\n    public renderer: Renderer2,\r\n    public element: ElementRef,\r\n    public dynamicComponentService: DynamicComponentService,\r\n    public cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /** Check if necessary input and output is provided */\r\n  ngAfterViewInit(): void {\r\n    if (!this.template || !this.bottomInview.observers.length) {\r\n      console.error('<ngui-virtual-list> requires [template] and {bottomInview)');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When the bottom is inview port, this function is called\r\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\r\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\r\n   */\r\n  addAnInviewPageToPages(): void {\r\n    if (!this.isListLoading) {\r\n      this.isListLoading = true;\r\n\r\n      this.inviewPage =\r\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\r\n      this.dynamicComponentService.insertComponent(this.inviewPage);\r\n\r\n      this.inviewPage.instance.template = this.template;\r\n      this.inviewPages.push(this.inviewPage);\r\n\r\n      this.bottomInview.emit(this); // fire event, so that user can load items\r\n    } else {\r\n      console.log('Already a page being inserted, skipping adding a page');\r\n    }\r\n  }\r\n\r\n  // set items of NguiInviewPageComponent\r\n  addList(items: Array<any>): void {\r\n    this.isListLoading = false;\r\n    console.log('>>>>>> NguiVirtualListComponent.addList() is called()');\r\n    this.inviewPage.instance.setItems(items);\r\n  }\r\n\r\n}\r\n","export class NoMatchFound {\r\n  html = 'No Match Found';\r\n}\r\n","export class NoneSelect {\r\n  html = 'Select';\r\n}\r\n","import {\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\nimport { fireEvent } from '../../ngui-utils/src/fire-event';\r\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\r\nimport { NoMatchFound } from './no-match-found';\r\nimport { NoneSelect } from './none-select';\r\nimport {fromEvent} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ngui-autocomplete',\r\n  template: `\r\n    <ng-container *ngIf=\"isReady\">\r\n      <div class=\"ngui-autocomplete\">\r\n        <div #pages></div>\r\n      </div>\r\n      <ngui-inview (inview)=\"addMorePages()\"></ngui-inview>\r\n    </ng-container>\r\n  `,\r\n  styles: [`\r\n    :host {position: absolute; background-color: #fff; max-height: 300px; overflow: auto}\r\n    .ngui-autocomplete { border: 1px solid #ccc; padding: 4px }\r\n  `]\r\n})\r\nexport class NguiAutocompleteComponent extends NguiVirtualListComponent implements OnInit {\r\n  @Input() for: string; // input tag id\r\n  @Input() minInputChars = 1;\r\n  @Input() blankOption = 'Select One';\r\n  @Input() noMatchItem = 'No Match Found';\r\n\r\n  /** Template of NguiInviewPage. Allow users to define their own template  */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n\r\n  inputEl: HTMLInputElement;\r\n  _focused: any = {input: false, listItem: false};\r\n  _focusTimer;\r\n  _acTimer;\r\n  _selectedFromList: boolean;\r\n  _escapedFromList: boolean;\r\n  _orgInputValue: string;\r\n  _prevInputValue: string;\r\n  _lastSelected: any;\r\n\r\n  /**\r\n   * returns autocomplete display condition\r\n   * autocompolete list is only visible\r\n   *   - when input element is focused or list element is focused\r\n   *   - when input value has enought characters\r\n   *   - and user just did not selected or escaped\r\n   */\r\n  get isReady(): boolean {\r\n    const selectedOrEscaped = this._selectedFromList || this._escapedFromList;\r\n    const focused = this._focused.input || this._focused.listItem;\r\n    const minChars = this.inputEl.value.length >= this.minInputChars;\r\n\r\n    return (!selectedOrEscaped && focused && minChars);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.inputEl = <HTMLInputElement> document.querySelector('#' + this.for); // tslint:disable-line\r\n    this.positionThisUnderInputEl();\r\n\r\n    fromEvent(this.inputEl, 'keyup').subscribe(this.onInputElKeyup.bind(this));\r\n    this.inputEl.addEventListener('focus', this.onInputElFocused.bind(this));\r\n    this.inputEl.addEventListener('blur', this.onInputElBlurred.bind(this));\r\n    this.selected.subscribe(this.onSelected.bind(this));\r\n    this.escaped.subscribe(this.onEscaped.bind(this));\r\n  }\r\n\r\n  onSelected(value): void {\r\n    this._selectedFromList = true;\r\n    this.inputEl.focus();\r\n    this._lastSelected = value;\r\n    this.cdr.detectChanges();    // for ChangeDetectionStrategy.OnPush\r\n    console.log('NguiAutoCompleteComponent.onSelected() is called', value);\r\n  }\r\n\r\n  onEscaped(): void {\r\n    this._escapedFromList = true;\r\n    this.inputEl.focus();\r\n    if (!this._lastSelected) {\r\n      this.inputEl.value = this._orgInputValue;\r\n    }\r\n    this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\r\n    console.log('NguiAutoCompleteComponent.onEscaped() is called');\r\n  }\r\n\r\n  onInputElFocused(event): void {\r\n    console.log('NguiAutoCompleteComponent.onInputElFocused() is called', event);\r\n    this.isListLoading = false;\r\n    if (typeof this._orgInputValue === 'undefined') {\r\n      this._orgInputValue = this.inputEl.value;\r\n    }\r\n    this._prevInputValue = this.inputEl.value;\r\n    this.setFocused('input', true);\r\n  }\r\n\r\n  onInputElBlurred(): void {\r\n    this.setFocused('input', false);\r\n  }\r\n\r\n  clearList(): void {\r\n    this.inviewPages.forEach(compRef => {\r\n      compRef.destroy();\r\n    });\r\n    this.inviewPages = [];\r\n  }\r\n\r\n  onInputElKeyup(event: KeyboardEvent): void {\r\n    console.log('NguiAutoCompleteComponent.onInputKeyup() is called', event.key);\r\n    const firstList = this.element.nativeElement.querySelector('ngui-list-item');\r\n    if (event.key === 'Enter' || event.key === 'Escape') {\r\n      if (firstList) {\r\n        fireEvent(firstList, 'keyup', {key: event.key});\r\n      } else {\r\n        this.onEscaped();\r\n      }\r\n    } else if ((event.key === 'ArrowDown' || event.key === 'ArrowRight') && firstList) {\r\n      firstList.focus();\r\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\r\n      //\r\n    } else if (this.inputEl.value.length >= this.minInputChars) {\r\n      this._selectedFromList = false;\r\n      this._escapedFromList = false;\r\n      this.addAutocompleteList();\r\n    }\r\n  }\r\n\r\n  /** Complete the first page of autocomplete */\r\n  addAutocompleteList(): void {\r\n    if (this.isReady) {\r\n      clearTimeout(this._acTimer);\r\n      this._acTimer = setTimeout(() => {\r\n        this.isListLoading = false; // ???????/\r\n        this._prevInputValue = this.inputEl.value;\r\n        this._escapedFromList = false;\r\n        this._selectedFromList = false;\r\n        this.clearList();\r\n        this.addAnInviewPageToPages();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  /** Complete after the first page of autocomplete when it scrolls to the bottom */\r\n  addMorePages(): void {\r\n    if (this.inviewPages.length) {\r\n      this.addAnInviewPageToPages();\r\n    }\r\n  }\r\n\r\n  setFocused(elType: 'input' | 'listItem', val: boolean): void {\r\n    if (val) {\r\n      clearTimeout(this._focusTimer);\r\n      this._focused = {input: false, listItem: false};\r\n      this._focused[elType] = true;\r\n    } else {\r\n      this._focusTimer = setTimeout(() => {\r\n        this._focused[elType] = false;\r\n        this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  positionThisUnderInputEl(): void {\r\n    const thisEl = this.element.nativeElement;\r\n    const thisInputElBCR = this.inputEl.getBoundingClientRect();\r\n    const top = thisInputElBCR.top + thisInputElBCR.height + window.scrollY;\r\n\r\n    this.renderer.setStyle(thisEl, 'left', `${thisInputElBCR.left}px`);\r\n    this.renderer.setStyle(thisEl, 'top', `${top}px`);\r\n    this.renderer.setStyle(thisEl, 'minWidth', `${thisInputElBCR.width}px`);\r\n  }\r\n\r\n  // set items of NguiInviewPageComponent\r\n  addList(items: Array<any>): void {\r\n    console.log('>>>>>> NguiAutocompleteComponent.addList() is called()');\r\n    this.isListLoading = false;\r\n\r\n    // TODO: ........ for 1st page only, show no match found or blank option\r\n    let noMatchItem: any;\r\n    let blankItem: any = {};\r\n    if (this.inviewPages.length === 1) {\r\n      if (this.noMatchItem && (!items || items.length === 0)) { // add no match item\r\n        noMatchItem = new NoMatchFound();\r\n        blankItem.html = this.noMatchItem;\r\n      } else if (this.blankOption) {\r\n        blankItem = new NoneSelect();\r\n        blankItem.html = this.blankOption;\r\n      }\r\n    }\r\n\r\n    const allItems = [].concat(noMatchItem, blankItem, items).filter(x => x);\r\n    this.inviewPage.instance.setItems(allItems);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'ngui-list' // tslint:disable-line\r\n})\r\nexport class NguiListDirective {\r\n  /** Fired when child `<ngui-list-item>` is selected */\r\n  @Output() selected: EventEmitter<any> = new EventEmitter();\r\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\r\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(public element: ElementRef) { }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { NguiListDirective } from './ngui-list.directive';\r\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\r\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\r\nimport { NoneSelect } from './none-select';\r\nimport { NoMatchFound } from './no-match-found';\r\n\r\n// tabindex, keydown, keyup(ENTER, ESC), click\r\n@Directive({\r\n  selector: 'ngui-list-item' // tslint:disable-line\r\n})\r\nexport class NguiListItemDirective implements OnInit {\r\n  @Input('item') object: any; // tslint:disable-line\r\n\r\n  nextSibling: HTMLElement;\r\n  prevSibling: HTMLElement;\r\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private viewContainer: ViewContainerRef,\r\n    @Optional() @Host() private listDirective: NguiListDirective,\r\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\r\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\r\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\r\n    if (!this.parentListComp) {\r\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\r\n    }\r\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\r\n      this.viewContainer.clear();\r\n      this.el.nativeElement.innerHTML = this.object.html;\r\n    }\r\n  }\r\n\r\n  // handles keyboard up, down, left, right\r\n  @HostListener('keydown', ['$event']) keydown(event): void {\r\n    const thisListItem = this.el.nativeElement;\r\n    const keyCode = event.which || event.keyCode;\r\n    const parentListEl = this.parentListComp.element.nativeElement;\r\n    const listItems: Array<HTMLElement>\r\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\r\n    const listItemNdx = listItems.indexOf(thisListItem);\r\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\r\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\r\n\r\n    switch (keyCode) {\r\n    case 37: case 38: // up arrow, left arrow\r\n      prevListItem.focus();\r\n      break;\r\n    case 39: case 40: // down arrow, right arrow\r\n      nextListItem.focus();\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  // handles keyboard enter(13), esc(27)\r\n  @HostListener('keyup', ['$event']) keyup(event): void {\r\n    switch (event.key) {\r\n    case 'Enter':\r\n      this.parentListComp.selected.emit(this.object);\r\n      break;\r\n    case 'Escape':\r\n      this.parentListComp.escaped.emit();\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event']) mousedown(): void {\r\n    this.parentListComp.selected.emit(this.object);\r\n  }\r\n\r\n  @HostListener('focus', ['$event']) focused(): void {\r\n    if (this.parentListComp['setFocused']) {\r\n      this.parentListComp['setFocused']('listItem', true);\r\n    }\r\n  }\r\n\r\n  @HostListener('blur', ['$event']) blurred(): void {\r\n    if (this.parentListComp['setFocused']) {\r\n      this.parentListComp['setFocused']('listItem', false);\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\r\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\r\nimport {NguiListDirective} from './src/ngui-list.directive';\r\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\r\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\r\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\r\n\r\nexport {NguiAutocompleteComponent, NguiListItemDirective, NguiListDirective, NguiInviewPageComponent, NguiVirtualListComponent};\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NguiInviewModule\r\n  ],\r\n  declarations: [\r\n    NguiAutocompleteComponent,\r\n    NguiInviewPageComponent,\r\n    NguiListDirective,\r\n    NguiListItemDirective,\r\n    NguiVirtualListComponent\r\n  ],\r\n  exports: [\r\n    NguiAutocompleteComponent,\r\n    NguiInviewPageComponent,\r\n    NguiListDirective,\r\n    NguiListItemDirective,\r\n    NguiVirtualListComponent\r\n  ],\r\n  entryComponents: [NguiInviewPageComponent]\r\n})\r\nexport class NguiListModule {\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'nguiHighlight' })\r\nexport class NguiHighlightPipe implements PipeTransform {\r\n  transform(text: string, search: string): string {\r\n    let ret = text;\r\n    if (search) {\r\n      const re  = new RegExp(search, 'ig');\r\n      ret = text.replace(re, match => `<span class=\"ngui-highlight\">${match}</span>`);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n}\r\n","/**\r\n * window.konsole alternative\r\n * ### example\r\n * ```\r\n * konsole.setLogLevel('error');\r\n * konwole.log(1,2,3,4,5);\r\n * ```\r\n */\r\nexport abstract class konsole { // tslint:disable-line\r\n  /** all log levels */\r\n  static LOG_LEVELS = {\r\n    ALL:   parseInt('00000', 2),\r\n    DEBUG: parseInt('00001', 2),\r\n    LOG:   parseInt('00010', 2),\r\n    INFO:  parseInt('00100', 2),\r\n    WARN:  parseInt('01000', 2),\r\n    ERROR: parseInt('10000', 2),\r\n    NONE:  parseInt('11111', 2)\r\n  };\r\n\r\n  /** current log level set by setLogLevel, default 'INFO' */\r\n  static logLevel = 'INFO';\r\n\r\n  /** returns if it should call `window.console` or not */\r\n  static toLog(param): boolean { // returns to log or not\r\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\r\n    const requiredNum = this.LOG_LEVELS[param];\r\n\r\n    return requiredNum > restrictionNum;\r\n  }\r\n\r\n  /** sets the current log level */\r\n  static setLogLevel(logLevel: string): any {\r\n    logLevel = logLevel.toUpperCase();\r\n    const logLevels = Object.keys(this.LOG_LEVELS);\r\n    if (logLevels.indexOf(logLevel) > -1) {\r\n      if (window && window.sessionStorage) { // for browser env.\r\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\r\n      }\r\n      this.logLevel = logLevel;\r\n    } else {\r\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\r\n  static debug(...args: Array<any>): void {\r\n    if (this.toLog('DEBUG')) {\r\n        // noinspection TsLint\r\n        console.debug.apply(console, arguments); // tslint:disable-line\r\n    }\r\n  }\r\n\r\n  /** The same as `console.log()` if the current log level is greater than `log` */\r\n  static log(...args: Array<any>): void {\r\n    if (this.toLog('LOG')) {\r\n      console.log.apply(console, arguments);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.info()` if the current log level is greater than `info` */\r\n  static info(...args: Array<any>): void {\r\n    if (this.toLog('INFO')) {\r\n        // noinspection TsLint\r\n        console.info.apply(console, arguments); // tslint:disable-line\r\n    }\r\n  }\r\n\r\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\r\n  static warn(...args: Array<any>): void {\r\n    if (this.toLog('WARN')) {\r\n      console.warn.apply(console, arguments);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.error()` if the current log level is greater than `error` */\r\n  static error(...args: Array<any>): void {\r\n    if (this.toLog('ERROR')) {\r\n      console.error.apply(console, arguments);\r\n    }\r\n  }\r\n}\r\n\r\n// konsole.setLogLevel('all');\r\n// konsole.debug('yes');\r\n// konsole.log('yes');\r\n// konsole.info('yes');\r\n// konsole.warn('yes');\r\n// konsole.error('yes');\r\n\r\n// konsole.setLogLevel('none');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('no');\r\n// konsole.warn('no');\r\n// konsole.error('no');\r\n\r\n// konsole.setLogLevel('info');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('yes');\r\n// konsole.warn('yes');\r\n// konsole.error('yes');\r\n\r\n// konsole.setLogLevel('WARN');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('no');\r\n// konsole.warn('yes');\r\n// konsole.error('yes');\r\n\r\n// konsole.setLogLevel('ERROR');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('no');\r\n// konsole.warn('no');\r\n// konsole.error('yes');\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\r\nimport {DynamicComponentService} from './src/dynamic-component.service';\r\nimport { konsole } from './src/konsole';\r\nimport { fireEvent } from './src/fire-event';\r\n\r\nexport {DynamicComponentService, NguiHighlightPipe, konsole, fireEvent};\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [NguiHighlightPipe],\r\n  exports: [NguiHighlightPipe],\r\n  providers: [DynamicComponentService]\r\n})\r\nexport class NguiUtilsModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\r\nimport {NguiListModule} from './ngui-list/ngui-list.module';\r\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NguiInviewModule,\r\n    NguiListModule,\r\n    NguiUtilsModule\r\n  ],\r\n  exports: [\r\n    NguiInviewModule,\r\n    NguiListModule,\r\n    NguiUtilsModule\r\n  ]\r\n})\r\nexport class NguiCommonModule {\r\n}\r\n"]}