{"version":3,"file":"ngui-common.js","sources":["ng:/@ngui/common/lib/ngui-inview/src/ngui-inview.component.ts","ng:/@ngui/common/lib/ngui-inview/src/ngui-inview.directive.ts","ng:/@ngui/common/lib/ngui-inview/ngui-inview.module.ts","ng:/@ngui/common/lib/ngui-utils/src/fire-event.ts","ng:/@ngui/common/lib/ngui-utils/src/dynamic-component.service.ts","ng:/@ngui/common/lib/ngui-list/src/ngui-inview-page.component.ts","ng:/@ngui/common/lib/ngui-list/src/ngui-virtual-list.component.ts","ng:/@ngui/common/lib/ngui-list/src/no-match-found.ts","ng:/@ngui/common/lib/ngui-list/src/none-select.ts","ng:/@ngui/common/lib/ngui-list/src/ngui-autocomplete.component.ts","ng:/@ngui/common/lib/ngui-list/src/ngui-list.directive.ts","ng:/@ngui/common/lib/ngui-list/src/ngui-list-item.directive.ts","ng:/@ngui/common/lib/ngui-list/ngui-list.module.ts","ng:/@ngui/common/lib/ngui-utils/src/ngui-highlight.pipe.ts","ng:/@ngui/common/lib/ngui-utils/src/konsole.ts","ng:/@ngui/common/lib/ngui-utils/ngui-utils.module.ts","ng:/@ngui/common/lib/ngui-common.module.ts","ng:/@ngui/common/public_api.ts","ng:/@ngui/common/ngui-common.ts"],"names":[],"mappings":";;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAQa,mBAAmB,GAAhC,MAAa,mBAAmB;AAAG,IAuBjC,YACc,OAAmB,EACE,UAAe;AACpD,QAFgB,YAAO,GAAP,OAAO,CAAY;AAAC,QACC,eAAU,GAAV,UAAU,CAAK;AAAC;AAGjB,QAvBzB,oBAAe,GAA6B,EAAC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAC,CAAC;AACrG;AACgD;AAEH;AAAa,QAG/C,gBAAW,GAAG,IAAI,CAAC;AAC9B,QACY,WAAM,GAA4C,IAAI,YAAY,EAAE,CAAC;AACjF,QAAY,cAAS,GAA4C,IAAI,YAAY,EAAE,CAAC;AACpF;AAEuB,QACrB,aAAQ,GAAG,KAAK,CAAC;AACnB;AACI,QAAF,qBAAgB,GAAG,KAAK,CAAC;AAC3B,KAIG;AACH;AACsC,IACpC,QAAQ;AAAK,QACX,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;AAC1C,SAAK;AACL,QACI,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AAC5C,YAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;AACtG,YAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AACxD,SAAK;AACL,KAAG;AACH;AACoC,IAClC,WAAW;AAAK,QACd,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;AAC/B,KAAG;AACH;AAC+F,IAC7F,eAAe,CAAC,OAAO;AAAI,QACzB,OAAO,CAAC,OAAO,CAAC,CAAC,KAAgC;AACrD,YAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,EAAE;AACnC,gBAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC7B,gBAAQ,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AACzC,gBAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AACO;AAC4E;AACU;AACtF,IACL,oBAAoB,CAAC,KAAK;AAAI,QAC5B,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE;AACpF,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,KAAK,CAAC,iBAAiB,GAAG,GAAG,EAAE;AACvC,YAAM,MAAM,OAAO,GAAG,KAAK,CAAC,iBAAiB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AAC1D,YAAM,MAAM,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,iBAAiB,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AACrE,YAAM,MAAM,MAAM,GAAG,QAAQ,IAAI,KAAK,CAAC;AACvC,YAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,CAAC,CAAC;AAC3D,SAAK;AAAC,aAAK;AACX,YAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;AACrC,YAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;AAC1C,YACM,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACnC,SAAK;AACL,KAAG;AACH;;;;;;;;;;;+GAAC;AACD;AAA6C,YAxDpB,UAAU;AACjC,4CAAO,MAAM,SAAC,WAAW;AAAQ;AAvBU;AAAa,IAAvD,YAAY,CAAC,WAAW,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;AAAE,8BAAS,WAAW;AAAE,qDAAI;AAG7D;AAAa,IAArB,KAAK,EAAE;AAAE;AAAsC,4DAAmD;AAG1F;AAAa,IAArB,KAAK,EAAE;AAAE;AACa,oDADD;AAIb;AAAa,IAArB,KAAK,EAAE;AAAE;AAEM,wDAFY;AAElB;AAAa,IAAtB,MAAM,EAAE;AAAE,8BAAO,YAAY;AAAE,mDAA+C;AACrE;AAAa,IAAtB,MAAM,EAAE;AAAE,8BAAU,YAAY;AAAE,sDAA+C;AAfvE,mBAAmB,oBAR/B,SAAS,CAAC,UACT,QAAQ,jCAON,CAyBK,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;CAhChB,aAAa,UACvB,QAAQ,EAAE,lCA+BkB,qCADL,UAAU;AAC1B,GAzBI,mBAAmB,CA+E/B;AACA;ACpGD;+CDiBK,mBACM,yBAAyB,3FCjBpC;AACA;ADiBC,CAAC,DChBF,IAGa,mBAAmB,GAAhC,MAAa,mBAAmB;AAAG,IAcjC,YACa,OAAmB,EACG,UAAe;AACpD,QAFe,YAAO,GAAP,OAAO,CAAY;AAAC,QACE,eAAU,GAAV,UAAU,CAAK;AAAC;AAGjB,QAfzB,oBAAe,GAA6B,EAAC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAC,CAAC;AACrG;AAAyD,QAK7C,eAAU,GAA4C,IAAI,YAAY,EAAE,CAAC;AACrF;AACI,QAAQ,gBAAW,GAA4C,IAAI,YAAY,EAAE,CAAC;AACtF,KAIG;AACH;AACsC,IACpC,QAAQ;AAAK,QACX,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;AAC1C,SAAK;AACL,QACI,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AAC5C,YAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;AACtG,YAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AACxD,SAAK;AACL,KAAG;AACH;AACqC,IACnC,WAAW;AAAK,QACd,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC7D,YAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;AACjC,SAAK;AACL,KAAG;AACH;AACO;AACyD;AACU;AACnE,IACL,eAAe,CAAC,OAAO;AAAI,QACzB,OAAO,CAAC,OAAO,CAAC,CAAC,KAAgC;AACrD,YAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,EAAE;AACnC,gBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH;;wRAAC;AACD;AAA6C,YArCrB,UAAU;AAChC,4CAAO,MAAM,SAAC,WAAW;AAAQ;AAZxB;AAAa,IAArB,KAAK,EAAE;AAAE;AAAsC,4DAAmD;AAG1F;AAAa,IAArB,KAAK,EAAE;AAAE;AAEY,oDAFA;AAGZ;AAAa,IAAtB,MAAM,EAAE;AAAE,8BAAW,YAAY;AAAE,uDAA+C;AAEzE;AAAa,IAAtB,MAAM,EAAE;AAAE,8BAAY,YAAY;AAAE,wDAA+C;AAZzE,mBAAmB,oBAH/B,SAAS,CAAC,UACP,QAAQ,jCAER,CAgBK,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;CAlBd,6BAA6B,9BAkBb,qCADN,UAAU;CAhBjC,CAAC,FAiBO,GAhBI,mBAAmB,CAmD/B;AACA;AAAC,ICnDW,gBAAgB,GAA7B,MAAa,gBAAgB;AAC7B,EAAC;AADY,gBAAgB,oBAb5B,QAAQ,CAAC,UACR,OAAO,EAAE;CACP,YAAY,UACb,UACD,YAAY,EAAE,cACZ,mBAAmB,cACnB,mBAAmB,UACpB,UACD,OAAO,EAAE;KACP,mBAAmB;aACnB,CAKJ;AAAC;ACtBD;YDiBuB,UACpB,MACF,CAAC,IACW,gBAAgB,CAC5B,lDCpBD;AACA;AACA;AACA;AACA;AACA,SAAgB,SAAS,CAAC,EAAe,EAAE,IAAY,EAAE,UAAe,EAAE;AAAI,IAC5E,IAAI,KAAK,CAAC;AACZ,IAAE,IAAI,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;AAChD,QAAI,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC1C,KAAG;AAAC,SAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AACjC,QAAI,KAAK,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC7C,KAAG;AAAC,SAAK,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;AACnC,QAAI,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC1C,KAAG;AACH,IACE,OAAO,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACjC;AACA;ACgBA;AACA;AACA;AACA,IACa,uBAAuB,GAApC,MAAa,uBAAuB;AACpC,IAKE,YAA8C,eAAe;AAC/D,QAAI,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;AAC3C,KAAG;AACH;AAEC;AACE;AACE;AACE;AAEJ;AAAQ,IAAT,eAAe,CAAC,SAAc,EAAE,IAAuB;AAAI,QACzD,IAAI,CAAC,iBAAiB,GAAG,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC;AAC5D,QAAI,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;AAC5E,QACI,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;AACjE,KAAG;AACH;AAEC;AACE;AACE,IAAH,eAAe,CAAC,YAA+B;AAAI,QACjD,MAAM,MAAM,GAAG,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,SAAA,EAAE,EAAI,CAAC,CAAA,CAAC,GAAG,SAAA,EAAE,EAAI,CAAC,CAAA,EAAE,CAAC;AAC/E,QAAI,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACnE,QAAI,YAAY,CAAC,QAAQ,CAAC,EAAE,GAAG,MAAM,CAAC;AACtC,QACI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AACzD,QACI,OAAO,YAAY,CAAC,QAAQ,CAAC;AACjC,KAAG;AACH;;qIACC;AACD;AAAiD,4CA/BlC,MAAM,SAAC,wBAAwB;AAAQ;AANzC,uBAAuB,oBADnC,UAAU,EAAE,jBACT,CAMW,WAAA,MAAM,CAAC,wBAAwB,CAAC,CAAA;AAAE;AACrB,GAPf,uBAAuB,CAoCnC;AACA;AC/DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAwBa,uBAAuB,GAApC,MAAa,uBAAuB;AAAG,IAsBrC,YACU,OAAmB,EACnB,QAAmB,EACnB,KAAwB;AACjC,QAHS,YAAO,GAAP,OAAO,CAAY;AAAC,QACpB,aAAQ,GAAR,QAAQ,CAAW;AAAC,QACpB,UAAK,GAAL,KAAK,CAAmB;AACpC;AAG2C,QAjBzC,YAAO,GAAG,KAAK,CAAC;AAClB;AACM,QAAJ,gBAAW,GAAe,EAAE,CAAC;AAC/B,KAWO;AACP;AAEC;AACE;AACE,IAAH,YAAY;AAAK,QACf,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC3B,YAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;AACtD,YAAM,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;AACnC,YAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;AACnE,YAAM,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;AACjC,SAAK;AACL,KAAG;AACH,IACE,QAAQ;AAAK,QACX,IAAI,CAAC,UAAU;AACnB,YAAM,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;AACxE,KAAG;AACH,IACE,WAAW;AAAK,QACd,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;AACnE,QAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC1B,KAAG;AACH;AAEC;AACE;AACE,IAAH,UAAU;AAAK,QACb,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACxD;AACM,YAAA,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC;AAC/E,YAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,CAAC,CAAC;AACvE,YACM,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC1B,YAAM,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;AACtD,YAAM,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;AAC7B,YAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC3B,gBAAQ,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;AACnC,aAAO;AACP,SAAK;AACL,KAAG;AACH,IACE,QAAQ,CAAC,KAAiB;AAAI,QAC5B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACzB,YAAM,OAAO,CAAC,GAAG,CAAC,mDAAmD,EAAE,KAAK,CAAC,CAAC;AAC9E,YAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACzB,YAAM,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;AACjC,SAAK;AACL,KAAG;AACH;;;;;;;;;;;;;;;;;;;;mIACC;AACD;AAAiD,YAvD5B,UAAU;AAC7B,YAAoB,SAAS;AAC7B,YAAiB,iBAAiB;AAClC;AAvB2C;AAAa,IAAvD,YAAY,CAAC,WAAW,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;AAAE,8BAAS,WAAW;AAAE,yDAAI;AAI7D;AAAa,IAArB,KAAK,EAAE;AAAE,8BAAM,KAAK;AAAE,sDAAI;AAPhB,uBAAuB,oBAxBnC,SAAS,CAAC,UACT,QAAQ,EAAE,nCAuBR,kCAuBiB,UAAU;OA9CD,UAC5B,jBA8CF,QAAsB,SAAS;MA9CrB,EAAE,RA+CZ,QAAmB,iBAAiB;AAClC,GA1BW,uBAAuB,CA6EnC;AACA;AChHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;kDDeG,lDCdH;WDeW,XCdX;MDgBG,OACF,CAAC,dChBF;AACA;AACA;AACA;AACA;AACA;AACA,IAgBa,wBAAwB,GAArC,MAAa,wBAAwB;AAAG,IAqCtC,YACS,QAAmB,EACnB,OAAmB,EACnB,uBAAgD,EAChD,GAAsB;AAC9B,QAJQ,aAAQ,GAAR,QAAQ,CAAW;AAAC,QACpB,YAAO,GAAP,OAAO,CAAY;AAAC,QACpB,4BAAuB,GAAvB,uBAAuB,CAAyB;AAAC,QACjD,QAAG,GAAH,GAAG,CAAmB;AACjC;AAEuD,QArC3C,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;AAC7D;AACM,QAAM,YAAO,GAAsB,IAAI,YAAY,EAAE,CAAC;AAC5D;AAEK;AACM;AACM;AAGhB;AACA;AAAuB;AAAiB;AAEjC;AACG;AAAgD;AAEV;AAC/B;AAIJ;AAA4B;AAEnC;AAAe;AAAY,QAFtB,iBAAY,GAAsB,IAAI,YAAY,EAAE,CAAC;AACjE,QAGE,aAAQ,GAAG,KAAK,CAAC;AACnB,QAEE,gBAAW,GAAiD,EAAE,CAAC;AACjE,KAMM;AACN;AAEC,IAAC,eAAe;AAAK,QAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE;AAC/D,YAAM,OAAO,CAAC,KAAK,CAAC,4DAA4D,CAAC,CAAC;AAClF,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AAEJ;AAAQ,IAAP,sBAAsB;AAAK,QACzB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AAC7B,YAAM,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAChC,YACM,IAAI,CAAC,UAAU;AACrB,gBAAQ,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,uBAAuB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7F,YAAM,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACpE,YACM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACxD,YAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC7C,YACM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,SAAK;AAAC,aAAK;AACX,YAAM,OAAO,CAAC,GAAG,CAAC,uDAAuD,CAAC,CAAC;AAC3E,SAAK;AACL,KAAG;AACH;AAEC,IAAC,OAAO,CAAC,KAAiB;AAAI,QAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC/B,QAAI,OAAO,CAAC,GAAG,CAAC,uDAAuD,CAAC,CAAC;AACzE,QAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7C,KAAG;AACH;;;;;;;;;;;;;;;;;;;;6FACC;AACD;AAAkD,YA3C7B,SAAS;AAC5B,YAAkB,UAAU;AAC5B,YAAkC,uBAAuB;AACzD,YAAc,iBAAiB;AAC/B;AAvCgD;AAAa,IAA5D,SAAS,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC;AAAE,8BAAS,gBAAgB;AAC5E,0DAD6E;AAEhD;AAAa,IAAvC,YAAY,CAAC,WAAW,CAAC;AAAE,8BAAS,WAAW;AAAE,0DAAI;AAE5C;AAAa,IAAtB,MAAM,EAAE;AAAE,8BAAS,YAAY;AAAE,0DAAyB;AAEjD;AAAa,IAAtB,MAAM,EAAE;AAAE,8BAAQ,YAAY;AAAE,yDAAyB;AAmBhD;AAAa,IAAtB,MAAM,EAAE;AAAE,8BAAa,YAAY;AAAE,8DAAyB;AA5BpD,wBAAwB,oBAhBpC,SAAS,CAAC,UACT,QAAQ,EAAE,nCAeR,kCAsCiB,SAAS;SArDC,UAC7B,nBAqDF,QAAoB,UAAU;OArDpB,EAAE,TAsDZ,QAAoC,uBAAuB;AAC3D,QAAgB,iBAAiB;AAC/B,GA1CW,wBAAwB,CAgFpC;AACA;AAAC,MC1IW,YAAY;AACzB,IADA;AAAgB,QACd,SAAI,GAAG,gBAAgB,CAAC;AAC1B,KAAC;AACD;AAAE;AAAC,MCHU,UAAU;AACvB,IADA;AAAgB,QACd,SAAI,GAAG,QAAQ,CAAC;AAClB,KAAC;AACD;AAAE;6DFiDC,mBACQ,hFElDR,IC0BU,yBAAyB,GAAtC,MAAa,yBAA0B,SAAQ,wBAAwB;aH0BpE,bG1BuE,IAA1E;AH2BC,CAAC,DG3Bc;AAA6B,QAElC,kBAAa,GAAG,CAAC,CAAC;AAC7B,QAAW,gBAAW,GAAG,YAAY,CAAC;AACtC,QAAW,gBAAW,GAAG,gBAAgB,CAAC;AAC1C,QAKE,aAAQ,GAAQ,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;AAClD,KAiKC;AACD;AAAQ;AAA8C;AAA0C;AAAoE;AAAmD;AAAqD;AAAQ,IAnJlR,IAAI,OAAO;AAAK,QACd,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,gBAAgB,CAAC;AAC9E,QAAI,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAClE,QAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC;AACrE,QACI,QAAQ,CAAC,iBAAiB,IAAI,OAAO,IAAI,QAAQ,EAAE;AACvD,KAAG;AACH,IACE,QAAQ;AAAK,QACX,IAAI,CAAC,OAAO,GAAsB,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7E,QAAI,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACpC,QACI,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/E,QAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7E,QAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5E,QAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxD,QAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACtD,KAAG;AACH,IACE,UAAU,CAAC,KAAK;AAAI,QAClB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAClC,QAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACzB,QAAI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC/B,QAAI,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAAuC,QAChE,OAAO,CAAC,GAAG,CAAC,kDAAkD,EAAE,KAAK,CAAC,CAAC;AAC3E,KAAG;AACH,IACE,SAAS;AAAK,QACZ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACjC,QAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACzB,QAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AAC7B,YAAM,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;AAC/C,SAAK;AACL,QAAI,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC7B,QAAI,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;AACnE,KAAG;AACH,IACE,gBAAgB,CAAC,KAAK;AAAI,QACxB,OAAO,CAAC,GAAG,CAAC,wDAAwD,EAAE,KAAK,CAAC,CAAC;AACjF,QAAI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC/B,QAAI,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,WAAW,EAAE;AACpD,YAAM,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AAC/C,SAAK;AACL,QAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AAC9C,QAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACnC,KAAG;AACH,IACE,gBAAgB;AAAK,QACnB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACpC,KAAG;AACH,IACE,SAAS;AAAK,QACZ,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO;AACpC,YAAM,OAAO,CAAC,OAAO,EAAE,CAAC;AACxB,SAAK,CAAC,CAAC;AACP,QAAI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AAC1B,KAAG;AACH,IACE,cAAc,CAAC,KAAoB;AAAI,QACrC,OAAO,CAAC,GAAG,CAAC,oDAAoD,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;AACjF,QAAI,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;AACjF,QAAI,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,IAAI,KAAK,CAAC,GAAG,KAAK,QAAQ,EAAE;AACzD,YAAM,IAAI,SAAS,EAAE;AACrB,gBAAQ,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAC,CAAC,CAAC;AACxD,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;AACzB,aAAO;AACP,SAAK;AAAC,aAAK,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,WAAW,IAAI,KAAK,CAAC,GAAG,KAAK,YAAY,KAAK,SAAS,EAAE;AACvF,YAAM,SAAS,CAAC,KAAK,EAAE,CAAC;AACxB,SAAK;AAAC,aAAK,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,EAAE;AACrE;AACM,SAAD;AAAC,aAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,EAAE;AAChE,YAAM,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;AACrC,YAAM,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACpC,YAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjC,SAAK;AACL,KAAG;AACH;AAEC,IAAC,mBAAmB;AAAK,QACtB,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAClC,YAAM,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;AACjC,gBAAQ,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AACnC,gBAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AAClD,gBAAQ,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACtC,gBAAQ,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;AACvC,gBAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;AACzB,gBAAQ,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACtC,aAAO,EAAE,GAAG,CAAC,CAAC;AACd,SAAK;AACL,KAAG;AACH;AAEC,IAAC,YAAY;AAAK,QACf,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;AACjC,YAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACpC,SAAK;AACL,KAAG;AACH,IACE,UAAU,CAAC,MAA4B,EAAE,GAAY;AAAI,QACvD,IAAI,GAAG,EAAE;AACb,YAAM,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACrC,YAAM,IAAI,CAAC,QAAQ,GAAG,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;AACtD,YAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;AACnC,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AACpC,gBAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;AACtC,gBAAQ,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AACjC,aAAO,EAAE,GAAG,CAAC,CAAC;AACd,SAAK;AACL,KAAG;AACH,IACE,wBAAwB;AAAK,QAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;AAC9C,QAAI,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;AAChE,QAAI,MAAM,GAAG,GAAG,cAAc,CAAC,GAAG,GAAG,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;AAC5E,QACI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,cAAc,CAAC,IAAI,IAAI,CAAC,CAAC;AACvE,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC;AACtD,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,GAAG,cAAc,CAAC,KAAK,IAAI,CAAC,CAAC;AAC5E,KAAG;AACH;AAEC,IAAC,OAAO,CAAC,KAAiB;AAAI,QAC3B,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAC;AAC1E,QAAI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC/B;AAEG,QAAC,IAAI,WAAgB,CAAC;AACzB,QAAI,IAAI,SAAS,GAAQ,EAAE,CAAC;AAC5B,QAAI,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;AACvC,YAAM,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;AAC9D,gBAAQ,WAAW,GAAG,IAAI,YAAY,EAAE,CAAC;AACzC,gBAAQ,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;AAC1C,aAAO;AAAC,iBAAK,IAAI,IAAI,CAAC,WAAW,EAAE;AACnC,gBAAQ,SAAS,GAAG,IAAI,UAAU,EAAE,CAAC;AACrC,gBAAQ,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;AAC1C,aAAO;AACP,SAAK;AACL,QACI,MAAM,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7E,QAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAChD,QAAI,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC7B,KAAG;AACH;;;;;;;;;;;6PACC;AA3KU;AAAa,IAArB,KAAK,EAAE;AAAE;AACF,sDADa;AACZ;AAAa,IAArB,KAAK,EAAE;AAAE;AACQ,gEADS;AAClB;AAAa,IAArB,KAAK,EAAE;AAAE;AACD,8DAD2B;AAC3B;AAAa,IAArB,KAAK,EAAE;AAAE;AAEN,8DAFoC;AAGb;AAAa,IAAvC,YAAY,CAAC,WAAW,CAAC;AAAE,8BAAS,WAAW;AAAE,2DAAI,CAsKxD;AA7Ka,AA6KZ;wBA7KqC,oBAfrC,5CA4LC,IChMW,iBAAiB,GAA9B,MAAa,iBAAiB;GDIpB,CAAC,UACT,QAAQ,EAAE,xBCJZ,IAKE,YAAmB,OAAmB;gBDDT,UAC7B,1BCA0C,QAAvB,YAAO,GAAP,OAAO,CAAY;EDA9B,EAAE,JCA6B;AAEe,QAN5C,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;AAC7D;wBDUG,xBCTG,QAAM,YAAO,GAAsB,IAAI,YAAY,EAAE,CAAC;ADUjD,ACTX,KAC6C;AAC7C;;ADUG,OACF,CAAC,IACW,yBAAyB,CA4KrC,4HCxLA;AACD;AAA2C,YAFb,UAAU;AAAG;AAJ/B;AAAa,IAAtB,MAAM,EAAE;AAAE,8BAAS,YAAY;AAAE,mDAAyB;AAEjD;AAAa,IAAtB,MAAM,EAAE;AAAE,8BAAQ,YAAY;AAAE,kDAAyB;AAJ/C,iBAAiB,oBAH7B,SAAS,CAAC,UACT,QAAQ,EAAE,WAAW,9CAEnB,kCAM0B,UAAU;AAAG,GAN9B,iBAAiB,CAO7B;AACA;IATA,CAAC,LCSF;AACA,IAGa,qBAAqB,GAAlC,MAAa,qBAAqB;AAAG,IAOnC,YACU,EAAc,EACd,QAAmB,EACnB,aAA+B,EACX,aAAgC,EAChC,oBAA8C,EAC9C,qBAAgD;AAC7E,QANS,OAAE,GAAF,EAAE,CAAY;AAAC,QACf,aAAQ,GAAR,QAAQ,CAAW;AAAC,QACpB,kBAAa,GAAb,aAAa,CAAkB;AAAC,QACZ,kBAAa,GAAb,aAAa,CAAmB;AAAC,QACjC,yBAAoB,GAApB,oBAAoB,CAA0B;AAAC,QAC/C,0BAAqB,GAArB,qBAAqB,CAA2B;AAChF,KAAO;AACP,IACE,QAAQ;AAAK,QACX,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;AACvE,QAAI,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,qBAAqB,CAAC;AACxG,QAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AAC9B,YAAM,MAAM,KAAK,CAAC,uFAAuF,CAAC,CAAC;AAC3G,SAAK;AACL,QAAI,IAAI,CAAC,IAAI,CAAC,MAAM,YAAY,UAAU,MAAM,IAAI,CAAC,MAAM,YAAY,YAAY,CAAC,EAAE;AACtF,YAAM,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACjC,YAAM,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACzD,SAAK;AACL,KAAG;AACH;AAEC,IAAsC,OAAO,CAAC,KAAK;AAAI,QACpD,MAAM,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;AAC/C,QAAI,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC;AACjD,QAAI,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC;AACnE,QAAI,MAAM,SAAS,GACX,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACpE,QAAI,MAAM,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACxD,QAAI,MAAM,YAAY,GAAG,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;AACpE,QAAI,MAAM,YAAY,GAAG,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACvF,QACI,QAAQ,OAAO;AACnB,YAAI,KAAK,EAAE,CAAC;AAAC,YAAA,KAAK,EAAE;AACpB,gBAAM,YAAY,CAAC,KAAK,EAAE,CAAC;AAC3B,gBAAM,MAAM;AACZ,YAAI,KAAK,EAAE,CAAC;AAAC,YAAA,KAAK,EAAE;AACpB,gBAAM,YAAY,CAAC,KAAK,EAAE,CAAC;AAC3B,gBAAM,MAAM;AACZ,YAAI;AACJ,gBAAM,MAAM;AACZ,SAAK;AACL,KAAG;AACH;AAEC,IAAoC,KAAK,CAAC,KAAK;AAAI,QAChD,QAAQ,KAAK,CAAC,GAAG;AACrB,YAAI,KAAK,OAAO;AAChB,gBAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrD,gBAAM,MAAM;AACZ,YAAI,KAAK,QAAQ;AACjB,gBAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACzC,gBAAM,MAAM;AACZ,YAAI;AACJ,gBAAM,MAAM;AACZ,SAAK;AACL,KAAG;AACH,IACqC,SAAS;AAAK,QAC/C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnD,KAAG;AACH,IACqC,OAAO;AAAK,QAC7C,IAAI,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;AAC3C,YAAM,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAC1D,SAAK;AACL,KAAG;AACH,IACoC,OAAO;AAAK,QAC5C,IAAI,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;AAC3C,YAAM,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AAC3D,SAAK;AACL,KAAG;AACH;;;;mDAAC;AACD;AAA+C,YAzE/B,UAAU;AACxB,YAAoB,SAAS;AAC7B,YAAyB,gBAAgB;AACzC,YAA6C,iBAAiB,uBAA3D,QAAQ,YAAI,IAAI;AAAO,YAC0B,wBAAwB,uBAAzE,QAAQ,YAAI,IAAI;AAAO,YAC2B,yBAAyB,uBAA3E,QAAQ,YAAI,IAAI;AAAM;AAZV;AAAa,IAA3B,KAAK,CAAC,MAAM,CAAC;AAAE;AAEhB,qDAF2B;AA4BU;AAAa,IAAjD,YAAY,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;AAAE;AACrB;AACD;AACN,oDAiBT;AAGkC;AAAa,IAA/C,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AAAE;AACjB;AAEI;AAEvB,kDAMC;AAEkC;AAAa,IAA/C,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AAAE;AAChB;AAGhB;AAA4C,sDAF/C;AAEkC;AAAa,IAA/C,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AAAE;AACd;AACJ;AACf,oDACF;AAEiC;AAAa,IAA9C,YAAY,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC;AAAE;AACb;AACJ;AAChB,oDACD;AA/EU,qBAAqB,oBAHjC,SAAS,CAAC,UACT,QAAQ,EAAE,nCAER,CAWC,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,IAAI,EAAE,CAAA;MAbK,6BAC3B,CAAC,pCAYuB,IACpB,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,IAAI,EAAE,CAAA;AAAE,IACpB,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,IAAI,EAAE,CAAA;AAAE,qCALT,UAAU;AAC1B,QAAsB,SAAS;AAC/B,QAA2B,gBAAgB;AAC3C,QAA+C,iBAAiB;AAChE,QAAsD,wBAAwB;AAC9E,QAAuD,yBAAyB;AAC9E,GAdW,qBAAqB,CAgFjC;AACA;AAAC,ICvEW,cAAc,GAA3B,MAAa,cAAc;AAC3B,EAAC;AADY,cAAc,oBArB1B,QAAQ,CAAC,UACR,OAAO,EAAE;GACP,YAAY,cACZ,gBAAgB,UACjB,UACD,YAAY,EAAE,cACZ,yBAAyB,cACzB;UAAuB,cACvB;eAAiB;AACjB,cAcJ;AAAC;KAdwB,cACrB,wBAAwB,3CAa1B,IC/BW,iBAAiB,GAA9B,MAAa,iBAAiB;GDmB3B,UACD,OAAO,EAAE,tBCpBsB,IAC/B,SAAS,CAAC,IAAY,EAAE,MAAc;MDoBpC,NCpBwC,QACxC,IAAI,GAAG,GAAG,IAAI,CAAC;ODmBU,cACzB,rBCnBJ,QAAI,IAAI,MAAM,EAAE;sBDmBW,cACvB,pCCnBJ,YAAM,MAAM,EAAE,GAAI,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IDmBtB,cACjB,qBAAqB,cACrB,wBAAwB,UACzB,vFCrBH,YAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,IAAI,gCAAgC,KAAK,SAAS,CAAC,CAAC;IDsBpF,JCrBF,SAAK;SDqBY,EAAE,CAAC,ZCpBpB,QACI,OAAO,GAAG,CAAC;AACf,KAAG;AACH,EAAC;MDiB0C,CAAC,MAC3C,CAAC,IACW,cAAc,CAC1B,jCC9BY,iBAAiB,oBAD7B,IAAI,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC,IACnB,iBAAiB,CAU7B;8GACD;AAAC;ACdD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAsB,OAAO;AAAG;AAElB,IAcZ,OAAO,KAAK,CAAC,KAAK;AAAI,QACpB,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1D,QAAI,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAC/C,QACI,OAAO,WAAW,GAAG,cAAc,CAAC;AACxC,KAAG;AACH;AAEC,IAAC,OAAO,WAAW,CAAC,QAAgB;AAAI,QACrC,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;AACtC,QAAI,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACnD,QAAI,IAAI,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAC1C,YAAM,IAAI,MAAM,IAAI,MAAM,CAAC,cAAc,EAAE;AAC3C,gBAAQ,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;AACrE,aAAO;AACP,YAAM,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC/B,SAAK;AAAC,aAAK;AACX,YAAM,OAAO,CAAC,KAAK,CAAC,8CAA8C,SAAS,EAAE,CAAC,CAAC;AAC/E,SAAK;AACL,KAAG;AACH;AAEC,IAAC,OAAO,KAAK,CAAC,GAAG,IAAgB;AAAI,QAClC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;AAC7B;AACI,YAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAChD,SAAK;AACL,KAAG;AACH;AAEC,IAAC,OAAO,GAAG,CAAC,GAAG,IAAgB;AAAI,QAChC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AAC3B,YAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC5C,SAAK;AACL,KAAG;AACH;AAEC,IAAC,OAAO,IAAI,CAAC,GAAG,IAAgB;AAAI,QACjC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AAC5B;AACI,YAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC/C,SAAK;AACL,KAAG;AACH;AAEC,IAAC,OAAO,IAAI,CAAC,GAAG,IAAgB;AAAI,QACjC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AAC5B,YAAM,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC7C,SAAK;AACL,KAAG;AACH;AAEC,IAAC,OAAO,KAAK,CAAC,GAAG,IAAgB;AAAI,QAClC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;AAC7B,YAAM,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC9C,SAAK;AACL,KAAG;AACH;AAxEE;AACO,kBAAU,GAAG;AACtB,IAAI,GAAG,EAAI,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AAC/B,IAAI,KAAK,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AAC/B,IAAI,GAAG,EAAI,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AAC/B,IAAI,IAAI,EAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AAC/B,IAAI,IAAI,EAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AAC/B,IAAI,KAAK,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AAC/B,IAAI,IAAI,EAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AAC/B,CAAG,CAAC;AAEF;AACO,gBAAQ,GAAG,MAAM,CAAC;AA8D3B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAC,ICpGY,eAAe,GAA5B,MAAa,eAAe;AAAG,EAAC;AAAnB,eAAe,oBAR3B,QAAQ,CAAC,UACR,OAAO,EAAE;EACP,YAAY,UACb,UACD,YAAY,EAAE,CAAC,iBAAiB,CAAC,UACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC,UAC5B,SAAS,EAAE,CAAC,uBAAuB,CAAC,MACrC,CAAC,IACW,eAAe,CAAI;;cAChC;AAAC;AAAC,ICDW,gBAAgB,GAA7B,MAAa,gBAAgB;AAC7B,EAAC;AADY,gBAAgB,oBAZ5B,QAAQ,CAAC,UACR,OAAO,EAAE;CACP,gBAAgB,cAChB,cAAc,cACd,eAAe,UAChB,UACD,OAAO,EAAE,cACP,gBAAgB,cAChB;UAAc,cACd;SAAe,UAChB,MACF,CAAC;EACW,gBAAgB,CAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BACD;AAAC;ACnBD;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACoR","sourcesContent":["import {\r\n    Component,\r\n    ContentChild,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    PLATFORM_ID,\r\n    TemplateRef\r\n} from '@angular/core';\r\n\r\nimport {isPlatformBrowser} from '@angular/common';\r\n\r\n/**\r\n * An element that listens to viewport positioning and fires inView and notInview events\r\n * ### example\r\n * ```ts\r\n * <ngui-inview [observerOptions]=\"myObserverOptions\" (inview)=\"doA()\" (notInview)=\"doB()\">\r\n *   <img *ngIf src=\"https://picsum.photos/800/300?image=1>\r\n * </ngui-inview>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-inview',\r\n  template: `\r\n        <ng-container *ngIf=\"isInview\" [ngTemplateOutlet]=\"template\">\r\n        </ng-container>\r\n    `,\r\n  styles: [':host {display: block;}']\r\n})\r\nexport class NguiInviewComponent implements OnInit, OnDestroy {\r\n    /** <ng-template> reference */\r\n  @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>;\r\n\r\n    /** IntersectionObserver options */\r\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\r\n    /** Deprecated config. Use `observerOptions` instead.\r\n     * @deprecated Use `observerOptions` instead. */\r\n  @Input() options: any;\r\n  /** Controls whether blur effect is applied to a component with less than 80% intersection ratio.\r\n   * Only applies when there are no \"inview\" event handlers defined.\r\n   **/\r\n  @Input() blurEnabled = true;\r\n\r\n  @Output() inview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\r\n  @Output() notInview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\r\n\r\n  observer: IntersectionObserver;\r\n    /** indicates that this element is in viewport */\r\n  isInview = false;\r\n    /** indicates that this element is 80% in viewport. Used by the default callback */\r\n  once80PctVisible = false;\r\n\r\n  constructor(\r\n        private element: ElementRef,\r\n        @Inject(PLATFORM_ID) private platformId: any) {\r\n  }\r\n\r\n    /** Starts IntersectionObserver */\r\n  ngOnInit(): void {\r\n    if (this.options) {\r\n      this.observerOptions = this.options;\r\n    }\r\n\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\r\n      this.observer.observe(this.element.nativeElement);\r\n    }\r\n  }\r\n\r\n    /** stop IntersectionObserver */\r\n  ngOnDestroy(): void {\r\n    this.observer.disconnect();\r\n  }\r\n\r\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\r\n  handleIntersect(entries): void {\r\n    entries.forEach((entry: IntersectionObserverEntry) => {\r\n      if (entry['isIntersecting']) {\r\n        this.isInview = true;\r\n        this.defaultInviewHandler(entry);\r\n        this.inview.emit(entry);\r\n      } else {\r\n        this.notInview.emit(entry);\r\n      }\r\n    });\r\n  }\r\n\r\n    /**\r\n     * default intersection handler, which sets blur dependes on intersection ratio\r\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\r\n     */\r\n  defaultInviewHandler(entry): any {\r\n    if (!this.blurEnabled || this.once80PctVisible || this.inview.observers.length) {\r\n      return;\r\n    }\r\n\r\n    if (entry.intersectionRatio < 0.8) {\r\n      const opacity = entry.intersectionRatio * (1 / 0.8);\r\n      const blur = 20 - Math.floor(entry.intersectionRatio * 10) * 4;\r\n      const filter = `blur(${blur}px)`;\r\n      Object.assign(entry.target.style, {opacity, filter});\r\n    } else {\r\n      entry.target.style.opacity = 1;\r\n      entry.target.style.filter = 'unset';\r\n\r\n      this.once80PctVisible = true;\r\n    }\r\n  }\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    PLATFORM_ID\r\n} from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\n\r\n/**\r\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\r\n */\r\n@Directive({\r\n    selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\r\n})\r\nexport class NguiInviewDirective implements OnInit, OnDestroy {\r\n  observer: IntersectionObserver;\r\n\r\n    /** IntersectionObserver options */\r\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\r\n    /** Deprecated config. Use `observerOptions` instead.\r\n     * @deprecated Use `observerOptions` instead. */\r\n  @Input() options: any;\r\n\r\n    /** Event that will be fired when in viewport */\r\n  @Output() nguiInview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\r\n    /** Event that will be fired when out of  viewport */\r\n  @Output() nguiOutview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\r\n\r\n  constructor(\r\n        public element: ElementRef,\r\n        @Inject(PLATFORM_ID) private platformId: any) {\r\n  }\r\n\r\n    /** Starts IntersectionObserver */\r\n  ngOnInit(): void {\r\n    if (this.options) {\r\n      this.observerOptions = this.options;\r\n    }\r\n\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\r\n      this.observer.observe(this.element.nativeElement);\r\n    }\r\n  }\r\n\r\n    /** Stops IntersectionObserver */\r\n  ngOnDestroy(): void {\r\n    if (isPlatformBrowser(this.platformId) && this.observer) {\r\n      this.observer.disconnect();\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Fires (nguiInview) event when this element is in viewport\r\n     *  and fires (nguiOutview) event when this element is not in viewport\r\n     */\r\n  handleIntersect(entries): void {\r\n    entries.forEach((entry: IntersectionObserverEntry) => {\r\n      if (entry['isIntersecting']) {\r\n        this.nguiInview.emit(entry);\r\n      } else {\r\n        this.nguiOutview.emit(entry);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NguiInviewComponent} from './src/ngui-inview.component';\r\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\r\n\r\nexport {NguiInviewComponent, NguiInviewDirective};\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NguiInviewComponent,\r\n    NguiInviewDirective\r\n  ],\r\n  exports: [\r\n    NguiInviewComponent,\r\n    NguiInviewDirective\r\n  ]\r\n})\r\nexport class NguiInviewModule {\r\n}\r\n","/**\r\n * fire the given event with options on the element\r\n * @example\r\n * fireEvent(el, 'click');\r\n * fireEvent(el, 'keypress', {key: 'Enter'});\r\n */\r\nexport function fireEvent(el: HTMLElement, type: string, options: any = {}): boolean {\r\n  let event;\r\n  if (type === 'click' || type.match(/^mouse/)) {\r\n    event = new MouseEvent(type, options);\r\n  } else if (type.match(/^key/)) {\r\n    event = new KeyboardEvent(type, options);\r\n  } else if (type.match(/^touch/)) {\r\n    event = new TouchEvent(type, options);\r\n  }\r\n\r\n  return el.dispatchEvent(event);\r\n}\r\n","/**\r\n * Insert a component dynamically using a service\r\n *\r\n * ### Example\r\n * ```ts\r\n * import { DynamicComponentService } from './dynamic.component.service';\r\n * import { MyDynamicComponent } from './my-1.component';\r\n *\r\n * @Component({\r\n *   template: ` ... <div #dymamic></div>`\r\n * })\r\n * export class MyComponent {\r\n *   @ViewChild('dynamic', {read:ViewContainerRef}) vcr: ViewContainerRef;\r\n *\r\n *   constructor(public dcs: DynamicComponentService) {}\r\n *\r\n *   insertComp() {\r\n *     let compRef = this.dcs.createComponent(MyDynamicComponent, this.vcr);\r\n *     ths.dcs.insertComonent(cmpRef);\r\n *     compRef.instance.items = [1,2,3];              // dealing with @input\r\n *     compRef.instance.output$.subscribe(val => {}); // dealing with @output\r\n *   }\r\n * }\r\n * ```\r\n */\r\nimport {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Inject,\r\n  Injectable,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\n/**\r\n * Provide service to add or remove component dynamically\r\n */\r\n@Injectable()\r\nexport class DynamicComponentService {\r\n  /** used to create a factory from a component class */\r\n  factoryResolver: ComponentFactoryResolver;\r\n  /** defines where a dynamic components insert into */\r\n  rootViewContainer: ViewContainerRef;\r\n\r\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\r\n    this.factoryResolver = factoryResolver;\r\n  }\r\n\r\n  /**\r\n   * returns component reference\r\n   * The reason to seperate `createCompnent` and `insertComponent` is\r\n   * to allow some actions before we insert into a hostView.\r\n   * e.g styling, setting attributes, etc\r\n   */\r\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef<any> {\r\n    this.rootViewContainer = into || this.rootViewContainer;\r\n    const factory = this.factoryResolver.resolveComponentFactory(component);\r\n\r\n    return factory.create(this.rootViewContainer.parentInjector);\r\n  }\r\n\r\n  /**\r\n   * insert component\r\n   */\r\n  insertComponent(componentRef: ComponentRef<any>): Component {\r\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\r\n    componentRef.location.nativeElement.setAttribute('id', compId);\r\n    componentRef.instance.id = compId;\r\n\r\n    this.rootViewContainer.insert(componentRef.hostView);\r\n\r\n    return componentRef.instance;\r\n  }\r\n\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\n/**\r\n * A block of component that listens to inView and outView events,\r\n * so that it empties contents when out of view after backup items\r\n * and restores the contents when in view\r\n *\r\n * ### example\r\n * ```ts\r\n * <ngui-inview-page [items]=\"items\">\r\n *   <ng-template let-items=\"items\">\r\n *     <div *ngIf=\"items else noItems\">\r\n *       <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n *     </div>\r\n *   </ng-template>\r\n * </ngui-inview-page>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-inview-page',\r\n  template: `\r\n    <div class=\"inview-page contents\"\r\n      (nguiInview)=\"restoreItems()\"\r\n      (nguiOutview)=\"emptyItems()\">\r\n      <!-- add blank ngui-list-item by condition  -->\r\n      <!-- no match found ngui-list-item by condition -->\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"template||defaultTemplate\"\r\n        [ngTemplateOutletContext]=\"{items: items, outView: outView}\">\r\n      </ng-container>\r\n      <div *ngIf=\"outView\">{{ itemsBackup.length }} items hidden</div>\r\n    </div>\r\n\r\n    <ng-template #defaultTemplate>\r\n      <div *ngIf=\"!items\"> Error: requires [items] </div>\r\n      <div *ngIf=\"!template\"> Error: requires &lt;ng-template></div>\r\n    </ng-template>\r\n  `,\r\n  styles: [`\r\n    :host {display: block}\r\n  `]\r\n})\r\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\r\n\r\n  /** Allow users to change the contents */\r\n  @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>;\r\n  // @Input('template') template: TemplateRef<any>;\r\n\r\n  /** List of elements that are used to render this element */\r\n  @Input() items: Array<any>;\r\n\r\n  /** IntersectionObserver options */\r\n  options: any;\r\n  /** Indicates that the page of out of viewport */\r\n  outView = false;\r\n  /** The copy of items. This is set when this element is out of viewport */\r\n  itemsBackup: Array<any> = [];\r\n  /**\r\n   * The first element of this component.\r\n   * The height of it remains the same even when items get empty out.\r\n   */\r\n  contentsEl: HTMLElement;\r\n  destroyed: boolean;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    private cdRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  /**\r\n   * Restore items when in viewport, so that elements are rendered\r\n   */\r\n  restoreItems(): void {\r\n    if (this.outView) {\r\n      this.outView = false;\r\n      this.items = Array.from(this.itemsBackup || []);\r\n      this.itemsBackup = undefined;\r\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.contentsEl =\r\n      this.element.nativeElement.querySelector('.inview-page.contents');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log('NguiInviewPageComponent.ngOnDestroy() is called');\r\n    this.destroyed = true;\r\n  }\r\n\r\n  /**\r\n   * Empty items when not in viewport, so that elements are not rendered\r\n   */\r\n  emptyItems(): void {\r\n    if (this.items && this.contentsEl && !this.outView) {\r\n      // set height before emptying contents\r\n      const height = this.element.nativeElement.getBoundingClientRect().height;\r\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\r\n\r\n      this.outView = true;\r\n      this.itemsBackup = Array.from(this.items || []);\r\n      this.items = undefined;\r\n      if (!this.destroyed) {\r\n        this.cdRef.detectChanges();\r\n      }\r\n    }\r\n  }\r\n\r\n  setItems(items: Array<any>): void {\r\n    if (!this.destroyed) {\r\n      console.log('NguiInviewPageComponent.setItems() is called with', items);\r\n      this.items = items;\r\n      this.cdRef.detectChanges();\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentRef,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\r\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\r\n\r\n/**\r\n * Virtual List\r\n *\r\n * The `<ngui-inview ..>` inserts <ngui-inview-page> into\r\n * `<div #pages>` when it is in viewport\r\n * When it's inserted, it will be pushed down, which makes it out of viewport.\r\n * User scrolls down to see the bottom of the list,\r\n * then it will insert another `<ngui-inview-page>` again.\r\n *\r\n * <ngui-inview-page> listens to (nguiInview) and (nguiOutview) events,\r\n * when <ngui-inview-page> is out of view port, it empties out the contents.\r\n * and it restores back the contents when it is in viewport again.\r\n *\r\n * ### example\r\n * ```ts\r\n * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\r\n *   <ng-template let-items=\"items\">\r\n *     <div *ngIf=\"!items\">Loading</div>\r\n *     <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n *   </ng-template>\r\n * </ngui-virtual-list>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ngui-virtual-list',\r\n  template: `\r\n    <div class=\"ngui-virtual-list\"\r\n      (focus)=\"_focused = true\"\r\n      (click)=\"_focused = true\">\r\n      <!-- hold multiple <ngui-inview-page> -->\r\n      <div #pages></div>\r\n      <!-- insert <ngui-inview-page> into #pages -->\r\n    </div>\r\n    <ngui-inview (inview)=\"addAnInviewPageToPages()\"></ngui-inview>\r\n  `,\r\n  styles: [`\r\n    :host {display: block}\r\n  `]\r\n})\r\nexport class NguiVirtualListComponent implements AfterViewInit {\r\n\r\n  /** the container NguiInviewPage will be inserted */\r\n  @ViewChild('pages', { read: ViewContainerRef }) pagesRef: ViewContainerRef;\r\n  /** Template of NguiInviewPage. Allow users to define their own template  */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n  /** Fired when child `<ngui-list-item>` is selected */\r\n  @Output() selected: EventEmitter<any> = new EventEmitter();\r\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\r\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Event fired when bottom of the virtual list is in view\r\n   * The handler of this event must call `$event.addItems(items: Array<any>)` to fill contents\r\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\r\n   *\r\n   * ### example\r\n   * ```ts\r\n   * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\r\n   *   <ng-template let-items=\"items\">\r\n   *     <div *ngIf=\"items else noItems\">\r\n   *        <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\r\n   *     </div>\r\n   *     <ng-template #noItems>Loading</ng-template>\r\n   *   </ng-template>\r\n   * </ngui-virtual-list>\r\n   * ```\r\n   */\r\n  @Output() bottomInview: EventEmitter<any> = new EventEmitter();\r\n\r\n  /** The last NguiInviewPageComponent being inserted */\r\n  inviewPage: ComponentRef<NguiInviewPageComponent>;\r\n  _focused = false;\r\n  /** Indicates if a page is still loading */\r\n  isListLoading: boolean;\r\n  inviewPages: Array<ComponentRef<NguiInviewPageComponent>> = [];\r\n\r\n  constructor(\r\n    public renderer: Renderer2,\r\n    public element: ElementRef,\r\n    public dynamicComponentService: DynamicComponentService,\r\n    public cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /** Check if necessary input and output is provided */\r\n  ngAfterViewInit(): void {\r\n    if (!this.template || !this.bottomInview.observers.length) {\r\n      console.error('<ngui-virtual-list> requires [template] and {bottomInview)');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When the bottom is inview port, this function is called\r\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\r\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\r\n   */\r\n  addAnInviewPageToPages(): void {\r\n    if (!this.isListLoading) {\r\n      this.isListLoading = true;\r\n\r\n      this.inviewPage =\r\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\r\n      this.dynamicComponentService.insertComponent(this.inviewPage);\r\n\r\n      this.inviewPage.instance.template = this.template;\r\n      this.inviewPages.push(this.inviewPage);\r\n\r\n      this.bottomInview.emit(this); // fire event, so that user can load items\r\n    } else {\r\n      console.log('Already a page being inserted, skipping adding a page');\r\n    }\r\n  }\r\n\r\n  // set items of NguiInviewPageComponent\r\n  addList(items: Array<any>): void {\r\n    this.isListLoading = false;\r\n    console.log('>>>>>> NguiVirtualListComponent.addList() is called()');\r\n    this.inviewPage.instance.setItems(items);\r\n  }\r\n\r\n}\r\n","export class NoMatchFound {\r\n  html = 'No Match Found';\r\n}\r\n","export class NoneSelect {\r\n  html = 'Select';\r\n}\r\n","import {\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\nimport { fireEvent } from '../../ngui-utils/src/fire-event';\r\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\r\nimport { NoMatchFound } from './no-match-found';\r\nimport { NoneSelect } from './none-select';\r\nimport {fromEvent} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ngui-autocomplete',\r\n  template: `\r\n    <ng-container *ngIf=\"isReady\">\r\n      <div class=\"ngui-autocomplete\">\r\n        <div #pages></div>\r\n      </div>\r\n      <ngui-inview (inview)=\"addMorePages()\"></ngui-inview>\r\n    </ng-container>\r\n  `,\r\n  styles: [`\r\n    :host {position: absolute; background-color: #fff; max-height: 300px; overflow: auto}\r\n    .ngui-autocomplete { border: 1px solid #ccc; padding: 4px }\r\n  `]\r\n})\r\nexport class NguiAutocompleteComponent extends NguiVirtualListComponent implements OnInit {\r\n  @Input() for: string; // input tag id\r\n  @Input() minInputChars = 1;\r\n  @Input() blankOption = 'Select One';\r\n  @Input() noMatchItem = 'No Match Found';\r\n\r\n  /** Template of NguiInviewPage. Allow users to define their own template  */\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n\r\n  inputEl: HTMLInputElement;\r\n  _focused: any = {input: false, listItem: false};\r\n  _focusTimer;\r\n  _acTimer;\r\n  _selectedFromList: boolean;\r\n  _escapedFromList: boolean;\r\n  _orgInputValue: string;\r\n  _prevInputValue: string;\r\n  _lastSelected: any;\r\n\r\n  /**\r\n   * returns autocomplete display condition\r\n   * autocompolete list is only visible\r\n   *   - when input element is focused or list element is focused\r\n   *   - when input value has enought characters\r\n   *   - and user just did not selected or escaped\r\n   */\r\n  get isReady(): boolean {\r\n    const selectedOrEscaped = this._selectedFromList || this._escapedFromList;\r\n    const focused = this._focused.input || this._focused.listItem;\r\n    const minChars = this.inputEl.value.length >= this.minInputChars;\r\n\r\n    return (!selectedOrEscaped && focused && minChars);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.inputEl = <HTMLInputElement> document.querySelector('#' + this.for); // tslint:disable-line\r\n    this.positionThisUnderInputEl();\r\n\r\n    fromEvent(this.inputEl, 'keyup').subscribe(this.onInputElKeyup.bind(this));\r\n    this.inputEl.addEventListener('focus', this.onInputElFocused.bind(this));\r\n    this.inputEl.addEventListener('blur', this.onInputElBlurred.bind(this));\r\n    this.selected.subscribe(this.onSelected.bind(this));\r\n    this.escaped.subscribe(this.onEscaped.bind(this));\r\n  }\r\n\r\n  onSelected(value): void {\r\n    this._selectedFromList = true;\r\n    this.inputEl.focus();\r\n    this._lastSelected = value;\r\n    this.cdr.detectChanges();    // for ChangeDetectionStrategy.OnPush\r\n    console.log('NguiAutoCompleteComponent.onSelected() is called', value);\r\n  }\r\n\r\n  onEscaped(): void {\r\n    this._escapedFromList = true;\r\n    this.inputEl.focus();\r\n    if (!this._lastSelected) {\r\n      this.inputEl.value = this._orgInputValue;\r\n    }\r\n    this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\r\n    console.log('NguiAutoCompleteComponent.onEscaped() is called');\r\n  }\r\n\r\n  onInputElFocused(event): void {\r\n    console.log('NguiAutoCompleteComponent.onInputElFocused() is called', event);\r\n    this.isListLoading = false;\r\n    if (typeof this._orgInputValue === 'undefined') {\r\n      this._orgInputValue = this.inputEl.value;\r\n    }\r\n    this._prevInputValue = this.inputEl.value;\r\n    this.setFocused('input', true);\r\n  }\r\n\r\n  onInputElBlurred(): void {\r\n    this.setFocused('input', false);\r\n  }\r\n\r\n  clearList(): void {\r\n    this.inviewPages.forEach(compRef => {\r\n      compRef.destroy();\r\n    });\r\n    this.inviewPages = [];\r\n  }\r\n\r\n  onInputElKeyup(event: KeyboardEvent): void {\r\n    console.log('NguiAutoCompleteComponent.onInputKeyup() is called', event.key);\r\n    const firstList = this.element.nativeElement.querySelector('ngui-list-item');\r\n    if (event.key === 'Enter' || event.key === 'Escape') {\r\n      if (firstList) {\r\n        fireEvent(firstList, 'keyup', {key: event.key});\r\n      } else {\r\n        this.onEscaped();\r\n      }\r\n    } else if ((event.key === 'ArrowDown' || event.key === 'ArrowRight') && firstList) {\r\n      firstList.focus();\r\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\r\n      //\r\n    } else if (this.inputEl.value.length >= this.minInputChars) {\r\n      this._selectedFromList = false;\r\n      this._escapedFromList = false;\r\n      this.addAutocompleteList();\r\n    }\r\n  }\r\n\r\n  /** Complete the first page of autocomplete */\r\n  addAutocompleteList(): void {\r\n    if (this.isReady) {\r\n      clearTimeout(this._acTimer);\r\n      this._acTimer = setTimeout(() => {\r\n        this.isListLoading = false; // ???????/\r\n        this._prevInputValue = this.inputEl.value;\r\n        this._escapedFromList = false;\r\n        this._selectedFromList = false;\r\n        this.clearList();\r\n        this.addAnInviewPageToPages();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  /** Complete after the first page of autocomplete when it scrolls to the bottom */\r\n  addMorePages(): void {\r\n    if (this.inviewPages.length) {\r\n      this.addAnInviewPageToPages();\r\n    }\r\n  }\r\n\r\n  setFocused(elType: 'input' | 'listItem', val: boolean): void {\r\n    if (val) {\r\n      clearTimeout(this._focusTimer);\r\n      this._focused = {input: false, listItem: false};\r\n      this._focused[elType] = true;\r\n    } else {\r\n      this._focusTimer = setTimeout(() => {\r\n        this._focused[elType] = false;\r\n        this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  positionThisUnderInputEl(): void {\r\n    const thisEl = this.element.nativeElement;\r\n    const thisInputElBCR = this.inputEl.getBoundingClientRect();\r\n    const top = thisInputElBCR.top + thisInputElBCR.height + window.scrollY;\r\n\r\n    this.renderer.setStyle(thisEl, 'left', `${thisInputElBCR.left}px`);\r\n    this.renderer.setStyle(thisEl, 'top', `${top}px`);\r\n    this.renderer.setStyle(thisEl, 'minWidth', `${thisInputElBCR.width}px`);\r\n  }\r\n\r\n  // set items of NguiInviewPageComponent\r\n  addList(items: Array<any>): void {\r\n    console.log('>>>>>> NguiAutocompleteComponent.addList() is called()');\r\n    this.isListLoading = false;\r\n\r\n    // TODO: ........ for 1st page only, show no match found or blank option\r\n    let noMatchItem: any;\r\n    let blankItem: any = {};\r\n    if (this.inviewPages.length === 1) {\r\n      if (this.noMatchItem && (!items || items.length === 0)) { // add no match item\r\n        noMatchItem = new NoMatchFound();\r\n        blankItem.html = this.noMatchItem;\r\n      } else if (this.blankOption) {\r\n        blankItem = new NoneSelect();\r\n        blankItem.html = this.blankOption;\r\n      }\r\n    }\r\n\r\n    const allItems = [].concat(noMatchItem, blankItem, items).filter(x => x);\r\n    this.inviewPage.instance.setItems(allItems);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Output\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'ngui-list' // tslint:disable-line\r\n})\r\nexport class NguiListDirective {\r\n  /** Fired when child `<ngui-list-item>` is selected */\r\n  @Output() selected: EventEmitter<any> = new EventEmitter();\r\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\r\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(public element: ElementRef) { }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { NguiListDirective } from './ngui-list.directive';\r\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\r\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\r\nimport { NoneSelect } from './none-select';\r\nimport { NoMatchFound } from './no-match-found';\r\n\r\n// tabindex, keydown, keyup(ENTER, ESC), click\r\n@Directive({\r\n  selector: 'ngui-list-item' // tslint:disable-line\r\n})\r\nexport class NguiListItemDirective implements OnInit {\r\n  @Input('item') object: any; // tslint:disable-line\r\n\r\n  nextSibling: HTMLElement;\r\n  prevSibling: HTMLElement;\r\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n    private viewContainer: ViewContainerRef,\r\n    @Optional() @Host() private listDirective: NguiListDirective,\r\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\r\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\r\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\r\n    if (!this.parentListComp) {\r\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\r\n    }\r\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\r\n      this.viewContainer.clear();\r\n      this.el.nativeElement.innerHTML = this.object.html;\r\n    }\r\n  }\r\n\r\n  // handles keyboard up, down, left, right\r\n  @HostListener('keydown', ['$event']) keydown(event): void {\r\n    const thisListItem = this.el.nativeElement;\r\n    const keyCode = event.which || event.keyCode;\r\n    const parentListEl = this.parentListComp.element.nativeElement;\r\n    const listItems: Array<HTMLElement>\r\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\r\n    const listItemNdx = listItems.indexOf(thisListItem);\r\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\r\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\r\n\r\n    switch (keyCode) {\r\n    case 37: case 38: // up arrow, left arrow\r\n      prevListItem.focus();\r\n      break;\r\n    case 39: case 40: // down arrow, right arrow\r\n      nextListItem.focus();\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  // handles keyboard enter(13), esc(27)\r\n  @HostListener('keyup', ['$event']) keyup(event): void {\r\n    switch (event.key) {\r\n    case 'Enter':\r\n      this.parentListComp.selected.emit(this.object);\r\n      break;\r\n    case 'Escape':\r\n      this.parentListComp.escaped.emit();\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event']) mousedown(): void {\r\n    this.parentListComp.selected.emit(this.object);\r\n  }\r\n\r\n  @HostListener('focus', ['$event']) focused(): void {\r\n    if (this.parentListComp['setFocused']) {\r\n      this.parentListComp['setFocused']('listItem', true);\r\n    }\r\n  }\r\n\r\n  @HostListener('blur', ['$event']) blurred(): void {\r\n    if (this.parentListComp['setFocused']) {\r\n      this.parentListComp['setFocused']('listItem', false);\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\r\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\r\nimport {NguiListDirective} from './src/ngui-list.directive';\r\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\r\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\r\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\r\n\r\nexport {NguiAutocompleteComponent, NguiListItemDirective, NguiListDirective, NguiInviewPageComponent, NguiVirtualListComponent};\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NguiInviewModule\r\n  ],\r\n  declarations: [\r\n    NguiAutocompleteComponent,\r\n    NguiInviewPageComponent,\r\n    NguiListDirective,\r\n    NguiListItemDirective,\r\n    NguiVirtualListComponent\r\n  ],\r\n  exports: [\r\n    NguiAutocompleteComponent,\r\n    NguiInviewPageComponent,\r\n    NguiListDirective,\r\n    NguiListItemDirective,\r\n    NguiVirtualListComponent\r\n  ],\r\n  entryComponents: [NguiInviewPageComponent]\r\n})\r\nexport class NguiListModule {\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'nguiHighlight' })\r\nexport class NguiHighlightPipe implements PipeTransform {\r\n  transform(text: string, search: string): string {\r\n    let ret = text;\r\n    if (search) {\r\n      const re  = new RegExp(search, 'ig');\r\n      ret = text.replace(re, match => `<span class=\"ngui-highlight\">${match}</span>`);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n}\r\n","/**\r\n * window.konsole alternative\r\n * ### example\r\n * ```\r\n * konsole.setLogLevel('error');\r\n * konwole.log(1,2,3,4,5);\r\n * ```\r\n */\r\nexport abstract class konsole { // tslint:disable-line\r\n  /** all log levels */\r\n  static LOG_LEVELS = {\r\n    ALL:   parseInt('00000', 2),\r\n    DEBUG: parseInt('00001', 2),\r\n    LOG:   parseInt('00010', 2),\r\n    INFO:  parseInt('00100', 2),\r\n    WARN:  parseInt('01000', 2),\r\n    ERROR: parseInt('10000', 2),\r\n    NONE:  parseInt('11111', 2)\r\n  };\r\n\r\n  /** current log level set by setLogLevel, default 'INFO' */\r\n  static logLevel = 'INFO';\r\n\r\n  /** returns if it should call `window.console` or not */\r\n  static toLog(param): boolean { // returns to log or not\r\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\r\n    const requiredNum = this.LOG_LEVELS[param];\r\n\r\n    return requiredNum > restrictionNum;\r\n  }\r\n\r\n  /** sets the current log level */\r\n  static setLogLevel(logLevel: string): any {\r\n    logLevel = logLevel.toUpperCase();\r\n    const logLevels = Object.keys(this.LOG_LEVELS);\r\n    if (logLevels.indexOf(logLevel) > -1) {\r\n      if (window && window.sessionStorage) { // for browser env.\r\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\r\n      }\r\n      this.logLevel = logLevel;\r\n    } else {\r\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\r\n  static debug(...args: Array<any>): void {\r\n    if (this.toLog('DEBUG')) {\r\n        // noinspection TsLint\r\n        console.debug.apply(console, arguments); // tslint:disable-line\r\n    }\r\n  }\r\n\r\n  /** The same as `console.log()` if the current log level is greater than `log` */\r\n  static log(...args: Array<any>): void {\r\n    if (this.toLog('LOG')) {\r\n      console.log.apply(console, arguments);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.info()` if the current log level is greater than `info` */\r\n  static info(...args: Array<any>): void {\r\n    if (this.toLog('INFO')) {\r\n        // noinspection TsLint\r\n        console.info.apply(console, arguments); // tslint:disable-line\r\n    }\r\n  }\r\n\r\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\r\n  static warn(...args: Array<any>): void {\r\n    if (this.toLog('WARN')) {\r\n      console.warn.apply(console, arguments);\r\n    }\r\n  }\r\n\r\n  /** The same as `console.error()` if the current log level is greater than `error` */\r\n  static error(...args: Array<any>): void {\r\n    if (this.toLog('ERROR')) {\r\n      console.error.apply(console, arguments);\r\n    }\r\n  }\r\n}\r\n\r\n// konsole.setLogLevel('all');\r\n// konsole.debug('yes');\r\n// konsole.log('yes');\r\n// konsole.info('yes');\r\n// konsole.warn('yes');\r\n// konsole.error('yes');\r\n\r\n// konsole.setLogLevel('none');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('no');\r\n// konsole.warn('no');\r\n// konsole.error('no');\r\n\r\n// konsole.setLogLevel('info');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('yes');\r\n// konsole.warn('yes');\r\n// konsole.error('yes');\r\n\r\n// konsole.setLogLevel('WARN');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('no');\r\n// konsole.warn('yes');\r\n// konsole.error('yes');\r\n\r\n// konsole.setLogLevel('ERROR');\r\n// konsole.debug('no');\r\n// konsole.log('no');\r\n// konsole.info('no');\r\n// konsole.warn('no');\r\n// konsole.error('yes');\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\r\nimport {DynamicComponentService} from './src/dynamic-component.service';\r\nimport { konsole } from './src/konsole';\r\nimport { fireEvent } from './src/fire-event';\r\n\r\nexport {DynamicComponentService, NguiHighlightPipe, konsole, fireEvent};\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [NguiHighlightPipe],\r\n  exports: [NguiHighlightPipe],\r\n  providers: [DynamicComponentService]\r\n})\r\nexport class NguiUtilsModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\r\nimport {NguiListModule} from './ngui-list/ngui-list.module';\r\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NguiInviewModule,\r\n    NguiListModule,\r\n    NguiUtilsModule\r\n  ],\r\n  exports: [\r\n    NguiInviewModule,\r\n    NguiListModule,\r\n    NguiUtilsModule\r\n  ]\r\n})\r\nexport class NguiCommonModule {\r\n}\r\n","/*\r\n * Public API Surface of ngui-common\r\n */\r\n\r\nexport * from './lib/ngui-inview/ngui-inview.module';\r\nexport * from './lib/ngui-list/ngui-list.module';\r\nexport * from './lib/ngui-utils/ngui-utils.module';\r\nexport * from './lib/ngui-common.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}